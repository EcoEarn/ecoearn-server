// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ecoearn_tokens.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EcoEarn.Contracts.Tokens {

  /// <summary>Holder for reflection information generated from ecoearn_tokens.proto</summary>
  public static partial class EcoearnTokensReflection {

    #region Descriptor
    /// <summary>File descriptor for ecoearn_tokens.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EcoearnTokensReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRlY29lYXJuX3Rva2Vucy5wcm90bxoPYWVsZi9jb3JlLnByb3RvGhJhZWxm",
            "L29wdGlvbnMucHJvdG8aC2FjczEyLnByb3RvGhtnb29nbGUvcHJvdG9idWYv",
            "ZW1wdHkucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8i",
            "SgoNUmVnaXN0ZXJJbnB1dBIbCgdkYXBwX2lkGAEgASgLMgouYWVsZi5IYXNo",
            "EhwKBWFkbWluGAIgASgLMg0uYWVsZi5BZGRyZXNzIkUKCERhcHBJbmZvEhsK",
            "B2RhcHBfaWQYASABKAsyCi5hZWxmLkhhc2gSHAoFYWRtaW4YAiABKAsyDS5h",
            "ZWxmLkFkZHJlc3MirAQKFUNyZWF0ZVRva2Vuc1Bvb2xJbnB1dBIbCgdkYXBw",
            "X2lkGAEgASgLMgouYWVsZi5IYXNoEhQKDHJld2FyZF90b2tlbhgCIAEoCRIS",
            "CgpzdGFydF90aW1lGAMgASgDEhAKCGVuZF90aW1lGAQgASgDEhkKEXJld2Fy",
            "ZF9wZXJfc2Vjb25kGAUgASgDEhUKDXN0YWtpbmdfdG9rZW4YBiABKAkSGgoS",
            "Zml4ZWRfYm9vc3RfZmFjdG9yGAcgASgDEhYKDm1pbmltdW1fYW1vdW50GAgg",
            "ASgDEh4KFm1heGltdW1fc3Rha2VfZHVyYXRpb24YCSABKAMSHAoUbWluaW11",
            "bV9jbGFpbV9hbW91bnQYCiABKAMSJAocbWluaW11bV9hZGRfbGlxdWlkaXR5",
            "X2Ftb3VudBgLIAEoAxIeChZtaW5pbXVtX3N0YWtlX2R1cmF0aW9uGAwgASgD",
            "EiwKFXJld2FyZF90b2tlbl9jb250cmFjdBgNIAEoCzINLmFlbGYuQWRkcmVz",
            "cxIrChRzdGFrZV90b2tlbl9jb250cmFjdBgOIAEoCzINLmFlbGYuQWRkcmVz",
            "cxIkCg1zd2FwX2NvbnRyYWN0GA8gASgLMg0uYWVsZi5BZGRyZXNzEh4KFnVu",
            "bG9ja193aW5kb3dfZHVyYXRpb24YECABKAMSFwoPcmVsZWFzZV9wZXJpb2Rz",
            "GBEgAygDEhYKDm1lcmdlX2ludGVydmFsGBIgASgDIsIEChBUb2tlbnNQb29s",
            "Q29uZmlnEhQKDHJld2FyZF90b2tlbhgBIAEoCRIuCgpzdGFydF90aW1lGAIg",
            "ASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghlbmRfdGltZRgD",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASGQoRcmV3YXJkX3Bl",
            "cl9zZWNvbmQYBCABKAMSFQoNc3Rha2luZ190b2tlbhgFIAEoCRIaChJmaXhl",
            "ZF9ib29zdF9mYWN0b3IYBiABKAMSFgoObWluaW11bV9hbW91bnQYByABKAMS",
            "HgoWbWluaW11bV9zdGFrZV9kdXJhdGlvbhgIIAEoAxIeChZtYXhpbXVtX3N0",
            "YWtlX2R1cmF0aW9uGAkgASgDEhwKFG1pbmltdW1fY2xhaW1fYW1vdW50GAog",
            "ASgDEiQKHG1pbmltdW1fYWRkX2xpcXVpZGl0eV9hbW91bnQYCyABKAMSLAoV",
            "cmV3YXJkX3Rva2VuX2NvbnRyYWN0GAwgASgLMg0uYWVsZi5BZGRyZXNzEisK",
            "FHN0YWtlX3Rva2VuX2NvbnRyYWN0GA0gASgLMg0uYWVsZi5BZGRyZXNzEiQK",
            "DXN3YXBfY29udHJhY3QYDiABKAsyDS5hZWxmLkFkZHJlc3MSHgoWdW5sb2Nr",
            "X3dpbmRvd19kdXJhdGlvbhgPIAEoAxIXCg9yZWxlYXNlX3BlcmlvZHMYECAD",
            "KAMSFgoObWVyZ2VfaW50ZXJ2YWwYESABKAMiSgoZU2V0VG9rZW5zUG9vbEVu",
            "ZFRpbWVJbnB1dBIbCgdwb29sX2lkGAEgASgLMgouYWVsZi5IYXNoEhAKCGVu",
            "ZF90aW1lGAIgASgDIlYKHlNldFRva2Vuc1Bvb2xSZXdhcmRDb25maWdJbnB1",
            "dBIbCgdwb29sX2lkGAEgASgLMgouYWVsZi5IYXNoEhcKD3JlbGVhc2VfcGVy",
            "aW9kcxgCIAMoAyIYCghMb25nTGlzdBIMCgRkYXRhGAEgAygDItgBCh1TZXRU",
            "b2tlbnNQb29sU3Rha2VDb25maWdJbnB1dBIbCgdwb29sX2lkGAEgASgLMgou",
            "YWVsZi5IYXNoEhYKDm1pbmltdW1fYW1vdW50GAIgASgDEh4KFm1heGltdW1f",
            "c3Rha2VfZHVyYXRpb24YAyABKAMSHAoUbWluaW11bV9jbGFpbV9hbW91bnQY",
            "BCABKAMSHgoWbWluaW11bV9zdGFrZV9kdXJhdGlvbhgFIAEoAxIkChxtaW5p",
            "bXVtX2FkZF9saXF1aWRpdHlfYW1vdW50GAYgASgDIl0KIlNldFRva2Vuc1Bv",
            "b2xGaXhlZEJvb3N0RmFjdG9ySW5wdXQSGwoHcG9vbF9pZBgBIAEoCzIKLmFl",
            "bGYuSGFzaBIaChJmaXhlZF9ib29zdF9mYWN0b3IYAiABKAMiWwohU2V0VG9r",
            "ZW5zUG9vbFJld2FyZFBlclNlY29uZElucHV0EhsKB3Bvb2xfaWQYASABKAsy",
            "Ci5hZWxmLkhhc2gSGQoRcmV3YXJkX3Blcl9zZWNvbmQYAiABKAMiZQomU2V0",
            "VG9rZW5zUG9vbFVubG9ja1dpbmRvd0R1cmF0aW9uSW5wdXQSGwoHcG9vbF9p",
            "ZBgBIAEoCzIKLmFlbGYuSGFzaBIeChZ1bmxvY2tfd2luZG93X2R1cmF0aW9u",
            "GAIgASgDIlYKH1NldFRva2Vuc1Bvb2xNZXJnZUludGVydmFsSW5wdXQSGwoH",
            "cG9vbF9pZBgBIAEoCzIKLmFlbGYuSGFzaBIWCg5tZXJnZV9pbnRlcnZhbBgC",
            "IAEoAyJBChFHZXRQb29sSW5mb091dHB1dBIcCglwb29sX2luZm8YASABKAsy",
            "CS5Qb29sSW5mbxIOCgZzdGF0dXMYAiABKAgilAEKCFBvb2xJbmZvEhsKB2Rh",
            "cHBfaWQYASABKAsyCi5hZWxmLkhhc2gSGwoHcG9vbF9pZBgCIAEoCzIKLmFl",
            "bGYuSGFzaBIhCgZjb25maWcYAyABKAsyES5Ub2tlbnNQb29sQ29uZmlnEisK",
            "EHByZWNpc2lvbl9mYWN0b3IYBCABKAsyES5hZWxmLkJpZ0ludFZhbHVlIqoB",
            "CghQb29sRGF0YRIbCgdwb29sX2lkGAEgASgLMgouYWVsZi5IYXNoEi4KE2Fj",
            "Y190b2tlbl9wZXJfc2hhcmUYAiABKAsyES5hZWxmLkJpZ0ludFZhbHVlEjQK",
            "EGxhc3RfcmV3YXJkX3RpbWUYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGlt",
            "ZXN0YW1wEhsKE3RvdGFsX3N0YWtlZF9hbW91bnQYBCABKAMiSQoKU3Rha2VJ",
            "bnB1dBIbCgdwb29sX2lkGAEgASgLMgouYWVsZi5IYXNoEg4KBmFtb3VudBgC",
            "IAEoAxIOCgZwZXJpb2QYAyABKAMipwIKCVN0YWtlSW5mbxIcCghzdGFrZV9p",
            "ZBgBIAEoCzIKLmFlbGYuSGFzaBIbCgdwb29sX2lkGAIgASgLMgouYWVsZi5I",
            "YXNoEh4KB2FjY291bnQYAyABKAsyDS5hZWxmLkFkZHJlc3MSFQoNc3Rha2lu",
            "Z190b2tlbhgEIAEoCRIWCg5zdGFraW5nX3BlcmlvZBgFIAEoAxIvCgt1bmxv",
            "Y2tfdGltZRgGIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASNwoT",
            "bGFzdF9vcGVyYXRpb25fdGltZRgHIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5U",
            "aW1lc3RhbXASJgoPc3ViX3N0YWtlX2luZm9zGAggAygLMg0uU3ViU3Rha2VJ",
            "bmZvIoYCCgxTdWJTdGFrZUluZm8SIAoMc3ViX3N0YWtlX2lkGAEgASgLMgou",
            "YWVsZi5IYXNoEhUKDXN0YWtlZF9hbW91bnQYAiABKAMSGwoTZWFybHlfc3Rh",
            "a2VkX2Ftb3VudBgDIAEoAxIbChNzdGFrZWRfYmxvY2tfbnVtYmVyGAQgASgD",
            "Ei8KC3N0YWtlZF90aW1lGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcBIOCgZwZXJpb2QYBiABKAMSFgoOYm9vc3RlZF9hbW91bnQYByABKAMS",
            "EwoLcmV3YXJkX2RlYnQYCCABKAMSFQoNcmV3YXJkX2Ftb3VudBgJIAEoAyLB",
            "AQoNU3Rha2VGb3JJbnB1dBIbCgdwb29sX2lkGAEgASgLMgouYWVsZi5IYXNo",
            "Eg4KBmFtb3VudBgCIAEoAxIOCgZwZXJpb2QYAyABKAMSIwoMZnJvbV9hZGRy",
            "ZXNzGAQgASgLMg0uYWVsZi5BZGRyZXNzEjgKFGxvbmdlc3RfcmVsZWFzZV90",
            "aW1lGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIUCgxpc19s",
            "aXF1aWRpdHkYBiABKAgiOQoKUmVuZXdJbnB1dBIbCgdwb29sX2lkGAEgASgL",
            "MgouYWVsZi5IYXNoEg4KBnBlcmlvZBgCIAEoAyIvCg5HZXRSZXdhcmRJbnB1",
            "dBIdCglzdGFrZV9pZHMYASADKAsyCi5hZWxmLkhhc2giNAoPR2V0UmV3YXJk",
            "T3V0cHV0EiEKDHJld2FyZF9pbmZvcxgBIAMoCzILLlJld2FyZEluZm8ihwEK",
            "ClJld2FyZEluZm8SHAoIc3Rha2VfaWQYASABKAsyCi5hZWxmLkhhc2gSGwoH",
            "cG9vbF9pZBgCIAEoCzIKLmFlbGYuSGFzaBIeCgdhY2NvdW50GAMgASgLMg0u",
            "YWVsZi5BZGRyZXNzEg4KBnN5bWJvbBgEIAEoCRIOCgZhbW91bnQYBSABKAMi",
            "UQoSR2V0U3Rha2VJbmZvT3V0cHV0Eh4KCnN0YWtlX2luZm8YASABKAsyCi5T",
            "dGFrZUluZm8SGwoTaXNfaW5fdW5sb2NrX3dpbmRvdxgCIAEoCCJhChFSZWNv",
            "dmVyVG9rZW5JbnB1dBIbCgdwb29sX2lkGAEgASgLMgouYWVsZi5IYXNoEg0K",
            "BXRva2VuGAIgASgJEiAKCXJlY2lwaWVudBgDIAEoCzINLmFlbGYuQWRkcmVz",
            "cyKMAgoPSW5pdGlhbGl6ZUlucHV0EhwKBWFkbWluGAEgASgLMg0uYWVsZi5B",
            "ZGRyZXNzEi4KF2Vjb2Vhcm5fcG9pbnRzX2NvbnRyYWN0GAIgASgLMg0uYWVs",
            "Zi5BZGRyZXNzEi8KGGVjb2Vhcm5fcmV3YXJkc19jb250cmFjdBgDIAEoCzIN",
            "LmFlbGYuQWRkcmVzcxIXCg9jb21taXNzaW9uX3JhdGUYBCABKAMSIAoJcmVj",
            "aXBpZW50GAUgASgLMg0uYWVsZi5BZGRyZXNzEh4KFmlzX3JlZ2lzdGVyX3Jl",
            "c3RyaWN0ZWQYBiABKAgSHwoXbWF4aW11bV9wb3NpdGlvbl9hbW91bnQYByAB",
            "KAMihAEKBkNvbmZpZxIXCg9jb21taXNzaW9uX3JhdGUYASABKAMSIAoJcmVj",
            "aXBpZW50GAIgASgLMg0uYWVsZi5BZGRyZXNzEh4KFmlzX3JlZ2lzdGVyX3Jl",
            "c3RyaWN0ZWQYAyABKAgSHwoXbWF4aW11bV9wb3NpdGlvbl9hbW91bnQYBCAB",
            "KAMiTgoRU2V0RGFwcEFkbWluSW5wdXQSGwoHZGFwcF9pZBgBIAEoCzIKLmFl",
            "bGYuSGFzaBIcCgVhZG1pbhgCIAEoCzINLmFlbGYuQWRkcmVzcyJSChNHZXRV",
            "c2VyU3Rha2VJZElucHV0EhsKB3Bvb2xfaWQYASABKAsyCi5hZWxmLkhhc2gS",
            "HgoHYWNjb3VudBgCIAEoCzINLmFlbGYuQWRkcmVzcyJVChZHZXRVc2VyU3Rh",
            "a2VDb3VudElucHV0EhsKB3Bvb2xfaWQYASABKAsyCi5hZWxmLkhhc2gSHgoH",
            "YWNjb3VudBgCIAEoCzINLmFlbGYuQWRkcmVzcyJeCg9Qb29sQWRkcmVzc0lu",
            "Zm8SJAoNc3Rha2VfYWRkcmVzcxgBIAEoCzINLmFlbGYuQWRkcmVzcxIlCg5y",
            "ZXdhcmRfYWRkcmVzcxgCIAEoCzINLmFlbGYuQWRkcmVzcyJNCgpSZWdpc3Rl",
            "cmVkEhsKB2RhcHBfaWQYASABKAsyCi5hZWxmLkhhc2gSHAoFYWRtaW4YAiAB",
            "KAsyDS5hZWxmLkFkZHJlc3M6BKC7GAEirgEKEVRva2Vuc1Bvb2xDcmVhdGVk",
            "EhsKB2RhcHBfaWQYASABKAsyCi5hZWxmLkhhc2gSIQoGY29uZmlnGAIgASgL",
            "MhEuVG9rZW5zUG9vbENvbmZpZxIbCgdwb29sX2lkGAMgASgLMgouYWVsZi5I",
            "YXNoEg4KBmFtb3VudBgEIAEoAxImCgxhZGRyZXNzX2luZm8YBSABKAsyEC5Q",
            "b29sQWRkcmVzc0luZm86BKC7GAEidwoUVG9rZW5zUG9vbEVuZFRpbWVTZXQS",
            "GwoHcG9vbF9pZBgBIAEoCzIKLmFlbGYuSGFzaBIsCghlbmRfdGltZRgCIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASDgoGYW1vdW50GAMgASgD",
            "OgSguxgBImIKGVRva2Vuc1Bvb2xSZXdhcmRDb25maWdTZXQSGwoHcG9vbF9p",
            "ZBgBIAEoCzIKLmFlbGYuSGFzaBIiCg9yZWxlYXNlX3BlcmlvZHMYAiABKAsy",
            "CS5Mb25nTGlzdDoEoLsYASLZAQoYVG9rZW5zUG9vbFN0YWtlQ29uZmlnU2V0",
            "EhsKB3Bvb2xfaWQYASABKAsyCi5hZWxmLkhhc2gSFgoObWluaW11bV9hbW91",
            "bnQYAiABKAMSHgoWbWF4aW11bV9zdGFrZV9kdXJhdGlvbhgDIAEoAxIcChRt",
            "aW5pbXVtX2NsYWltX2Ftb3VudBgEIAEoAxIeChZtaW5pbXVtX3N0YWtlX2R1",
            "cmF0aW9uGAUgASgDEiQKHG1pbmltdW1fYWRkX2xpcXVpZGl0eV9hbW91bnQY",
            "BiABKAM6BKC7GAEiTAoGU3Rha2VkEh4KCnN0YWtlX2luZm8YASABKAsyCi5T",
            "dGFrZUluZm8SHAoJcG9vbF9kYXRhGAIgASgLMgkuUG9vbERhdGE6BKC7GAEi",
            "ewoIVW5sb2NrZWQSGwoHcG9vbF9pZBgBIAEoCzIKLmFlbGYuSGFzaBIeCgpz",
            "dGFrZV9pbmZvGAIgASgLMgouU3Rha2VJbmZvEg4KBmFtb3VudBgDIAEoAxIc",
            "Cglwb29sX2RhdGEYBCABKAsyCS5Qb29sRGF0YToEoLsYASJcCgdDbGFpbWVk",
            "EhsKB3Bvb2xfaWQYASABKAsyCi5hZWxmLkhhc2gSHgoHYWNjb3VudBgCIAEo",
            "CzINLmFlbGYuQWRkcmVzcxIOCgZhbW91bnQYAyABKAM6BKC7GAEicgoOVG9r",
            "ZW5SZWNvdmVyZWQSGwoHcG9vbF9pZBgBIAEoCzIKLmFlbGYuSGFzaBINCgV0",
            "b2tlbhgCIAEoCRIOCgZhbW91bnQYAyABKAMSHgoHYWNjb3VudBgEIAEoCzIN",
            "LmFlbGYuQWRkcmVzczoEoLsYASIqCglDb25maWdTZXQSFwoGY29uZmlnGAEg",
            "ASgLMgcuQ29uZmlnOgSguxgBIi4KCEFkbWluU2V0EhwKBWFkbWluGAEgASgL",
            "Mg0uYWVsZi5BZGRyZXNzOgSguxgBIk8KDERhcHBBZG1pblNldBIbCgdkYXBw",
            "X2lkGAEgASgLMgouYWVsZi5IYXNoEhwKBWFkbWluGAIgASgLMg0uYWVsZi5B",
            "ZGRyZXNzOgSguxgBIl4KHVRva2Vuc1Bvb2xGaXhlZEJvb3N0RmFjdG9yU2V0",
            "EhsKB3Bvb2xfaWQYASABKAsyCi5hZWxmLkhhc2gSGgoSZml4ZWRfYm9vc3Rf",
            "ZmFjdG9yGAIgASgDOgSguxgBInoKHFRva2Vuc1Bvb2xSZXdhcmRQZXJTZWNv",
            "bmRTZXQSGwoHcG9vbF9pZBgBIAEoCzIKLmFlbGYuSGFzaBIZChFyZXdhcmRf",
            "cGVyX3NlY29uZBgCIAEoAxIcCglwb29sX2RhdGEYAyABKAsyCS5Qb29sRGF0",
            "YToEoLsYASJmCiFUb2tlbnNQb29sVW5sb2NrV2luZG93RHVyYXRpb25TZXQS",
            "GwoHcG9vbF9pZBgBIAEoCzIKLmFlbGYuSGFzaBIeChZ1bmxvY2tfd2luZG93",
            "X2R1cmF0aW9uGAIgASgDOgSguxgBIlcKGlRva2Vuc1Bvb2xNZXJnZUludGVy",
            "dmFsU2V0EhsKB3Bvb2xfaWQYASABKAsyCi5hZWxmLkhhc2gSFgoObWVyZ2Vf",
            "aW50ZXJ2YWwYAiABKAM6BKC7GAEiTQoHUmVuZXdlZBIeCgpzdGFrZV9pbmZv",
            "GAEgASgLMgouU3Rha2VJbmZvEhwKCXBvb2xfZGF0YRgCIAEoCzIJLlBvb2xE",
            "YXRhOgSguxgBMt8PChVFY29FYXJuVG9rZW5zQ29udHJhY3QSNAoIUmVnaXN0",
            "ZXISDi5SZWdpc3RlcklucHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgAS",
            "PAoMU2V0RGFwcEFkbWluEhIuU2V0RGFwcEFkbWluSW5wdXQaFi5nb29nbGUu",
            "cHJvdG9idWYuRW1wdHkiABIrCgtHZXREYXBwSW5mbxIKLmFlbGYuSGFzaBoJ",
            "LkRhcHBJbmZvIgWIifcBARJEChBDcmVhdGVUb2tlbnNQb29sEhYuQ3JlYXRl",
            "VG9rZW5zUG9vbElucHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASTAoU",
            "U2V0VG9rZW5zUG9vbEVuZFRpbWUSGi5TZXRUb2tlbnNQb29sRW5kVGltZUlu",
            "cHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASVgoZU2V0VG9rZW5zUG9v",
            "bFJld2FyZENvbmZpZxIfLlNldFRva2Vuc1Bvb2xSZXdhcmRDb25maWdJbnB1",
            "dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAElQKGFNldFRva2Vuc1Bvb2xT",
            "dGFrZUNvbmZpZxIeLlNldFRva2Vuc1Bvb2xTdGFrZUNvbmZpZ0lucHV0GhYu",
            "Z29vZ2xlLnByb3RvYnVmLkVtcHR5IgASNAoLR2V0UG9vbEluZm8SCi5hZWxm",
            "Lkhhc2gaEi5HZXRQb29sSW5mb091dHB1dCIFiIn3AQESKwoLR2V0UG9vbERh",
            "dGESCi5hZWxmLkhhc2gaCS5Qb29sRGF0YSIFiIn3AQESOQoSR2V0UG9vbEFk",
            "ZHJlc3NJbmZvEgouYWVsZi5IYXNoGhAuUG9vbEFkZHJlc3NJbmZvIgWIifcB",
            "ARI+CgxHZXRQb29sQ291bnQSCi5hZWxmLkhhc2gaGy5nb29nbGUucHJvdG9i",
            "dWYuSW50NjRWYWx1ZSIFiIn3AQESXgodU2V0VG9rZW5zUG9vbEZpeGVkQm9v",
            "c3RGYWN0b3ISIy5TZXRUb2tlbnNQb29sRml4ZWRCb29zdEZhY3RvcklucHV0",
            "GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASXAocU2V0VG9rZW5zUG9vbFJl",
            "d2FyZFBlclNlY29uZBIiLlNldFRva2Vuc1Bvb2xSZXdhcmRQZXJTZWNvbmRJ",
            "bnB1dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEmYKIVNldFRva2Vuc1Bv",
            "b2xVbmxvY2tXaW5kb3dEdXJhdGlvbhInLlNldFRva2Vuc1Bvb2xVbmxvY2tX",
            "aW5kb3dEdXJhdGlvbklucHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgAS",
            "WAoaU2V0VG9rZW5zUG9vbE1lcmdlSW50ZXJ2YWwSIC5TZXRUb2tlbnNQb29s",
            "TWVyZ2VJbnRlcnZhbElucHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgAS",
            "LgoFU3Rha2USCy5TdGFrZUlucHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5",
            "IgASNAoIU3Rha2VGb3ISDi5TdGFrZUZvcklucHV0GhYuZ29vZ2xlLnByb3Rv",
            "YnVmLkVtcHR5IgASLgoFUmVuZXcSCy5SZW5ld0lucHV0GhYuZ29vZ2xlLnBy",
            "b3RvYnVmLkVtcHR5IgASNgoMR2V0U3Rha2VJbmZvEgouYWVsZi5IYXNoGhMu",
            "R2V0U3Rha2VJbmZvT3V0cHV0IgWIifcBARI1CglHZXRSZXdhcmQSDy5HZXRS",
            "ZXdhcmRJbnB1dBoQLkdldFJld2FyZE91dHB1dCIFiIn3AQESLgoGVW5sb2Nr",
            "EgouYWVsZi5IYXNoGhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASOQoOR2V0",
            "VXNlclN0YWtlSWQSFC5HZXRVc2VyU3Rha2VJZElucHV0GgouYWVsZi5IYXNo",
            "IgWIifcBARJQChFHZXRVc2VyU3Rha2VDb3VudBIXLkdldFVzZXJTdGFrZUNv",
            "dW50SW5wdXQaGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZSIFiIn3AQES",
            "LQoFQ2xhaW0SCi5hZWxmLkhhc2gaFi5nb29nbGUucHJvdG9idWYuRW1wdHki",
            "ABI8CgxSZWNvdmVyVG9rZW4SEi5SZWNvdmVyVG9rZW5JbnB1dBoWLmdvb2ds",
            "ZS5wcm90b2J1Zi5FbXB0eSIAEjgKCkluaXRpYWxpemUSEC5Jbml0aWFsaXpl",
            "SW5wdXQaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABIuCglTZXRDb25maWcS",
            "By5Db25maWcaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABIzCglHZXRDb25m",
            "aWcSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaBy5Db25maWciBYiJ9wEBEjMK",
            "CFNldEFkbWluEg0uYWVsZi5BZGRyZXNzGhYuZ29vZ2xlLnByb3RvYnVmLkVt",
            "cHR5IgASOAoIR2V0QWRtaW4SFi5nb29nbGUucHJvdG9idWYuRW1wdHkaDS5h",
            "ZWxmLkFkZHJlc3MiBYiJ9wEBGkjKyvYBC2FjczEyLnByb3Rvssz2ATNFY29F",
            "YXJuLkNvbnRyYWN0cy5Ub2tlbnMuRWNvRWFyblRva2Vuc0NvbnRyYWN0U3Rh",
            "dGVCG6oCGEVjb0Vhcm4uQ29udHJhY3RzLlRva2Vuc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AElf.Types.CoreReflection.Descriptor, global::AElf.OptionsReflection.Descriptor, global::AElf.Standards.ACS12.Acs12Reflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.RegisterInput), global::EcoEarn.Contracts.Tokens.RegisterInput.Parser, new[]{ "DappId", "Admin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.DappInfo), global::EcoEarn.Contracts.Tokens.DappInfo.Parser, new[]{ "DappId", "Admin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.CreateTokensPoolInput), global::EcoEarn.Contracts.Tokens.CreateTokensPoolInput.Parser, new[]{ "DappId", "RewardToken", "StartTime", "EndTime", "RewardPerSecond", "StakingToken", "FixedBoostFactor", "MinimumAmount", "MaximumStakeDuration", "MinimumClaimAmount", "MinimumAddLiquidityAmount", "MinimumStakeDuration", "RewardTokenContract", "StakeTokenContract", "SwapContract", "UnlockWindowDuration", "ReleasePeriods", "MergeInterval" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.TokensPoolConfig), global::EcoEarn.Contracts.Tokens.TokensPoolConfig.Parser, new[]{ "RewardToken", "StartTime", "EndTime", "RewardPerSecond", "StakingToken", "FixedBoostFactor", "MinimumAmount", "MinimumStakeDuration", "MaximumStakeDuration", "MinimumClaimAmount", "MinimumAddLiquidityAmount", "RewardTokenContract", "StakeTokenContract", "SwapContract", "UnlockWindowDuration", "ReleasePeriods", "MergeInterval" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.SetTokensPoolEndTimeInput), global::EcoEarn.Contracts.Tokens.SetTokensPoolEndTimeInput.Parser, new[]{ "PoolId", "EndTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.SetTokensPoolRewardConfigInput), global::EcoEarn.Contracts.Tokens.SetTokensPoolRewardConfigInput.Parser, new[]{ "PoolId", "ReleasePeriods" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.LongList), global::EcoEarn.Contracts.Tokens.LongList.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.SetTokensPoolStakeConfigInput), global::EcoEarn.Contracts.Tokens.SetTokensPoolStakeConfigInput.Parser, new[]{ "PoolId", "MinimumAmount", "MaximumStakeDuration", "MinimumClaimAmount", "MinimumStakeDuration", "MinimumAddLiquidityAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.SetTokensPoolFixedBoostFactorInput), global::EcoEarn.Contracts.Tokens.SetTokensPoolFixedBoostFactorInput.Parser, new[]{ "PoolId", "FixedBoostFactor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.SetTokensPoolRewardPerSecondInput), global::EcoEarn.Contracts.Tokens.SetTokensPoolRewardPerSecondInput.Parser, new[]{ "PoolId", "RewardPerSecond" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.SetTokensPoolUnlockWindowDurationInput), global::EcoEarn.Contracts.Tokens.SetTokensPoolUnlockWindowDurationInput.Parser, new[]{ "PoolId", "UnlockWindowDuration" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.SetTokensPoolMergeIntervalInput), global::EcoEarn.Contracts.Tokens.SetTokensPoolMergeIntervalInput.Parser, new[]{ "PoolId", "MergeInterval" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.GetPoolInfoOutput), global::EcoEarn.Contracts.Tokens.GetPoolInfoOutput.Parser, new[]{ "PoolInfo", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.PoolInfo), global::EcoEarn.Contracts.Tokens.PoolInfo.Parser, new[]{ "DappId", "PoolId", "Config", "PrecisionFactor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.PoolData), global::EcoEarn.Contracts.Tokens.PoolData.Parser, new[]{ "PoolId", "AccTokenPerShare", "LastRewardTime", "TotalStakedAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.StakeInput), global::EcoEarn.Contracts.Tokens.StakeInput.Parser, new[]{ "PoolId", "Amount", "Period" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.StakeInfo), global::EcoEarn.Contracts.Tokens.StakeInfo.Parser, new[]{ "StakeId", "PoolId", "Account", "StakingToken", "StakingPeriod", "UnlockTime", "LastOperationTime", "SubStakeInfos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.SubStakeInfo), global::EcoEarn.Contracts.Tokens.SubStakeInfo.Parser, new[]{ "SubStakeId", "StakedAmount", "EarlyStakedAmount", "StakedBlockNumber", "StakedTime", "Period", "BoostedAmount", "RewardDebt", "RewardAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.StakeForInput), global::EcoEarn.Contracts.Tokens.StakeForInput.Parser, new[]{ "PoolId", "Amount", "Period", "FromAddress", "LongestReleaseTime", "IsLiquidity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.RenewInput), global::EcoEarn.Contracts.Tokens.RenewInput.Parser, new[]{ "PoolId", "Period" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.GetRewardInput), global::EcoEarn.Contracts.Tokens.GetRewardInput.Parser, new[]{ "StakeIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.GetRewardOutput), global::EcoEarn.Contracts.Tokens.GetRewardOutput.Parser, new[]{ "RewardInfos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.RewardInfo), global::EcoEarn.Contracts.Tokens.RewardInfo.Parser, new[]{ "StakeId", "PoolId", "Account", "Symbol", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.GetStakeInfoOutput), global::EcoEarn.Contracts.Tokens.GetStakeInfoOutput.Parser, new[]{ "StakeInfo", "IsInUnlockWindow" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.RecoverTokenInput), global::EcoEarn.Contracts.Tokens.RecoverTokenInput.Parser, new[]{ "PoolId", "Token", "Recipient" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.InitializeInput), global::EcoEarn.Contracts.Tokens.InitializeInput.Parser, new[]{ "Admin", "EcoearnPointsContract", "EcoearnRewardsContract", "CommissionRate", "Recipient", "IsRegisterRestricted", "MaximumPositionAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.Config), global::EcoEarn.Contracts.Tokens.Config.Parser, new[]{ "CommissionRate", "Recipient", "IsRegisterRestricted", "MaximumPositionAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.SetDappAdminInput), global::EcoEarn.Contracts.Tokens.SetDappAdminInput.Parser, new[]{ "DappId", "Admin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.GetUserStakeIdInput), global::EcoEarn.Contracts.Tokens.GetUserStakeIdInput.Parser, new[]{ "PoolId", "Account" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.GetUserStakeCountInput), global::EcoEarn.Contracts.Tokens.GetUserStakeCountInput.Parser, new[]{ "PoolId", "Account" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.PoolAddressInfo), global::EcoEarn.Contracts.Tokens.PoolAddressInfo.Parser, new[]{ "StakeAddress", "RewardAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.Registered), global::EcoEarn.Contracts.Tokens.Registered.Parser, new[]{ "DappId", "Admin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.TokensPoolCreated), global::EcoEarn.Contracts.Tokens.TokensPoolCreated.Parser, new[]{ "DappId", "Config", "PoolId", "Amount", "AddressInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.TokensPoolEndTimeSet), global::EcoEarn.Contracts.Tokens.TokensPoolEndTimeSet.Parser, new[]{ "PoolId", "EndTime", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.TokensPoolRewardConfigSet), global::EcoEarn.Contracts.Tokens.TokensPoolRewardConfigSet.Parser, new[]{ "PoolId", "ReleasePeriods" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.TokensPoolStakeConfigSet), global::EcoEarn.Contracts.Tokens.TokensPoolStakeConfigSet.Parser, new[]{ "PoolId", "MinimumAmount", "MaximumStakeDuration", "MinimumClaimAmount", "MinimumStakeDuration", "MinimumAddLiquidityAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.Staked), global::EcoEarn.Contracts.Tokens.Staked.Parser, new[]{ "StakeInfo", "PoolData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.Unlocked), global::EcoEarn.Contracts.Tokens.Unlocked.Parser, new[]{ "PoolId", "StakeInfo", "Amount", "PoolData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.Claimed), global::EcoEarn.Contracts.Tokens.Claimed.Parser, new[]{ "PoolId", "Account", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.TokenRecovered), global::EcoEarn.Contracts.Tokens.TokenRecovered.Parser, new[]{ "PoolId", "Token", "Amount", "Account" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.ConfigSet), global::EcoEarn.Contracts.Tokens.ConfigSet.Parser, new[]{ "Config" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.AdminSet), global::EcoEarn.Contracts.Tokens.AdminSet.Parser, new[]{ "Admin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.DappAdminSet), global::EcoEarn.Contracts.Tokens.DappAdminSet.Parser, new[]{ "DappId", "Admin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.TokensPoolFixedBoostFactorSet), global::EcoEarn.Contracts.Tokens.TokensPoolFixedBoostFactorSet.Parser, new[]{ "PoolId", "FixedBoostFactor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.TokensPoolRewardPerSecondSet), global::EcoEarn.Contracts.Tokens.TokensPoolRewardPerSecondSet.Parser, new[]{ "PoolId", "RewardPerSecond", "PoolData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.TokensPoolUnlockWindowDurationSet), global::EcoEarn.Contracts.Tokens.TokensPoolUnlockWindowDurationSet.Parser, new[]{ "PoolId", "UnlockWindowDuration" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.TokensPoolMergeIntervalSet), global::EcoEarn.Contracts.Tokens.TokensPoolMergeIntervalSet.Parser, new[]{ "PoolId", "MergeInterval" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.Renewed), global::EcoEarn.Contracts.Tokens.Renewed.Parser, new[]{ "StakeInfo", "PoolData" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RegisterInput : pb::IMessage<RegisterInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegisterInput> _parser = new pb::MessageParser<RegisterInput>(() => new RegisterInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegisterInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterInput(RegisterInput other) : this() {
      dappId_ = other.dappId_ != null ? other.dappId_.Clone() : null;
      admin_ = other.admin_ != null ? other.admin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterInput Clone() {
      return new RegisterInput(this);
    }

    /// <summary>Field number for the "dapp_id" field.</summary>
    public const int DappIdFieldNumber = 1;
    private global::AElf.Types.Hash dappId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash DappId {
      get { return dappId_; }
      set {
        dappId_ = value;
      }
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 2;
    private global::AElf.Types.Address admin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Admin {
      get { return admin_; }
      set {
        admin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegisterInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegisterInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DappId, other.DappId)) return false;
      if (!object.Equals(Admin, other.Admin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (dappId_ != null) hash ^= DappId.GetHashCode();
      if (admin_ != null) hash ^= Admin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (admin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (admin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (dappId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DappId);
      }
      if (admin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Admin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegisterInput other) {
      if (other == null) {
        return;
      }
      if (other.dappId_ != null) {
        if (dappId_ == null) {
          DappId = new global::AElf.Types.Hash();
        }
        DappId.MergeFrom(other.DappId);
      }
      if (other.admin_ != null) {
        if (admin_ == null) {
          Admin = new global::AElf.Types.Address();
        }
        Admin.MergeFrom(other.Admin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DappInfo : pb::IMessage<DappInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DappInfo> _parser = new pb::MessageParser<DappInfo>(() => new DappInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DappInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DappInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DappInfo(DappInfo other) : this() {
      dappId_ = other.dappId_ != null ? other.dappId_.Clone() : null;
      admin_ = other.admin_ != null ? other.admin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DappInfo Clone() {
      return new DappInfo(this);
    }

    /// <summary>Field number for the "dapp_id" field.</summary>
    public const int DappIdFieldNumber = 1;
    private global::AElf.Types.Hash dappId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash DappId {
      get { return dappId_; }
      set {
        dappId_ = value;
      }
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 2;
    private global::AElf.Types.Address admin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Admin {
      get { return admin_; }
      set {
        admin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DappInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DappInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DappId, other.DappId)) return false;
      if (!object.Equals(Admin, other.Admin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (dappId_ != null) hash ^= DappId.GetHashCode();
      if (admin_ != null) hash ^= Admin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (admin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (admin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (dappId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DappId);
      }
      if (admin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Admin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DappInfo other) {
      if (other == null) {
        return;
      }
      if (other.dappId_ != null) {
        if (dappId_ == null) {
          DappId = new global::AElf.Types.Hash();
        }
        DappId.MergeFrom(other.DappId);
      }
      if (other.admin_ != null) {
        if (admin_ == null) {
          Admin = new global::AElf.Types.Address();
        }
        Admin.MergeFrom(other.Admin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreateTokensPoolInput : pb::IMessage<CreateTokensPoolInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateTokensPoolInput> _parser = new pb::MessageParser<CreateTokensPoolInput>(() => new CreateTokensPoolInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateTokensPoolInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateTokensPoolInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateTokensPoolInput(CreateTokensPoolInput other) : this() {
      dappId_ = other.dappId_ != null ? other.dappId_.Clone() : null;
      rewardToken_ = other.rewardToken_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      rewardPerSecond_ = other.rewardPerSecond_;
      stakingToken_ = other.stakingToken_;
      fixedBoostFactor_ = other.fixedBoostFactor_;
      minimumAmount_ = other.minimumAmount_;
      maximumStakeDuration_ = other.maximumStakeDuration_;
      minimumClaimAmount_ = other.minimumClaimAmount_;
      minimumAddLiquidityAmount_ = other.minimumAddLiquidityAmount_;
      minimumStakeDuration_ = other.minimumStakeDuration_;
      rewardTokenContract_ = other.rewardTokenContract_ != null ? other.rewardTokenContract_.Clone() : null;
      stakeTokenContract_ = other.stakeTokenContract_ != null ? other.stakeTokenContract_.Clone() : null;
      swapContract_ = other.swapContract_ != null ? other.swapContract_.Clone() : null;
      unlockWindowDuration_ = other.unlockWindowDuration_;
      releasePeriods_ = other.releasePeriods_.Clone();
      mergeInterval_ = other.mergeInterval_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateTokensPoolInput Clone() {
      return new CreateTokensPoolInput(this);
    }

    /// <summary>Field number for the "dapp_id" field.</summary>
    public const int DappIdFieldNumber = 1;
    private global::AElf.Types.Hash dappId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash DappId {
      get { return dappId_; }
      set {
        dappId_ = value;
      }
    }

    /// <summary>Field number for the "reward_token" field.</summary>
    public const int RewardTokenFieldNumber = 2;
    private string rewardToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RewardToken {
      get { return rewardToken_; }
      set {
        rewardToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 3;
    private long startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 4;
    private long endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "reward_per_second" field.</summary>
    public const int RewardPerSecondFieldNumber = 5;
    private long rewardPerSecond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RewardPerSecond {
      get { return rewardPerSecond_; }
      set {
        rewardPerSecond_ = value;
      }
    }

    /// <summary>Field number for the "staking_token" field.</summary>
    public const int StakingTokenFieldNumber = 6;
    private string stakingToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StakingToken {
      get { return stakingToken_; }
      set {
        stakingToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fixed_boost_factor" field.</summary>
    public const int FixedBoostFactorFieldNumber = 7;
    private long fixedBoostFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FixedBoostFactor {
      get { return fixedBoostFactor_; }
      set {
        fixedBoostFactor_ = value;
      }
    }

    /// <summary>Field number for the "minimum_amount" field.</summary>
    public const int MinimumAmountFieldNumber = 8;
    private long minimumAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumAmount {
      get { return minimumAmount_; }
      set {
        minimumAmount_ = value;
      }
    }

    /// <summary>Field number for the "maximum_stake_duration" field.</summary>
    public const int MaximumStakeDurationFieldNumber = 9;
    private long maximumStakeDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaximumStakeDuration {
      get { return maximumStakeDuration_; }
      set {
        maximumStakeDuration_ = value;
      }
    }

    /// <summary>Field number for the "minimum_claim_amount" field.</summary>
    public const int MinimumClaimAmountFieldNumber = 10;
    private long minimumClaimAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumClaimAmount {
      get { return minimumClaimAmount_; }
      set {
        minimumClaimAmount_ = value;
      }
    }

    /// <summary>Field number for the "minimum_add_liquidity_amount" field.</summary>
    public const int MinimumAddLiquidityAmountFieldNumber = 11;
    private long minimumAddLiquidityAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumAddLiquidityAmount {
      get { return minimumAddLiquidityAmount_; }
      set {
        minimumAddLiquidityAmount_ = value;
      }
    }

    /// <summary>Field number for the "minimum_stake_duration" field.</summary>
    public const int MinimumStakeDurationFieldNumber = 12;
    private long minimumStakeDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumStakeDuration {
      get { return minimumStakeDuration_; }
      set {
        minimumStakeDuration_ = value;
      }
    }

    /// <summary>Field number for the "reward_token_contract" field.</summary>
    public const int RewardTokenContractFieldNumber = 13;
    private global::AElf.Types.Address rewardTokenContract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address RewardTokenContract {
      get { return rewardTokenContract_; }
      set {
        rewardTokenContract_ = value;
      }
    }

    /// <summary>Field number for the "stake_token_contract" field.</summary>
    public const int StakeTokenContractFieldNumber = 14;
    private global::AElf.Types.Address stakeTokenContract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address StakeTokenContract {
      get { return stakeTokenContract_; }
      set {
        stakeTokenContract_ = value;
      }
    }

    /// <summary>Field number for the "swap_contract" field.</summary>
    public const int SwapContractFieldNumber = 15;
    private global::AElf.Types.Address swapContract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address SwapContract {
      get { return swapContract_; }
      set {
        swapContract_ = value;
      }
    }

    /// <summary>Field number for the "unlock_window_duration" field.</summary>
    public const int UnlockWindowDurationFieldNumber = 16;
    private long unlockWindowDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long UnlockWindowDuration {
      get { return unlockWindowDuration_; }
      set {
        unlockWindowDuration_ = value;
      }
    }

    /// <summary>Field number for the "release_periods" field.</summary>
    public const int ReleasePeriodsFieldNumber = 17;
    private static readonly pb::FieldCodec<long> _repeated_releasePeriods_codec
        = pb::FieldCodec.ForInt64(138);
    private readonly pbc::RepeatedField<long> releasePeriods_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> ReleasePeriods {
      get { return releasePeriods_; }
    }

    /// <summary>Field number for the "merge_interval" field.</summary>
    public const int MergeIntervalFieldNumber = 18;
    private long mergeInterval_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MergeInterval {
      get { return mergeInterval_; }
      set {
        mergeInterval_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateTokensPoolInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateTokensPoolInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DappId, other.DappId)) return false;
      if (RewardToken != other.RewardToken) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if (RewardPerSecond != other.RewardPerSecond) return false;
      if (StakingToken != other.StakingToken) return false;
      if (FixedBoostFactor != other.FixedBoostFactor) return false;
      if (MinimumAmount != other.MinimumAmount) return false;
      if (MaximumStakeDuration != other.MaximumStakeDuration) return false;
      if (MinimumClaimAmount != other.MinimumClaimAmount) return false;
      if (MinimumAddLiquidityAmount != other.MinimumAddLiquidityAmount) return false;
      if (MinimumStakeDuration != other.MinimumStakeDuration) return false;
      if (!object.Equals(RewardTokenContract, other.RewardTokenContract)) return false;
      if (!object.Equals(StakeTokenContract, other.StakeTokenContract)) return false;
      if (!object.Equals(SwapContract, other.SwapContract)) return false;
      if (UnlockWindowDuration != other.UnlockWindowDuration) return false;
      if(!releasePeriods_.Equals(other.releasePeriods_)) return false;
      if (MergeInterval != other.MergeInterval) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (dappId_ != null) hash ^= DappId.GetHashCode();
      if (RewardToken.Length != 0) hash ^= RewardToken.GetHashCode();
      if (StartTime != 0L) hash ^= StartTime.GetHashCode();
      if (EndTime != 0L) hash ^= EndTime.GetHashCode();
      if (RewardPerSecond != 0L) hash ^= RewardPerSecond.GetHashCode();
      if (StakingToken.Length != 0) hash ^= StakingToken.GetHashCode();
      if (FixedBoostFactor != 0L) hash ^= FixedBoostFactor.GetHashCode();
      if (MinimumAmount != 0L) hash ^= MinimumAmount.GetHashCode();
      if (MaximumStakeDuration != 0L) hash ^= MaximumStakeDuration.GetHashCode();
      if (MinimumClaimAmount != 0L) hash ^= MinimumClaimAmount.GetHashCode();
      if (MinimumAddLiquidityAmount != 0L) hash ^= MinimumAddLiquidityAmount.GetHashCode();
      if (MinimumStakeDuration != 0L) hash ^= MinimumStakeDuration.GetHashCode();
      if (rewardTokenContract_ != null) hash ^= RewardTokenContract.GetHashCode();
      if (stakeTokenContract_ != null) hash ^= StakeTokenContract.GetHashCode();
      if (swapContract_ != null) hash ^= SwapContract.GetHashCode();
      if (UnlockWindowDuration != 0L) hash ^= UnlockWindowDuration.GetHashCode();
      hash ^= releasePeriods_.GetHashCode();
      if (MergeInterval != 0L) hash ^= MergeInterval.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (RewardToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RewardToken);
      }
      if (StartTime != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(StartTime);
      }
      if (EndTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(EndTime);
      }
      if (RewardPerSecond != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(RewardPerSecond);
      }
      if (StakingToken.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(StakingToken);
      }
      if (FixedBoostFactor != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(FixedBoostFactor);
      }
      if (MinimumAmount != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(MinimumAmount);
      }
      if (MaximumStakeDuration != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(MaximumStakeDuration);
      }
      if (MinimumClaimAmount != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(MinimumClaimAmount);
      }
      if (MinimumAddLiquidityAmount != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(MinimumAddLiquidityAmount);
      }
      if (MinimumStakeDuration != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(MinimumStakeDuration);
      }
      if (rewardTokenContract_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(RewardTokenContract);
      }
      if (stakeTokenContract_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(StakeTokenContract);
      }
      if (swapContract_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(SwapContract);
      }
      if (UnlockWindowDuration != 0L) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(UnlockWindowDuration);
      }
      releasePeriods_.WriteTo(output, _repeated_releasePeriods_codec);
      if (MergeInterval != 0L) {
        output.WriteRawTag(144, 1);
        output.WriteInt64(MergeInterval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (RewardToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RewardToken);
      }
      if (StartTime != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(StartTime);
      }
      if (EndTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(EndTime);
      }
      if (RewardPerSecond != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(RewardPerSecond);
      }
      if (StakingToken.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(StakingToken);
      }
      if (FixedBoostFactor != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(FixedBoostFactor);
      }
      if (MinimumAmount != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(MinimumAmount);
      }
      if (MaximumStakeDuration != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(MaximumStakeDuration);
      }
      if (MinimumClaimAmount != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(MinimumClaimAmount);
      }
      if (MinimumAddLiquidityAmount != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(MinimumAddLiquidityAmount);
      }
      if (MinimumStakeDuration != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(MinimumStakeDuration);
      }
      if (rewardTokenContract_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(RewardTokenContract);
      }
      if (stakeTokenContract_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(StakeTokenContract);
      }
      if (swapContract_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(SwapContract);
      }
      if (UnlockWindowDuration != 0L) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(UnlockWindowDuration);
      }
      releasePeriods_.WriteTo(ref output, _repeated_releasePeriods_codec);
      if (MergeInterval != 0L) {
        output.WriteRawTag(144, 1);
        output.WriteInt64(MergeInterval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (dappId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DappId);
      }
      if (RewardToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RewardToken);
      }
      if (StartTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTime);
      }
      if (EndTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime);
      }
      if (RewardPerSecond != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RewardPerSecond);
      }
      if (StakingToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StakingToken);
      }
      if (FixedBoostFactor != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FixedBoostFactor);
      }
      if (MinimumAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumAmount);
      }
      if (MaximumStakeDuration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaximumStakeDuration);
      }
      if (MinimumClaimAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumClaimAmount);
      }
      if (MinimumAddLiquidityAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumAddLiquidityAmount);
      }
      if (MinimumStakeDuration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumStakeDuration);
      }
      if (rewardTokenContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RewardTokenContract);
      }
      if (stakeTokenContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StakeTokenContract);
      }
      if (swapContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SwapContract);
      }
      if (UnlockWindowDuration != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(UnlockWindowDuration);
      }
      size += releasePeriods_.CalculateSize(_repeated_releasePeriods_codec);
      if (MergeInterval != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(MergeInterval);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateTokensPoolInput other) {
      if (other == null) {
        return;
      }
      if (other.dappId_ != null) {
        if (dappId_ == null) {
          DappId = new global::AElf.Types.Hash();
        }
        DappId.MergeFrom(other.DappId);
      }
      if (other.RewardToken.Length != 0) {
        RewardToken = other.RewardToken;
      }
      if (other.StartTime != 0L) {
        StartTime = other.StartTime;
      }
      if (other.EndTime != 0L) {
        EndTime = other.EndTime;
      }
      if (other.RewardPerSecond != 0L) {
        RewardPerSecond = other.RewardPerSecond;
      }
      if (other.StakingToken.Length != 0) {
        StakingToken = other.StakingToken;
      }
      if (other.FixedBoostFactor != 0L) {
        FixedBoostFactor = other.FixedBoostFactor;
      }
      if (other.MinimumAmount != 0L) {
        MinimumAmount = other.MinimumAmount;
      }
      if (other.MaximumStakeDuration != 0L) {
        MaximumStakeDuration = other.MaximumStakeDuration;
      }
      if (other.MinimumClaimAmount != 0L) {
        MinimumClaimAmount = other.MinimumClaimAmount;
      }
      if (other.MinimumAddLiquidityAmount != 0L) {
        MinimumAddLiquidityAmount = other.MinimumAddLiquidityAmount;
      }
      if (other.MinimumStakeDuration != 0L) {
        MinimumStakeDuration = other.MinimumStakeDuration;
      }
      if (other.rewardTokenContract_ != null) {
        if (rewardTokenContract_ == null) {
          RewardTokenContract = new global::AElf.Types.Address();
        }
        RewardTokenContract.MergeFrom(other.RewardTokenContract);
      }
      if (other.stakeTokenContract_ != null) {
        if (stakeTokenContract_ == null) {
          StakeTokenContract = new global::AElf.Types.Address();
        }
        StakeTokenContract.MergeFrom(other.StakeTokenContract);
      }
      if (other.swapContract_ != null) {
        if (swapContract_ == null) {
          SwapContract = new global::AElf.Types.Address();
        }
        SwapContract.MergeFrom(other.SwapContract);
      }
      if (other.UnlockWindowDuration != 0L) {
        UnlockWindowDuration = other.UnlockWindowDuration;
      }
      releasePeriods_.Add(other.releasePeriods_);
      if (other.MergeInterval != 0L) {
        MergeInterval = other.MergeInterval;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            RewardToken = input.ReadString();
            break;
          }
          case 24: {
            StartTime = input.ReadInt64();
            break;
          }
          case 32: {
            EndTime = input.ReadInt64();
            break;
          }
          case 40: {
            RewardPerSecond = input.ReadInt64();
            break;
          }
          case 50: {
            StakingToken = input.ReadString();
            break;
          }
          case 56: {
            FixedBoostFactor = input.ReadInt64();
            break;
          }
          case 64: {
            MinimumAmount = input.ReadInt64();
            break;
          }
          case 72: {
            MaximumStakeDuration = input.ReadInt64();
            break;
          }
          case 80: {
            MinimumClaimAmount = input.ReadInt64();
            break;
          }
          case 88: {
            MinimumAddLiquidityAmount = input.ReadInt64();
            break;
          }
          case 96: {
            MinimumStakeDuration = input.ReadInt64();
            break;
          }
          case 106: {
            if (rewardTokenContract_ == null) {
              RewardTokenContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(RewardTokenContract);
            break;
          }
          case 114: {
            if (stakeTokenContract_ == null) {
              StakeTokenContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(StakeTokenContract);
            break;
          }
          case 122: {
            if (swapContract_ == null) {
              SwapContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(SwapContract);
            break;
          }
          case 128: {
            UnlockWindowDuration = input.ReadInt64();
            break;
          }
          case 138:
          case 136: {
            releasePeriods_.AddEntriesFrom(input, _repeated_releasePeriods_codec);
            break;
          }
          case 144: {
            MergeInterval = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            RewardToken = input.ReadString();
            break;
          }
          case 24: {
            StartTime = input.ReadInt64();
            break;
          }
          case 32: {
            EndTime = input.ReadInt64();
            break;
          }
          case 40: {
            RewardPerSecond = input.ReadInt64();
            break;
          }
          case 50: {
            StakingToken = input.ReadString();
            break;
          }
          case 56: {
            FixedBoostFactor = input.ReadInt64();
            break;
          }
          case 64: {
            MinimumAmount = input.ReadInt64();
            break;
          }
          case 72: {
            MaximumStakeDuration = input.ReadInt64();
            break;
          }
          case 80: {
            MinimumClaimAmount = input.ReadInt64();
            break;
          }
          case 88: {
            MinimumAddLiquidityAmount = input.ReadInt64();
            break;
          }
          case 96: {
            MinimumStakeDuration = input.ReadInt64();
            break;
          }
          case 106: {
            if (rewardTokenContract_ == null) {
              RewardTokenContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(RewardTokenContract);
            break;
          }
          case 114: {
            if (stakeTokenContract_ == null) {
              StakeTokenContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(StakeTokenContract);
            break;
          }
          case 122: {
            if (swapContract_ == null) {
              SwapContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(SwapContract);
            break;
          }
          case 128: {
            UnlockWindowDuration = input.ReadInt64();
            break;
          }
          case 138:
          case 136: {
            releasePeriods_.AddEntriesFrom(ref input, _repeated_releasePeriods_codec);
            break;
          }
          case 144: {
            MergeInterval = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TokensPoolConfig : pb::IMessage<TokensPoolConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TokensPoolConfig> _parser = new pb::MessageParser<TokensPoolConfig>(() => new TokensPoolConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TokensPoolConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolConfig(TokensPoolConfig other) : this() {
      rewardToken_ = other.rewardToken_;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      rewardPerSecond_ = other.rewardPerSecond_;
      stakingToken_ = other.stakingToken_;
      fixedBoostFactor_ = other.fixedBoostFactor_;
      minimumAmount_ = other.minimumAmount_;
      minimumStakeDuration_ = other.minimumStakeDuration_;
      maximumStakeDuration_ = other.maximumStakeDuration_;
      minimumClaimAmount_ = other.minimumClaimAmount_;
      minimumAddLiquidityAmount_ = other.minimumAddLiquidityAmount_;
      rewardTokenContract_ = other.rewardTokenContract_ != null ? other.rewardTokenContract_.Clone() : null;
      stakeTokenContract_ = other.stakeTokenContract_ != null ? other.stakeTokenContract_.Clone() : null;
      swapContract_ = other.swapContract_ != null ? other.swapContract_.Clone() : null;
      unlockWindowDuration_ = other.unlockWindowDuration_;
      releasePeriods_ = other.releasePeriods_.Clone();
      mergeInterval_ = other.mergeInterval_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolConfig Clone() {
      return new TokensPoolConfig(this);
    }

    /// <summary>Field number for the "reward_token" field.</summary>
    public const int RewardTokenFieldNumber = 1;
    private string rewardToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RewardToken {
      get { return rewardToken_; }
      set {
        rewardToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "reward_per_second" field.</summary>
    public const int RewardPerSecondFieldNumber = 4;
    private long rewardPerSecond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RewardPerSecond {
      get { return rewardPerSecond_; }
      set {
        rewardPerSecond_ = value;
      }
    }

    /// <summary>Field number for the "staking_token" field.</summary>
    public const int StakingTokenFieldNumber = 5;
    private string stakingToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StakingToken {
      get { return stakingToken_; }
      set {
        stakingToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fixed_boost_factor" field.</summary>
    public const int FixedBoostFactorFieldNumber = 6;
    private long fixedBoostFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FixedBoostFactor {
      get { return fixedBoostFactor_; }
      set {
        fixedBoostFactor_ = value;
      }
    }

    /// <summary>Field number for the "minimum_amount" field.</summary>
    public const int MinimumAmountFieldNumber = 7;
    private long minimumAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumAmount {
      get { return minimumAmount_; }
      set {
        minimumAmount_ = value;
      }
    }

    /// <summary>Field number for the "minimum_stake_duration" field.</summary>
    public const int MinimumStakeDurationFieldNumber = 8;
    private long minimumStakeDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumStakeDuration {
      get { return minimumStakeDuration_; }
      set {
        minimumStakeDuration_ = value;
      }
    }

    /// <summary>Field number for the "maximum_stake_duration" field.</summary>
    public const int MaximumStakeDurationFieldNumber = 9;
    private long maximumStakeDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaximumStakeDuration {
      get { return maximumStakeDuration_; }
      set {
        maximumStakeDuration_ = value;
      }
    }

    /// <summary>Field number for the "minimum_claim_amount" field.</summary>
    public const int MinimumClaimAmountFieldNumber = 10;
    private long minimumClaimAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumClaimAmount {
      get { return minimumClaimAmount_; }
      set {
        minimumClaimAmount_ = value;
      }
    }

    /// <summary>Field number for the "minimum_add_liquidity_amount" field.</summary>
    public const int MinimumAddLiquidityAmountFieldNumber = 11;
    private long minimumAddLiquidityAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumAddLiquidityAmount {
      get { return minimumAddLiquidityAmount_; }
      set {
        minimumAddLiquidityAmount_ = value;
      }
    }

    /// <summary>Field number for the "reward_token_contract" field.</summary>
    public const int RewardTokenContractFieldNumber = 12;
    private global::AElf.Types.Address rewardTokenContract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address RewardTokenContract {
      get { return rewardTokenContract_; }
      set {
        rewardTokenContract_ = value;
      }
    }

    /// <summary>Field number for the "stake_token_contract" field.</summary>
    public const int StakeTokenContractFieldNumber = 13;
    private global::AElf.Types.Address stakeTokenContract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address StakeTokenContract {
      get { return stakeTokenContract_; }
      set {
        stakeTokenContract_ = value;
      }
    }

    /// <summary>Field number for the "swap_contract" field.</summary>
    public const int SwapContractFieldNumber = 14;
    private global::AElf.Types.Address swapContract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address SwapContract {
      get { return swapContract_; }
      set {
        swapContract_ = value;
      }
    }

    /// <summary>Field number for the "unlock_window_duration" field.</summary>
    public const int UnlockWindowDurationFieldNumber = 15;
    private long unlockWindowDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long UnlockWindowDuration {
      get { return unlockWindowDuration_; }
      set {
        unlockWindowDuration_ = value;
      }
    }

    /// <summary>Field number for the "release_periods" field.</summary>
    public const int ReleasePeriodsFieldNumber = 16;
    private static readonly pb::FieldCodec<long> _repeated_releasePeriods_codec
        = pb::FieldCodec.ForInt64(130);
    private readonly pbc::RepeatedField<long> releasePeriods_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> ReleasePeriods {
      get { return releasePeriods_; }
    }

    /// <summary>Field number for the "merge_interval" field.</summary>
    public const int MergeIntervalFieldNumber = 17;
    private long mergeInterval_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MergeInterval {
      get { return mergeInterval_; }
      set {
        mergeInterval_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TokensPoolConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TokensPoolConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RewardToken != other.RewardToken) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (RewardPerSecond != other.RewardPerSecond) return false;
      if (StakingToken != other.StakingToken) return false;
      if (FixedBoostFactor != other.FixedBoostFactor) return false;
      if (MinimumAmount != other.MinimumAmount) return false;
      if (MinimumStakeDuration != other.MinimumStakeDuration) return false;
      if (MaximumStakeDuration != other.MaximumStakeDuration) return false;
      if (MinimumClaimAmount != other.MinimumClaimAmount) return false;
      if (MinimumAddLiquidityAmount != other.MinimumAddLiquidityAmount) return false;
      if (!object.Equals(RewardTokenContract, other.RewardTokenContract)) return false;
      if (!object.Equals(StakeTokenContract, other.StakeTokenContract)) return false;
      if (!object.Equals(SwapContract, other.SwapContract)) return false;
      if (UnlockWindowDuration != other.UnlockWindowDuration) return false;
      if(!releasePeriods_.Equals(other.releasePeriods_)) return false;
      if (MergeInterval != other.MergeInterval) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RewardToken.Length != 0) hash ^= RewardToken.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (RewardPerSecond != 0L) hash ^= RewardPerSecond.GetHashCode();
      if (StakingToken.Length != 0) hash ^= StakingToken.GetHashCode();
      if (FixedBoostFactor != 0L) hash ^= FixedBoostFactor.GetHashCode();
      if (MinimumAmount != 0L) hash ^= MinimumAmount.GetHashCode();
      if (MinimumStakeDuration != 0L) hash ^= MinimumStakeDuration.GetHashCode();
      if (MaximumStakeDuration != 0L) hash ^= MaximumStakeDuration.GetHashCode();
      if (MinimumClaimAmount != 0L) hash ^= MinimumClaimAmount.GetHashCode();
      if (MinimumAddLiquidityAmount != 0L) hash ^= MinimumAddLiquidityAmount.GetHashCode();
      if (rewardTokenContract_ != null) hash ^= RewardTokenContract.GetHashCode();
      if (stakeTokenContract_ != null) hash ^= StakeTokenContract.GetHashCode();
      if (swapContract_ != null) hash ^= SwapContract.GetHashCode();
      if (UnlockWindowDuration != 0L) hash ^= UnlockWindowDuration.GetHashCode();
      hash ^= releasePeriods_.GetHashCode();
      if (MergeInterval != 0L) hash ^= MergeInterval.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RewardToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RewardToken);
      }
      if (startTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EndTime);
      }
      if (RewardPerSecond != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(RewardPerSecond);
      }
      if (StakingToken.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StakingToken);
      }
      if (FixedBoostFactor != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(FixedBoostFactor);
      }
      if (MinimumAmount != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(MinimumAmount);
      }
      if (MinimumStakeDuration != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(MinimumStakeDuration);
      }
      if (MaximumStakeDuration != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(MaximumStakeDuration);
      }
      if (MinimumClaimAmount != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(MinimumClaimAmount);
      }
      if (MinimumAddLiquidityAmount != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(MinimumAddLiquidityAmount);
      }
      if (rewardTokenContract_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(RewardTokenContract);
      }
      if (stakeTokenContract_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(StakeTokenContract);
      }
      if (swapContract_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(SwapContract);
      }
      if (UnlockWindowDuration != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(UnlockWindowDuration);
      }
      releasePeriods_.WriteTo(output, _repeated_releasePeriods_codec);
      if (MergeInterval != 0L) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(MergeInterval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RewardToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RewardToken);
      }
      if (startTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EndTime);
      }
      if (RewardPerSecond != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(RewardPerSecond);
      }
      if (StakingToken.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StakingToken);
      }
      if (FixedBoostFactor != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(FixedBoostFactor);
      }
      if (MinimumAmount != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(MinimumAmount);
      }
      if (MinimumStakeDuration != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(MinimumStakeDuration);
      }
      if (MaximumStakeDuration != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(MaximumStakeDuration);
      }
      if (MinimumClaimAmount != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(MinimumClaimAmount);
      }
      if (MinimumAddLiquidityAmount != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(MinimumAddLiquidityAmount);
      }
      if (rewardTokenContract_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(RewardTokenContract);
      }
      if (stakeTokenContract_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(StakeTokenContract);
      }
      if (swapContract_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(SwapContract);
      }
      if (UnlockWindowDuration != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(UnlockWindowDuration);
      }
      releasePeriods_.WriteTo(ref output, _repeated_releasePeriods_codec);
      if (MergeInterval != 0L) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(MergeInterval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RewardToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RewardToken);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (RewardPerSecond != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RewardPerSecond);
      }
      if (StakingToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StakingToken);
      }
      if (FixedBoostFactor != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FixedBoostFactor);
      }
      if (MinimumAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumAmount);
      }
      if (MinimumStakeDuration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumStakeDuration);
      }
      if (MaximumStakeDuration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaximumStakeDuration);
      }
      if (MinimumClaimAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumClaimAmount);
      }
      if (MinimumAddLiquidityAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumAddLiquidityAmount);
      }
      if (rewardTokenContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RewardTokenContract);
      }
      if (stakeTokenContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StakeTokenContract);
      }
      if (swapContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SwapContract);
      }
      if (UnlockWindowDuration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnlockWindowDuration);
      }
      size += releasePeriods_.CalculateSize(_repeated_releasePeriods_codec);
      if (MergeInterval != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(MergeInterval);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TokensPoolConfig other) {
      if (other == null) {
        return;
      }
      if (other.RewardToken.Length != 0) {
        RewardToken = other.RewardToken;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.RewardPerSecond != 0L) {
        RewardPerSecond = other.RewardPerSecond;
      }
      if (other.StakingToken.Length != 0) {
        StakingToken = other.StakingToken;
      }
      if (other.FixedBoostFactor != 0L) {
        FixedBoostFactor = other.FixedBoostFactor;
      }
      if (other.MinimumAmount != 0L) {
        MinimumAmount = other.MinimumAmount;
      }
      if (other.MinimumStakeDuration != 0L) {
        MinimumStakeDuration = other.MinimumStakeDuration;
      }
      if (other.MaximumStakeDuration != 0L) {
        MaximumStakeDuration = other.MaximumStakeDuration;
      }
      if (other.MinimumClaimAmount != 0L) {
        MinimumClaimAmount = other.MinimumClaimAmount;
      }
      if (other.MinimumAddLiquidityAmount != 0L) {
        MinimumAddLiquidityAmount = other.MinimumAddLiquidityAmount;
      }
      if (other.rewardTokenContract_ != null) {
        if (rewardTokenContract_ == null) {
          RewardTokenContract = new global::AElf.Types.Address();
        }
        RewardTokenContract.MergeFrom(other.RewardTokenContract);
      }
      if (other.stakeTokenContract_ != null) {
        if (stakeTokenContract_ == null) {
          StakeTokenContract = new global::AElf.Types.Address();
        }
        StakeTokenContract.MergeFrom(other.StakeTokenContract);
      }
      if (other.swapContract_ != null) {
        if (swapContract_ == null) {
          SwapContract = new global::AElf.Types.Address();
        }
        SwapContract.MergeFrom(other.SwapContract);
      }
      if (other.UnlockWindowDuration != 0L) {
        UnlockWindowDuration = other.UnlockWindowDuration;
      }
      releasePeriods_.Add(other.releasePeriods_);
      if (other.MergeInterval != 0L) {
        MergeInterval = other.MergeInterval;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RewardToken = input.ReadString();
            break;
          }
          case 18: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 26: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 32: {
            RewardPerSecond = input.ReadInt64();
            break;
          }
          case 42: {
            StakingToken = input.ReadString();
            break;
          }
          case 48: {
            FixedBoostFactor = input.ReadInt64();
            break;
          }
          case 56: {
            MinimumAmount = input.ReadInt64();
            break;
          }
          case 64: {
            MinimumStakeDuration = input.ReadInt64();
            break;
          }
          case 72: {
            MaximumStakeDuration = input.ReadInt64();
            break;
          }
          case 80: {
            MinimumClaimAmount = input.ReadInt64();
            break;
          }
          case 88: {
            MinimumAddLiquidityAmount = input.ReadInt64();
            break;
          }
          case 98: {
            if (rewardTokenContract_ == null) {
              RewardTokenContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(RewardTokenContract);
            break;
          }
          case 106: {
            if (stakeTokenContract_ == null) {
              StakeTokenContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(StakeTokenContract);
            break;
          }
          case 114: {
            if (swapContract_ == null) {
              SwapContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(SwapContract);
            break;
          }
          case 120: {
            UnlockWindowDuration = input.ReadInt64();
            break;
          }
          case 130:
          case 128: {
            releasePeriods_.AddEntriesFrom(input, _repeated_releasePeriods_codec);
            break;
          }
          case 136: {
            MergeInterval = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RewardToken = input.ReadString();
            break;
          }
          case 18: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 26: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 32: {
            RewardPerSecond = input.ReadInt64();
            break;
          }
          case 42: {
            StakingToken = input.ReadString();
            break;
          }
          case 48: {
            FixedBoostFactor = input.ReadInt64();
            break;
          }
          case 56: {
            MinimumAmount = input.ReadInt64();
            break;
          }
          case 64: {
            MinimumStakeDuration = input.ReadInt64();
            break;
          }
          case 72: {
            MaximumStakeDuration = input.ReadInt64();
            break;
          }
          case 80: {
            MinimumClaimAmount = input.ReadInt64();
            break;
          }
          case 88: {
            MinimumAddLiquidityAmount = input.ReadInt64();
            break;
          }
          case 98: {
            if (rewardTokenContract_ == null) {
              RewardTokenContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(RewardTokenContract);
            break;
          }
          case 106: {
            if (stakeTokenContract_ == null) {
              StakeTokenContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(StakeTokenContract);
            break;
          }
          case 114: {
            if (swapContract_ == null) {
              SwapContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(SwapContract);
            break;
          }
          case 120: {
            UnlockWindowDuration = input.ReadInt64();
            break;
          }
          case 130:
          case 128: {
            releasePeriods_.AddEntriesFrom(ref input, _repeated_releasePeriods_codec);
            break;
          }
          case 136: {
            MergeInterval = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetTokensPoolEndTimeInput : pb::IMessage<SetTokensPoolEndTimeInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetTokensPoolEndTimeInput> _parser = new pb::MessageParser<SetTokensPoolEndTimeInput>(() => new SetTokensPoolEndTimeInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetTokensPoolEndTimeInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolEndTimeInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolEndTimeInput(SetTokensPoolEndTimeInput other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      endTime_ = other.endTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolEndTimeInput Clone() {
      return new SetTokensPoolEndTimeInput(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private long endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetTokensPoolEndTimeInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetTokensPoolEndTimeInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (EndTime != other.EndTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (EndTime != 0L) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (EndTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (EndTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (EndTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetTokensPoolEndTimeInput other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.EndTime != 0L) {
        EndTime = other.EndTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            EndTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            EndTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetTokensPoolRewardConfigInput : pb::IMessage<SetTokensPoolRewardConfigInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetTokensPoolRewardConfigInput> _parser = new pb::MessageParser<SetTokensPoolRewardConfigInput>(() => new SetTokensPoolRewardConfigInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetTokensPoolRewardConfigInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolRewardConfigInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolRewardConfigInput(SetTokensPoolRewardConfigInput other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      releasePeriods_ = other.releasePeriods_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolRewardConfigInput Clone() {
      return new SetTokensPoolRewardConfigInput(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "release_periods" field.</summary>
    public const int ReleasePeriodsFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_releasePeriods_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> releasePeriods_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> ReleasePeriods {
      get { return releasePeriods_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetTokensPoolRewardConfigInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetTokensPoolRewardConfigInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if(!releasePeriods_.Equals(other.releasePeriods_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      hash ^= releasePeriods_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      releasePeriods_.WriteTo(output, _repeated_releasePeriods_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      releasePeriods_.WriteTo(ref output, _repeated_releasePeriods_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      size += releasePeriods_.CalculateSize(_repeated_releasePeriods_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetTokensPoolRewardConfigInput other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      releasePeriods_.Add(other.releasePeriods_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18:
          case 16: {
            releasePeriods_.AddEntriesFrom(input, _repeated_releasePeriods_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18:
          case 16: {
            releasePeriods_.AddEntriesFrom(ref input, _repeated_releasePeriods_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LongList : pb::IMessage<LongList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LongList> _parser = new pb::MessageParser<LongList>(() => new LongList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LongList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LongList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LongList(LongList other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LongList Clone() {
      return new LongList(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_data_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> data_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LongList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LongList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      data_.WriteTo(ref output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LongList other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            data_.AddEntriesFrom(ref input, _repeated_data_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetTokensPoolStakeConfigInput : pb::IMessage<SetTokensPoolStakeConfigInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetTokensPoolStakeConfigInput> _parser = new pb::MessageParser<SetTokensPoolStakeConfigInput>(() => new SetTokensPoolStakeConfigInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetTokensPoolStakeConfigInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolStakeConfigInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolStakeConfigInput(SetTokensPoolStakeConfigInput other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      minimumAmount_ = other.minimumAmount_;
      maximumStakeDuration_ = other.maximumStakeDuration_;
      minimumClaimAmount_ = other.minimumClaimAmount_;
      minimumStakeDuration_ = other.minimumStakeDuration_;
      minimumAddLiquidityAmount_ = other.minimumAddLiquidityAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolStakeConfigInput Clone() {
      return new SetTokensPoolStakeConfigInput(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "minimum_amount" field.</summary>
    public const int MinimumAmountFieldNumber = 2;
    private long minimumAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumAmount {
      get { return minimumAmount_; }
      set {
        minimumAmount_ = value;
      }
    }

    /// <summary>Field number for the "maximum_stake_duration" field.</summary>
    public const int MaximumStakeDurationFieldNumber = 3;
    private long maximumStakeDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaximumStakeDuration {
      get { return maximumStakeDuration_; }
      set {
        maximumStakeDuration_ = value;
      }
    }

    /// <summary>Field number for the "minimum_claim_amount" field.</summary>
    public const int MinimumClaimAmountFieldNumber = 4;
    private long minimumClaimAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumClaimAmount {
      get { return minimumClaimAmount_; }
      set {
        minimumClaimAmount_ = value;
      }
    }

    /// <summary>Field number for the "minimum_stake_duration" field.</summary>
    public const int MinimumStakeDurationFieldNumber = 5;
    private long minimumStakeDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumStakeDuration {
      get { return minimumStakeDuration_; }
      set {
        minimumStakeDuration_ = value;
      }
    }

    /// <summary>Field number for the "minimum_add_liquidity_amount" field.</summary>
    public const int MinimumAddLiquidityAmountFieldNumber = 6;
    private long minimumAddLiquidityAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumAddLiquidityAmount {
      get { return minimumAddLiquidityAmount_; }
      set {
        minimumAddLiquidityAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetTokensPoolStakeConfigInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetTokensPoolStakeConfigInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (MinimumAmount != other.MinimumAmount) return false;
      if (MaximumStakeDuration != other.MaximumStakeDuration) return false;
      if (MinimumClaimAmount != other.MinimumClaimAmount) return false;
      if (MinimumStakeDuration != other.MinimumStakeDuration) return false;
      if (MinimumAddLiquidityAmount != other.MinimumAddLiquidityAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (MinimumAmount != 0L) hash ^= MinimumAmount.GetHashCode();
      if (MaximumStakeDuration != 0L) hash ^= MaximumStakeDuration.GetHashCode();
      if (MinimumClaimAmount != 0L) hash ^= MinimumClaimAmount.GetHashCode();
      if (MinimumStakeDuration != 0L) hash ^= MinimumStakeDuration.GetHashCode();
      if (MinimumAddLiquidityAmount != 0L) hash ^= MinimumAddLiquidityAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (MinimumAmount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MinimumAmount);
      }
      if (MaximumStakeDuration != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(MaximumStakeDuration);
      }
      if (MinimumClaimAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MinimumClaimAmount);
      }
      if (MinimumStakeDuration != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(MinimumStakeDuration);
      }
      if (MinimumAddLiquidityAmount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(MinimumAddLiquidityAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (MinimumAmount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MinimumAmount);
      }
      if (MaximumStakeDuration != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(MaximumStakeDuration);
      }
      if (MinimumClaimAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MinimumClaimAmount);
      }
      if (MinimumStakeDuration != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(MinimumStakeDuration);
      }
      if (MinimumAddLiquidityAmount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(MinimumAddLiquidityAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (MinimumAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumAmount);
      }
      if (MaximumStakeDuration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaximumStakeDuration);
      }
      if (MinimumClaimAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumClaimAmount);
      }
      if (MinimumStakeDuration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumStakeDuration);
      }
      if (MinimumAddLiquidityAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumAddLiquidityAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetTokensPoolStakeConfigInput other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.MinimumAmount != 0L) {
        MinimumAmount = other.MinimumAmount;
      }
      if (other.MaximumStakeDuration != 0L) {
        MaximumStakeDuration = other.MaximumStakeDuration;
      }
      if (other.MinimumClaimAmount != 0L) {
        MinimumClaimAmount = other.MinimumClaimAmount;
      }
      if (other.MinimumStakeDuration != 0L) {
        MinimumStakeDuration = other.MinimumStakeDuration;
      }
      if (other.MinimumAddLiquidityAmount != 0L) {
        MinimumAddLiquidityAmount = other.MinimumAddLiquidityAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            MinimumAmount = input.ReadInt64();
            break;
          }
          case 24: {
            MaximumStakeDuration = input.ReadInt64();
            break;
          }
          case 32: {
            MinimumClaimAmount = input.ReadInt64();
            break;
          }
          case 40: {
            MinimumStakeDuration = input.ReadInt64();
            break;
          }
          case 48: {
            MinimumAddLiquidityAmount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            MinimumAmount = input.ReadInt64();
            break;
          }
          case 24: {
            MaximumStakeDuration = input.ReadInt64();
            break;
          }
          case 32: {
            MinimumClaimAmount = input.ReadInt64();
            break;
          }
          case 40: {
            MinimumStakeDuration = input.ReadInt64();
            break;
          }
          case 48: {
            MinimumAddLiquidityAmount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetTokensPoolFixedBoostFactorInput : pb::IMessage<SetTokensPoolFixedBoostFactorInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetTokensPoolFixedBoostFactorInput> _parser = new pb::MessageParser<SetTokensPoolFixedBoostFactorInput>(() => new SetTokensPoolFixedBoostFactorInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetTokensPoolFixedBoostFactorInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolFixedBoostFactorInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolFixedBoostFactorInput(SetTokensPoolFixedBoostFactorInput other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      fixedBoostFactor_ = other.fixedBoostFactor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolFixedBoostFactorInput Clone() {
      return new SetTokensPoolFixedBoostFactorInput(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "fixed_boost_factor" field.</summary>
    public const int FixedBoostFactorFieldNumber = 2;
    private long fixedBoostFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FixedBoostFactor {
      get { return fixedBoostFactor_; }
      set {
        fixedBoostFactor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetTokensPoolFixedBoostFactorInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetTokensPoolFixedBoostFactorInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (FixedBoostFactor != other.FixedBoostFactor) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (FixedBoostFactor != 0L) hash ^= FixedBoostFactor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (FixedBoostFactor != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FixedBoostFactor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (FixedBoostFactor != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FixedBoostFactor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (FixedBoostFactor != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FixedBoostFactor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetTokensPoolFixedBoostFactorInput other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.FixedBoostFactor != 0L) {
        FixedBoostFactor = other.FixedBoostFactor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            FixedBoostFactor = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            FixedBoostFactor = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetTokensPoolRewardPerSecondInput : pb::IMessage<SetTokensPoolRewardPerSecondInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetTokensPoolRewardPerSecondInput> _parser = new pb::MessageParser<SetTokensPoolRewardPerSecondInput>(() => new SetTokensPoolRewardPerSecondInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetTokensPoolRewardPerSecondInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolRewardPerSecondInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolRewardPerSecondInput(SetTokensPoolRewardPerSecondInput other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      rewardPerSecond_ = other.rewardPerSecond_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolRewardPerSecondInput Clone() {
      return new SetTokensPoolRewardPerSecondInput(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "reward_per_second" field.</summary>
    public const int RewardPerSecondFieldNumber = 2;
    private long rewardPerSecond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RewardPerSecond {
      get { return rewardPerSecond_; }
      set {
        rewardPerSecond_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetTokensPoolRewardPerSecondInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetTokensPoolRewardPerSecondInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (RewardPerSecond != other.RewardPerSecond) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (RewardPerSecond != 0L) hash ^= RewardPerSecond.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (RewardPerSecond != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RewardPerSecond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (RewardPerSecond != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RewardPerSecond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (RewardPerSecond != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RewardPerSecond);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetTokensPoolRewardPerSecondInput other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.RewardPerSecond != 0L) {
        RewardPerSecond = other.RewardPerSecond;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            RewardPerSecond = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            RewardPerSecond = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetTokensPoolUnlockWindowDurationInput : pb::IMessage<SetTokensPoolUnlockWindowDurationInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetTokensPoolUnlockWindowDurationInput> _parser = new pb::MessageParser<SetTokensPoolUnlockWindowDurationInput>(() => new SetTokensPoolUnlockWindowDurationInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetTokensPoolUnlockWindowDurationInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolUnlockWindowDurationInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolUnlockWindowDurationInput(SetTokensPoolUnlockWindowDurationInput other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      unlockWindowDuration_ = other.unlockWindowDuration_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolUnlockWindowDurationInput Clone() {
      return new SetTokensPoolUnlockWindowDurationInput(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "unlock_window_duration" field.</summary>
    public const int UnlockWindowDurationFieldNumber = 2;
    private long unlockWindowDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long UnlockWindowDuration {
      get { return unlockWindowDuration_; }
      set {
        unlockWindowDuration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetTokensPoolUnlockWindowDurationInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetTokensPoolUnlockWindowDurationInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (UnlockWindowDuration != other.UnlockWindowDuration) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (UnlockWindowDuration != 0L) hash ^= UnlockWindowDuration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (UnlockWindowDuration != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UnlockWindowDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (UnlockWindowDuration != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UnlockWindowDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (UnlockWindowDuration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnlockWindowDuration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetTokensPoolUnlockWindowDurationInput other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.UnlockWindowDuration != 0L) {
        UnlockWindowDuration = other.UnlockWindowDuration;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            UnlockWindowDuration = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            UnlockWindowDuration = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetTokensPoolMergeIntervalInput : pb::IMessage<SetTokensPoolMergeIntervalInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetTokensPoolMergeIntervalInput> _parser = new pb::MessageParser<SetTokensPoolMergeIntervalInput>(() => new SetTokensPoolMergeIntervalInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetTokensPoolMergeIntervalInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolMergeIntervalInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolMergeIntervalInput(SetTokensPoolMergeIntervalInput other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      mergeInterval_ = other.mergeInterval_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolMergeIntervalInput Clone() {
      return new SetTokensPoolMergeIntervalInput(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "merge_interval" field.</summary>
    public const int MergeIntervalFieldNumber = 2;
    private long mergeInterval_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MergeInterval {
      get { return mergeInterval_; }
      set {
        mergeInterval_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetTokensPoolMergeIntervalInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetTokensPoolMergeIntervalInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (MergeInterval != other.MergeInterval) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (MergeInterval != 0L) hash ^= MergeInterval.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (MergeInterval != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MergeInterval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (MergeInterval != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MergeInterval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (MergeInterval != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MergeInterval);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetTokensPoolMergeIntervalInput other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.MergeInterval != 0L) {
        MergeInterval = other.MergeInterval;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            MergeInterval = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            MergeInterval = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetPoolInfoOutput : pb::IMessage<GetPoolInfoOutput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetPoolInfoOutput> _parser = new pb::MessageParser<GetPoolInfoOutput>(() => new GetPoolInfoOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetPoolInfoOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetPoolInfoOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetPoolInfoOutput(GetPoolInfoOutput other) : this() {
      poolInfo_ = other.poolInfo_ != null ? other.poolInfo_.Clone() : null;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetPoolInfoOutput Clone() {
      return new GetPoolInfoOutput(this);
    }

    /// <summary>Field number for the "pool_info" field.</summary>
    public const int PoolInfoFieldNumber = 1;
    private global::EcoEarn.Contracts.Tokens.PoolInfo poolInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.PoolInfo PoolInfo {
      get { return poolInfo_; }
      set {
        poolInfo_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private bool status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetPoolInfoOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetPoolInfoOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolInfo, other.PoolInfo)) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolInfo_ != null) hash ^= PoolInfo.GetHashCode();
      if (Status != false) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolInfo);
      }
      if (Status != false) {
        output.WriteRawTag(16);
        output.WriteBool(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolInfo);
      }
      if (Status != false) {
        output.WriteRawTag(16);
        output.WriteBool(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolInfo);
      }
      if (Status != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetPoolInfoOutput other) {
      if (other == null) {
        return;
      }
      if (other.poolInfo_ != null) {
        if (poolInfo_ == null) {
          PoolInfo = new global::EcoEarn.Contracts.Tokens.PoolInfo();
        }
        PoolInfo.MergeFrom(other.PoolInfo);
      }
      if (other.Status != false) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolInfo_ == null) {
              PoolInfo = new global::EcoEarn.Contracts.Tokens.PoolInfo();
            }
            input.ReadMessage(PoolInfo);
            break;
          }
          case 16: {
            Status = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolInfo_ == null) {
              PoolInfo = new global::EcoEarn.Contracts.Tokens.PoolInfo();
            }
            input.ReadMessage(PoolInfo);
            break;
          }
          case 16: {
            Status = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PoolInfo : pb::IMessage<PoolInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PoolInfo> _parser = new pb::MessageParser<PoolInfo>(() => new PoolInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PoolInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolInfo(PoolInfo other) : this() {
      dappId_ = other.dappId_ != null ? other.dappId_.Clone() : null;
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      precisionFactor_ = other.precisionFactor_ != null ? other.precisionFactor_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolInfo Clone() {
      return new PoolInfo(this);
    }

    /// <summary>Field number for the "dapp_id" field.</summary>
    public const int DappIdFieldNumber = 1;
    private global::AElf.Types.Hash dappId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash DappId {
      get { return dappId_; }
      set {
        dappId_ = value;
      }
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 2;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 3;
    private global::EcoEarn.Contracts.Tokens.TokensPoolConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.TokensPoolConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "precision_factor" field.</summary>
    public const int PrecisionFactorFieldNumber = 4;
    private global::AElf.Types.BigIntValue precisionFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.BigIntValue PrecisionFactor {
      get { return precisionFactor_; }
      set {
        precisionFactor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PoolInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PoolInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DappId, other.DappId)) return false;
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (!object.Equals(PrecisionFactor, other.PrecisionFactor)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (dappId_ != null) hash ^= DappId.GetHashCode();
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (precisionFactor_ != null) hash ^= PrecisionFactor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (poolId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PoolId);
      }
      if (config_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Config);
      }
      if (precisionFactor_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PrecisionFactor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (poolId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PoolId);
      }
      if (config_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Config);
      }
      if (precisionFactor_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PrecisionFactor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (dappId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DappId);
      }
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (precisionFactor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrecisionFactor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PoolInfo other) {
      if (other == null) {
        return;
      }
      if (other.dappId_ != null) {
        if (dappId_ == null) {
          DappId = new global::AElf.Types.Hash();
        }
        DappId.MergeFrom(other.DappId);
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::EcoEarn.Contracts.Tokens.TokensPoolConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.precisionFactor_ != null) {
        if (precisionFactor_ == null) {
          PrecisionFactor = new global::AElf.Types.BigIntValue();
        }
        PrecisionFactor.MergeFrom(other.PrecisionFactor);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 26: {
            if (config_ == null) {
              Config = new global::EcoEarn.Contracts.Tokens.TokensPoolConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 34: {
            if (precisionFactor_ == null) {
              PrecisionFactor = new global::AElf.Types.BigIntValue();
            }
            input.ReadMessage(PrecisionFactor);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 26: {
            if (config_ == null) {
              Config = new global::EcoEarn.Contracts.Tokens.TokensPoolConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 34: {
            if (precisionFactor_ == null) {
              PrecisionFactor = new global::AElf.Types.BigIntValue();
            }
            input.ReadMessage(PrecisionFactor);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PoolData : pb::IMessage<PoolData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PoolData> _parser = new pb::MessageParser<PoolData>(() => new PoolData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PoolData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolData(PoolData other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      accTokenPerShare_ = other.accTokenPerShare_ != null ? other.accTokenPerShare_.Clone() : null;
      lastRewardTime_ = other.lastRewardTime_ != null ? other.lastRewardTime_.Clone() : null;
      totalStakedAmount_ = other.totalStakedAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolData Clone() {
      return new PoolData(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "acc_token_per_share" field.</summary>
    public const int AccTokenPerShareFieldNumber = 2;
    private global::AElf.Types.BigIntValue accTokenPerShare_;
    /// <summary>
    /// Accrued token per share
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.BigIntValue AccTokenPerShare {
      get { return accTokenPerShare_; }
      set {
        accTokenPerShare_ = value;
      }
    }

    /// <summary>Field number for the "last_reward_time" field.</summary>
    public const int LastRewardTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastRewardTime_;
    /// <summary>
    /// The block number of the last pool update
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastRewardTime {
      get { return lastRewardTime_; }
      set {
        lastRewardTime_ = value;
      }
    }

    /// <summary>Field number for the "total_staked_amount" field.</summary>
    public const int TotalStakedAmountFieldNumber = 4;
    private long totalStakedAmount_;
    /// <summary>
    /// The amount of token staked
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalStakedAmount {
      get { return totalStakedAmount_; }
      set {
        totalStakedAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PoolData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PoolData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (!object.Equals(AccTokenPerShare, other.AccTokenPerShare)) return false;
      if (!object.Equals(LastRewardTime, other.LastRewardTime)) return false;
      if (TotalStakedAmount != other.TotalStakedAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (accTokenPerShare_ != null) hash ^= AccTokenPerShare.GetHashCode();
      if (lastRewardTime_ != null) hash ^= LastRewardTime.GetHashCode();
      if (TotalStakedAmount != 0L) hash ^= TotalStakedAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (accTokenPerShare_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AccTokenPerShare);
      }
      if (lastRewardTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastRewardTime);
      }
      if (TotalStakedAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalStakedAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (accTokenPerShare_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AccTokenPerShare);
      }
      if (lastRewardTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastRewardTime);
      }
      if (TotalStakedAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalStakedAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (accTokenPerShare_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccTokenPerShare);
      }
      if (lastRewardTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastRewardTime);
      }
      if (TotalStakedAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalStakedAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PoolData other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.accTokenPerShare_ != null) {
        if (accTokenPerShare_ == null) {
          AccTokenPerShare = new global::AElf.Types.BigIntValue();
        }
        AccTokenPerShare.MergeFrom(other.AccTokenPerShare);
      }
      if (other.lastRewardTime_ != null) {
        if (lastRewardTime_ == null) {
          LastRewardTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastRewardTime.MergeFrom(other.LastRewardTime);
      }
      if (other.TotalStakedAmount != 0L) {
        TotalStakedAmount = other.TotalStakedAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (accTokenPerShare_ == null) {
              AccTokenPerShare = new global::AElf.Types.BigIntValue();
            }
            input.ReadMessage(AccTokenPerShare);
            break;
          }
          case 26: {
            if (lastRewardTime_ == null) {
              LastRewardTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastRewardTime);
            break;
          }
          case 32: {
            TotalStakedAmount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (accTokenPerShare_ == null) {
              AccTokenPerShare = new global::AElf.Types.BigIntValue();
            }
            input.ReadMessage(AccTokenPerShare);
            break;
          }
          case 26: {
            if (lastRewardTime_ == null) {
              LastRewardTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastRewardTime);
            break;
          }
          case 32: {
            TotalStakedAmount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StakeInput : pb::IMessage<StakeInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StakeInput> _parser = new pb::MessageParser<StakeInput>(() => new StakeInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StakeInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StakeInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StakeInput(StakeInput other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      amount_ = other.amount_;
      period_ = other.period_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StakeInput Clone() {
      return new StakeInput(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "period" field.</summary>
    public const int PeriodFieldNumber = 3;
    private long period_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Period {
      get { return period_; }
      set {
        period_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StakeInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StakeInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (Amount != other.Amount) return false;
      if (Period != other.Period) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (Period != 0L) hash ^= Period.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (Period != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Period);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (Period != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Period);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (Period != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Period);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StakeInput other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.Period != 0L) {
        Period = other.Period;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 24: {
            Period = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 24: {
            Period = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StakeInfo : pb::IMessage<StakeInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StakeInfo> _parser = new pb::MessageParser<StakeInfo>(() => new StakeInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StakeInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StakeInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StakeInfo(StakeInfo other) : this() {
      stakeId_ = other.stakeId_ != null ? other.stakeId_.Clone() : null;
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      account_ = other.account_ != null ? other.account_.Clone() : null;
      stakingToken_ = other.stakingToken_;
      stakingPeriod_ = other.stakingPeriod_;
      unlockTime_ = other.unlockTime_ != null ? other.unlockTime_.Clone() : null;
      lastOperationTime_ = other.lastOperationTime_ != null ? other.lastOperationTime_.Clone() : null;
      subStakeInfos_ = other.subStakeInfos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StakeInfo Clone() {
      return new StakeInfo(this);
    }

    /// <summary>Field number for the "stake_id" field.</summary>
    public const int StakeIdFieldNumber = 1;
    private global::AElf.Types.Hash stakeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash StakeId {
      get { return stakeId_; }
      set {
        stakeId_ = value;
      }
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 2;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 3;
    private global::AElf.Types.Address account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "staking_token" field.</summary>
    public const int StakingTokenFieldNumber = 4;
    private string stakingToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StakingToken {
      get { return stakingToken_; }
      set {
        stakingToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "staking_period" field.</summary>
    public const int StakingPeriodFieldNumber = 5;
    private long stakingPeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StakingPeriod {
      get { return stakingPeriod_; }
      set {
        stakingPeriod_ = value;
      }
    }

    /// <summary>Field number for the "unlock_time" field.</summary>
    public const int UnlockTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp unlockTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UnlockTime {
      get { return unlockTime_; }
      set {
        unlockTime_ = value;
      }
    }

    /// <summary>Field number for the "last_operation_time" field.</summary>
    public const int LastOperationTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastOperationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastOperationTime {
      get { return lastOperationTime_; }
      set {
        lastOperationTime_ = value;
      }
    }

    /// <summary>Field number for the "sub_stake_infos" field.</summary>
    public const int SubStakeInfosFieldNumber = 8;
    private static readonly pb::FieldCodec<global::EcoEarn.Contracts.Tokens.SubStakeInfo> _repeated_subStakeInfos_codec
        = pb::FieldCodec.ForMessage(66, global::EcoEarn.Contracts.Tokens.SubStakeInfo.Parser);
    private readonly pbc::RepeatedField<global::EcoEarn.Contracts.Tokens.SubStakeInfo> subStakeInfos_ = new pbc::RepeatedField<global::EcoEarn.Contracts.Tokens.SubStakeInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EcoEarn.Contracts.Tokens.SubStakeInfo> SubStakeInfos {
      get { return subStakeInfos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StakeInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StakeInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StakeId, other.StakeId)) return false;
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (!object.Equals(Account, other.Account)) return false;
      if (StakingToken != other.StakingToken) return false;
      if (StakingPeriod != other.StakingPeriod) return false;
      if (!object.Equals(UnlockTime, other.UnlockTime)) return false;
      if (!object.Equals(LastOperationTime, other.LastOperationTime)) return false;
      if(!subStakeInfos_.Equals(other.subStakeInfos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (stakeId_ != null) hash ^= StakeId.GetHashCode();
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (account_ != null) hash ^= Account.GetHashCode();
      if (StakingToken.Length != 0) hash ^= StakingToken.GetHashCode();
      if (StakingPeriod != 0L) hash ^= StakingPeriod.GetHashCode();
      if (unlockTime_ != null) hash ^= UnlockTime.GetHashCode();
      if (lastOperationTime_ != null) hash ^= LastOperationTime.GetHashCode();
      hash ^= subStakeInfos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (stakeId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StakeId);
      }
      if (poolId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PoolId);
      }
      if (account_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Account);
      }
      if (StakingToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StakingToken);
      }
      if (StakingPeriod != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(StakingPeriod);
      }
      if (unlockTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(UnlockTime);
      }
      if (lastOperationTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LastOperationTime);
      }
      subStakeInfos_.WriteTo(output, _repeated_subStakeInfos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (stakeId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StakeId);
      }
      if (poolId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PoolId);
      }
      if (account_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Account);
      }
      if (StakingToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StakingToken);
      }
      if (StakingPeriod != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(StakingPeriod);
      }
      if (unlockTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(UnlockTime);
      }
      if (lastOperationTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LastOperationTime);
      }
      subStakeInfos_.WriteTo(ref output, _repeated_subStakeInfos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (stakeId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StakeId);
      }
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (StakingToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StakingToken);
      }
      if (StakingPeriod != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StakingPeriod);
      }
      if (unlockTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnlockTime);
      }
      if (lastOperationTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastOperationTime);
      }
      size += subStakeInfos_.CalculateSize(_repeated_subStakeInfos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StakeInfo other) {
      if (other == null) {
        return;
      }
      if (other.stakeId_ != null) {
        if (stakeId_ == null) {
          StakeId = new global::AElf.Types.Hash();
        }
        StakeId.MergeFrom(other.StakeId);
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.account_ != null) {
        if (account_ == null) {
          Account = new global::AElf.Types.Address();
        }
        Account.MergeFrom(other.Account);
      }
      if (other.StakingToken.Length != 0) {
        StakingToken = other.StakingToken;
      }
      if (other.StakingPeriod != 0L) {
        StakingPeriod = other.StakingPeriod;
      }
      if (other.unlockTime_ != null) {
        if (unlockTime_ == null) {
          UnlockTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UnlockTime.MergeFrom(other.UnlockTime);
      }
      if (other.lastOperationTime_ != null) {
        if (lastOperationTime_ == null) {
          LastOperationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastOperationTime.MergeFrom(other.LastOperationTime);
      }
      subStakeInfos_.Add(other.subStakeInfos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stakeId_ == null) {
              StakeId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(StakeId);
            break;
          }
          case 18: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 26: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
          case 34: {
            StakingToken = input.ReadString();
            break;
          }
          case 40: {
            StakingPeriod = input.ReadInt64();
            break;
          }
          case 50: {
            if (unlockTime_ == null) {
              UnlockTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UnlockTime);
            break;
          }
          case 58: {
            if (lastOperationTime_ == null) {
              LastOperationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastOperationTime);
            break;
          }
          case 66: {
            subStakeInfos_.AddEntriesFrom(input, _repeated_subStakeInfos_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (stakeId_ == null) {
              StakeId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(StakeId);
            break;
          }
          case 18: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 26: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
          case 34: {
            StakingToken = input.ReadString();
            break;
          }
          case 40: {
            StakingPeriod = input.ReadInt64();
            break;
          }
          case 50: {
            if (unlockTime_ == null) {
              UnlockTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UnlockTime);
            break;
          }
          case 58: {
            if (lastOperationTime_ == null) {
              LastOperationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastOperationTime);
            break;
          }
          case 66: {
            subStakeInfos_.AddEntriesFrom(ref input, _repeated_subStakeInfos_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SubStakeInfo : pb::IMessage<SubStakeInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubStakeInfo> _parser = new pb::MessageParser<SubStakeInfo>(() => new SubStakeInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SubStakeInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubStakeInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubStakeInfo(SubStakeInfo other) : this() {
      subStakeId_ = other.subStakeId_ != null ? other.subStakeId_.Clone() : null;
      stakedAmount_ = other.stakedAmount_;
      earlyStakedAmount_ = other.earlyStakedAmount_;
      stakedBlockNumber_ = other.stakedBlockNumber_;
      stakedTime_ = other.stakedTime_ != null ? other.stakedTime_.Clone() : null;
      period_ = other.period_;
      boostedAmount_ = other.boostedAmount_;
      rewardDebt_ = other.rewardDebt_;
      rewardAmount_ = other.rewardAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubStakeInfo Clone() {
      return new SubStakeInfo(this);
    }

    /// <summary>Field number for the "sub_stake_id" field.</summary>
    public const int SubStakeIdFieldNumber = 1;
    private global::AElf.Types.Hash subStakeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash SubStakeId {
      get { return subStakeId_; }
      set {
        subStakeId_ = value;
      }
    }

    /// <summary>Field number for the "staked_amount" field.</summary>
    public const int StakedAmountFieldNumber = 2;
    private long stakedAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StakedAmount {
      get { return stakedAmount_; }
      set {
        stakedAmount_ = value;
      }
    }

    /// <summary>Field number for the "early_staked_amount" field.</summary>
    public const int EarlyStakedAmountFieldNumber = 3;
    private long earlyStakedAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EarlyStakedAmount {
      get { return earlyStakedAmount_; }
      set {
        earlyStakedAmount_ = value;
      }
    }

    /// <summary>Field number for the "staked_block_number" field.</summary>
    public const int StakedBlockNumberFieldNumber = 4;
    private long stakedBlockNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StakedBlockNumber {
      get { return stakedBlockNumber_; }
      set {
        stakedBlockNumber_ = value;
      }
    }

    /// <summary>Field number for the "staked_time" field.</summary>
    public const int StakedTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp stakedTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StakedTime {
      get { return stakedTime_; }
      set {
        stakedTime_ = value;
      }
    }

    /// <summary>Field number for the "period" field.</summary>
    public const int PeriodFieldNumber = 6;
    private long period_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Period {
      get { return period_; }
      set {
        period_ = value;
      }
    }

    /// <summary>Field number for the "boosted_amount" field.</summary>
    public const int BoostedAmountFieldNumber = 7;
    private long boostedAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BoostedAmount {
      get { return boostedAmount_; }
      set {
        boostedAmount_ = value;
      }
    }

    /// <summary>Field number for the "reward_debt" field.</summary>
    public const int RewardDebtFieldNumber = 8;
    private long rewardDebt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RewardDebt {
      get { return rewardDebt_; }
      set {
        rewardDebt_ = value;
      }
    }

    /// <summary>Field number for the "reward_amount" field.</summary>
    public const int RewardAmountFieldNumber = 9;
    private long rewardAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RewardAmount {
      get { return rewardAmount_; }
      set {
        rewardAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SubStakeInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SubStakeInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SubStakeId, other.SubStakeId)) return false;
      if (StakedAmount != other.StakedAmount) return false;
      if (EarlyStakedAmount != other.EarlyStakedAmount) return false;
      if (StakedBlockNumber != other.StakedBlockNumber) return false;
      if (!object.Equals(StakedTime, other.StakedTime)) return false;
      if (Period != other.Period) return false;
      if (BoostedAmount != other.BoostedAmount) return false;
      if (RewardDebt != other.RewardDebt) return false;
      if (RewardAmount != other.RewardAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (subStakeId_ != null) hash ^= SubStakeId.GetHashCode();
      if (StakedAmount != 0L) hash ^= StakedAmount.GetHashCode();
      if (EarlyStakedAmount != 0L) hash ^= EarlyStakedAmount.GetHashCode();
      if (StakedBlockNumber != 0L) hash ^= StakedBlockNumber.GetHashCode();
      if (stakedTime_ != null) hash ^= StakedTime.GetHashCode();
      if (Period != 0L) hash ^= Period.GetHashCode();
      if (BoostedAmount != 0L) hash ^= BoostedAmount.GetHashCode();
      if (RewardDebt != 0L) hash ^= RewardDebt.GetHashCode();
      if (RewardAmount != 0L) hash ^= RewardAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (subStakeId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SubStakeId);
      }
      if (StakedAmount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StakedAmount);
      }
      if (EarlyStakedAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(EarlyStakedAmount);
      }
      if (StakedBlockNumber != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(StakedBlockNumber);
      }
      if (stakedTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(StakedTime);
      }
      if (Period != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Period);
      }
      if (BoostedAmount != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(BoostedAmount);
      }
      if (RewardDebt != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(RewardDebt);
      }
      if (RewardAmount != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(RewardAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (subStakeId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SubStakeId);
      }
      if (StakedAmount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StakedAmount);
      }
      if (EarlyStakedAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(EarlyStakedAmount);
      }
      if (StakedBlockNumber != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(StakedBlockNumber);
      }
      if (stakedTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(StakedTime);
      }
      if (Period != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Period);
      }
      if (BoostedAmount != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(BoostedAmount);
      }
      if (RewardDebt != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(RewardDebt);
      }
      if (RewardAmount != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(RewardAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (subStakeId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubStakeId);
      }
      if (StakedAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StakedAmount);
      }
      if (EarlyStakedAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EarlyStakedAmount);
      }
      if (StakedBlockNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StakedBlockNumber);
      }
      if (stakedTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StakedTime);
      }
      if (Period != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Period);
      }
      if (BoostedAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BoostedAmount);
      }
      if (RewardDebt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RewardDebt);
      }
      if (RewardAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RewardAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SubStakeInfo other) {
      if (other == null) {
        return;
      }
      if (other.subStakeId_ != null) {
        if (subStakeId_ == null) {
          SubStakeId = new global::AElf.Types.Hash();
        }
        SubStakeId.MergeFrom(other.SubStakeId);
      }
      if (other.StakedAmount != 0L) {
        StakedAmount = other.StakedAmount;
      }
      if (other.EarlyStakedAmount != 0L) {
        EarlyStakedAmount = other.EarlyStakedAmount;
      }
      if (other.StakedBlockNumber != 0L) {
        StakedBlockNumber = other.StakedBlockNumber;
      }
      if (other.stakedTime_ != null) {
        if (stakedTime_ == null) {
          StakedTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StakedTime.MergeFrom(other.StakedTime);
      }
      if (other.Period != 0L) {
        Period = other.Period;
      }
      if (other.BoostedAmount != 0L) {
        BoostedAmount = other.BoostedAmount;
      }
      if (other.RewardDebt != 0L) {
        RewardDebt = other.RewardDebt;
      }
      if (other.RewardAmount != 0L) {
        RewardAmount = other.RewardAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (subStakeId_ == null) {
              SubStakeId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(SubStakeId);
            break;
          }
          case 16: {
            StakedAmount = input.ReadInt64();
            break;
          }
          case 24: {
            EarlyStakedAmount = input.ReadInt64();
            break;
          }
          case 32: {
            StakedBlockNumber = input.ReadInt64();
            break;
          }
          case 42: {
            if (stakedTime_ == null) {
              StakedTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StakedTime);
            break;
          }
          case 48: {
            Period = input.ReadInt64();
            break;
          }
          case 56: {
            BoostedAmount = input.ReadInt64();
            break;
          }
          case 64: {
            RewardDebt = input.ReadInt64();
            break;
          }
          case 72: {
            RewardAmount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (subStakeId_ == null) {
              SubStakeId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(SubStakeId);
            break;
          }
          case 16: {
            StakedAmount = input.ReadInt64();
            break;
          }
          case 24: {
            EarlyStakedAmount = input.ReadInt64();
            break;
          }
          case 32: {
            StakedBlockNumber = input.ReadInt64();
            break;
          }
          case 42: {
            if (stakedTime_ == null) {
              StakedTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StakedTime);
            break;
          }
          case 48: {
            Period = input.ReadInt64();
            break;
          }
          case 56: {
            BoostedAmount = input.ReadInt64();
            break;
          }
          case 64: {
            RewardDebt = input.ReadInt64();
            break;
          }
          case 72: {
            RewardAmount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StakeForInput : pb::IMessage<StakeForInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StakeForInput> _parser = new pb::MessageParser<StakeForInput>(() => new StakeForInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StakeForInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StakeForInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StakeForInput(StakeForInput other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      amount_ = other.amount_;
      period_ = other.period_;
      fromAddress_ = other.fromAddress_ != null ? other.fromAddress_.Clone() : null;
      longestReleaseTime_ = other.longestReleaseTime_ != null ? other.longestReleaseTime_.Clone() : null;
      isLiquidity_ = other.isLiquidity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StakeForInput Clone() {
      return new StakeForInput(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "period" field.</summary>
    public const int PeriodFieldNumber = 3;
    private long period_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Period {
      get { return period_; }
      set {
        period_ = value;
      }
    }

    /// <summary>Field number for the "from_address" field.</summary>
    public const int FromAddressFieldNumber = 4;
    private global::AElf.Types.Address fromAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address FromAddress {
      get { return fromAddress_; }
      set {
        fromAddress_ = value;
      }
    }

    /// <summary>Field number for the "longest_release_time" field.</summary>
    public const int LongestReleaseTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp longestReleaseTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LongestReleaseTime {
      get { return longestReleaseTime_; }
      set {
        longestReleaseTime_ = value;
      }
    }

    /// <summary>Field number for the "is_liquidity" field.</summary>
    public const int IsLiquidityFieldNumber = 6;
    private bool isLiquidity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsLiquidity {
      get { return isLiquidity_; }
      set {
        isLiquidity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StakeForInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StakeForInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (Amount != other.Amount) return false;
      if (Period != other.Period) return false;
      if (!object.Equals(FromAddress, other.FromAddress)) return false;
      if (!object.Equals(LongestReleaseTime, other.LongestReleaseTime)) return false;
      if (IsLiquidity != other.IsLiquidity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (Period != 0L) hash ^= Period.GetHashCode();
      if (fromAddress_ != null) hash ^= FromAddress.GetHashCode();
      if (longestReleaseTime_ != null) hash ^= LongestReleaseTime.GetHashCode();
      if (IsLiquidity != false) hash ^= IsLiquidity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (Period != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Period);
      }
      if (fromAddress_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(FromAddress);
      }
      if (longestReleaseTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LongestReleaseTime);
      }
      if (IsLiquidity != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsLiquidity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (Period != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Period);
      }
      if (fromAddress_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(FromAddress);
      }
      if (longestReleaseTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LongestReleaseTime);
      }
      if (IsLiquidity != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsLiquidity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (Period != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Period);
      }
      if (fromAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromAddress);
      }
      if (longestReleaseTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LongestReleaseTime);
      }
      if (IsLiquidity != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StakeForInput other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.Period != 0L) {
        Period = other.Period;
      }
      if (other.fromAddress_ != null) {
        if (fromAddress_ == null) {
          FromAddress = new global::AElf.Types.Address();
        }
        FromAddress.MergeFrom(other.FromAddress);
      }
      if (other.longestReleaseTime_ != null) {
        if (longestReleaseTime_ == null) {
          LongestReleaseTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LongestReleaseTime.MergeFrom(other.LongestReleaseTime);
      }
      if (other.IsLiquidity != false) {
        IsLiquidity = other.IsLiquidity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 24: {
            Period = input.ReadInt64();
            break;
          }
          case 34: {
            if (fromAddress_ == null) {
              FromAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(FromAddress);
            break;
          }
          case 42: {
            if (longestReleaseTime_ == null) {
              LongestReleaseTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LongestReleaseTime);
            break;
          }
          case 48: {
            IsLiquidity = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 24: {
            Period = input.ReadInt64();
            break;
          }
          case 34: {
            if (fromAddress_ == null) {
              FromAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(FromAddress);
            break;
          }
          case 42: {
            if (longestReleaseTime_ == null) {
              LongestReleaseTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LongestReleaseTime);
            break;
          }
          case 48: {
            IsLiquidity = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RenewInput : pb::IMessage<RenewInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RenewInput> _parser = new pb::MessageParser<RenewInput>(() => new RenewInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RenewInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RenewInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RenewInput(RenewInput other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      period_ = other.period_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RenewInput Clone() {
      return new RenewInput(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "period" field.</summary>
    public const int PeriodFieldNumber = 2;
    private long period_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Period {
      get { return period_; }
      set {
        period_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RenewInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RenewInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (Period != other.Period) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (Period != 0L) hash ^= Period.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (Period != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Period);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (Period != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Period);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (Period != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Period);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RenewInput other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.Period != 0L) {
        Period = other.Period;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            Period = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            Period = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetRewardInput : pb::IMessage<GetRewardInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetRewardInput> _parser = new pb::MessageParser<GetRewardInput>(() => new GetRewardInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetRewardInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRewardInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRewardInput(GetRewardInput other) : this() {
      stakeIds_ = other.stakeIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRewardInput Clone() {
      return new GetRewardInput(this);
    }

    /// <summary>Field number for the "stake_ids" field.</summary>
    public const int StakeIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Types.Hash> _repeated_stakeIds_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Types.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Types.Hash> stakeIds_ = new pbc::RepeatedField<global::AElf.Types.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::AElf.Types.Hash> StakeIds {
      get { return stakeIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetRewardInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetRewardInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!stakeIds_.Equals(other.stakeIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= stakeIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      stakeIds_.WriteTo(output, _repeated_stakeIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      stakeIds_.WriteTo(ref output, _repeated_stakeIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += stakeIds_.CalculateSize(_repeated_stakeIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetRewardInput other) {
      if (other == null) {
        return;
      }
      stakeIds_.Add(other.stakeIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            stakeIds_.AddEntriesFrom(input, _repeated_stakeIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            stakeIds_.AddEntriesFrom(ref input, _repeated_stakeIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetRewardOutput : pb::IMessage<GetRewardOutput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetRewardOutput> _parser = new pb::MessageParser<GetRewardOutput>(() => new GetRewardOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetRewardOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRewardOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRewardOutput(GetRewardOutput other) : this() {
      rewardInfos_ = other.rewardInfos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRewardOutput Clone() {
      return new GetRewardOutput(this);
    }

    /// <summary>Field number for the "reward_infos" field.</summary>
    public const int RewardInfosFieldNumber = 1;
    private static readonly pb::FieldCodec<global::EcoEarn.Contracts.Tokens.RewardInfo> _repeated_rewardInfos_codec
        = pb::FieldCodec.ForMessage(10, global::EcoEarn.Contracts.Tokens.RewardInfo.Parser);
    private readonly pbc::RepeatedField<global::EcoEarn.Contracts.Tokens.RewardInfo> rewardInfos_ = new pbc::RepeatedField<global::EcoEarn.Contracts.Tokens.RewardInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EcoEarn.Contracts.Tokens.RewardInfo> RewardInfos {
      get { return rewardInfos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetRewardOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetRewardOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rewardInfos_.Equals(other.rewardInfos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rewardInfos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      rewardInfos_.WriteTo(output, _repeated_rewardInfos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      rewardInfos_.WriteTo(ref output, _repeated_rewardInfos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += rewardInfos_.CalculateSize(_repeated_rewardInfos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetRewardOutput other) {
      if (other == null) {
        return;
      }
      rewardInfos_.Add(other.rewardInfos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            rewardInfos_.AddEntriesFrom(input, _repeated_rewardInfos_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            rewardInfos_.AddEntriesFrom(ref input, _repeated_rewardInfos_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RewardInfo : pb::IMessage<RewardInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RewardInfo> _parser = new pb::MessageParser<RewardInfo>(() => new RewardInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RewardInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RewardInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RewardInfo(RewardInfo other) : this() {
      stakeId_ = other.stakeId_ != null ? other.stakeId_.Clone() : null;
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      account_ = other.account_ != null ? other.account_.Clone() : null;
      symbol_ = other.symbol_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RewardInfo Clone() {
      return new RewardInfo(this);
    }

    /// <summary>Field number for the "stake_id" field.</summary>
    public const int StakeIdFieldNumber = 1;
    private global::AElf.Types.Hash stakeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash StakeId {
      get { return stakeId_; }
      set {
        stakeId_ = value;
      }
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 2;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 3;
    private global::AElf.Types.Address account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 4;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 5;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RewardInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RewardInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StakeId, other.StakeId)) return false;
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (!object.Equals(Account, other.Account)) return false;
      if (Symbol != other.Symbol) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (stakeId_ != null) hash ^= StakeId.GetHashCode();
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (account_ != null) hash ^= Account.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (stakeId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StakeId);
      }
      if (poolId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PoolId);
      }
      if (account_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Account);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Symbol);
      }
      if (Amount != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (stakeId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StakeId);
      }
      if (poolId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PoolId);
      }
      if (account_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Account);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Symbol);
      }
      if (Amount != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (stakeId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StakeId);
      }
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RewardInfo other) {
      if (other == null) {
        return;
      }
      if (other.stakeId_ != null) {
        if (stakeId_ == null) {
          StakeId = new global::AElf.Types.Hash();
        }
        StakeId.MergeFrom(other.StakeId);
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.account_ != null) {
        if (account_ == null) {
          Account = new global::AElf.Types.Address();
        }
        Account.MergeFrom(other.Account);
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stakeId_ == null) {
              StakeId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(StakeId);
            break;
          }
          case 18: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 26: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
          case 34: {
            Symbol = input.ReadString();
            break;
          }
          case 40: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (stakeId_ == null) {
              StakeId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(StakeId);
            break;
          }
          case 18: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 26: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
          case 34: {
            Symbol = input.ReadString();
            break;
          }
          case 40: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetStakeInfoOutput : pb::IMessage<GetStakeInfoOutput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetStakeInfoOutput> _parser = new pb::MessageParser<GetStakeInfoOutput>(() => new GetStakeInfoOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetStakeInfoOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetStakeInfoOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetStakeInfoOutput(GetStakeInfoOutput other) : this() {
      stakeInfo_ = other.stakeInfo_ != null ? other.stakeInfo_.Clone() : null;
      isInUnlockWindow_ = other.isInUnlockWindow_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetStakeInfoOutput Clone() {
      return new GetStakeInfoOutput(this);
    }

    /// <summary>Field number for the "stake_info" field.</summary>
    public const int StakeInfoFieldNumber = 1;
    private global::EcoEarn.Contracts.Tokens.StakeInfo stakeInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.StakeInfo StakeInfo {
      get { return stakeInfo_; }
      set {
        stakeInfo_ = value;
      }
    }

    /// <summary>Field number for the "is_in_unlock_window" field.</summary>
    public const int IsInUnlockWindowFieldNumber = 2;
    private bool isInUnlockWindow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsInUnlockWindow {
      get { return isInUnlockWindow_; }
      set {
        isInUnlockWindow_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetStakeInfoOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetStakeInfoOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StakeInfo, other.StakeInfo)) return false;
      if (IsInUnlockWindow != other.IsInUnlockWindow) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (stakeInfo_ != null) hash ^= StakeInfo.GetHashCode();
      if (IsInUnlockWindow != false) hash ^= IsInUnlockWindow.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (stakeInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StakeInfo);
      }
      if (IsInUnlockWindow != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsInUnlockWindow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (stakeInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StakeInfo);
      }
      if (IsInUnlockWindow != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsInUnlockWindow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (stakeInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StakeInfo);
      }
      if (IsInUnlockWindow != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetStakeInfoOutput other) {
      if (other == null) {
        return;
      }
      if (other.stakeInfo_ != null) {
        if (stakeInfo_ == null) {
          StakeInfo = new global::EcoEarn.Contracts.Tokens.StakeInfo();
        }
        StakeInfo.MergeFrom(other.StakeInfo);
      }
      if (other.IsInUnlockWindow != false) {
        IsInUnlockWindow = other.IsInUnlockWindow;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stakeInfo_ == null) {
              StakeInfo = new global::EcoEarn.Contracts.Tokens.StakeInfo();
            }
            input.ReadMessage(StakeInfo);
            break;
          }
          case 16: {
            IsInUnlockWindow = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (stakeInfo_ == null) {
              StakeInfo = new global::EcoEarn.Contracts.Tokens.StakeInfo();
            }
            input.ReadMessage(StakeInfo);
            break;
          }
          case 16: {
            IsInUnlockWindow = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RecoverTokenInput : pb::IMessage<RecoverTokenInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecoverTokenInput> _parser = new pb::MessageParser<RecoverTokenInput>(() => new RecoverTokenInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RecoverTokenInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecoverTokenInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecoverTokenInput(RecoverTokenInput other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      token_ = other.token_;
      recipient_ = other.recipient_ != null ? other.recipient_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecoverTokenInput Clone() {
      return new RecoverTokenInput(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "recipient" field.</summary>
    public const int RecipientFieldNumber = 3;
    private global::AElf.Types.Address recipient_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Recipient {
      get { return recipient_; }
      set {
        recipient_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RecoverTokenInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RecoverTokenInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (Token != other.Token) return false;
      if (!object.Equals(Recipient, other.Recipient)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (recipient_ != null) hash ^= Recipient.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (recipient_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Recipient);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (recipient_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Recipient);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (recipient_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Recipient);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RecoverTokenInput other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.recipient_ != null) {
        if (recipient_ == null) {
          Recipient = new global::AElf.Types.Address();
        }
        Recipient.MergeFrom(other.Recipient);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 26: {
            if (recipient_ == null) {
              Recipient = new global::AElf.Types.Address();
            }
            input.ReadMessage(Recipient);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 26: {
            if (recipient_ == null) {
              Recipient = new global::AElf.Types.Address();
            }
            input.ReadMessage(Recipient);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InitializeInput : pb::IMessage<InitializeInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InitializeInput> _parser = new pb::MessageParser<InitializeInput>(() => new InitializeInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InitializeInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitializeInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitializeInput(InitializeInput other) : this() {
      admin_ = other.admin_ != null ? other.admin_.Clone() : null;
      ecoearnPointsContract_ = other.ecoearnPointsContract_ != null ? other.ecoearnPointsContract_.Clone() : null;
      ecoearnRewardsContract_ = other.ecoearnRewardsContract_ != null ? other.ecoearnRewardsContract_.Clone() : null;
      commissionRate_ = other.commissionRate_;
      recipient_ = other.recipient_ != null ? other.recipient_.Clone() : null;
      isRegisterRestricted_ = other.isRegisterRestricted_;
      maximumPositionAmount_ = other.maximumPositionAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitializeInput Clone() {
      return new InitializeInput(this);
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 1;
    private global::AElf.Types.Address admin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Admin {
      get { return admin_; }
      set {
        admin_ = value;
      }
    }

    /// <summary>Field number for the "ecoearn_points_contract" field.</summary>
    public const int EcoearnPointsContractFieldNumber = 2;
    private global::AElf.Types.Address ecoearnPointsContract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address EcoearnPointsContract {
      get { return ecoearnPointsContract_; }
      set {
        ecoearnPointsContract_ = value;
      }
    }

    /// <summary>Field number for the "ecoearn_rewards_contract" field.</summary>
    public const int EcoearnRewardsContractFieldNumber = 3;
    private global::AElf.Types.Address ecoearnRewardsContract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address EcoearnRewardsContract {
      get { return ecoearnRewardsContract_; }
      set {
        ecoearnRewardsContract_ = value;
      }
    }

    /// <summary>Field number for the "commission_rate" field.</summary>
    public const int CommissionRateFieldNumber = 4;
    private long commissionRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CommissionRate {
      get { return commissionRate_; }
      set {
        commissionRate_ = value;
      }
    }

    /// <summary>Field number for the "recipient" field.</summary>
    public const int RecipientFieldNumber = 5;
    private global::AElf.Types.Address recipient_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Recipient {
      get { return recipient_; }
      set {
        recipient_ = value;
      }
    }

    /// <summary>Field number for the "is_register_restricted" field.</summary>
    public const int IsRegisterRestrictedFieldNumber = 6;
    private bool isRegisterRestricted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsRegisterRestricted {
      get { return isRegisterRestricted_; }
      set {
        isRegisterRestricted_ = value;
      }
    }

    /// <summary>Field number for the "maximum_position_amount" field.</summary>
    public const int MaximumPositionAmountFieldNumber = 7;
    private long maximumPositionAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaximumPositionAmount {
      get { return maximumPositionAmount_; }
      set {
        maximumPositionAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InitializeInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InitializeInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Admin, other.Admin)) return false;
      if (!object.Equals(EcoearnPointsContract, other.EcoearnPointsContract)) return false;
      if (!object.Equals(EcoearnRewardsContract, other.EcoearnRewardsContract)) return false;
      if (CommissionRate != other.CommissionRate) return false;
      if (!object.Equals(Recipient, other.Recipient)) return false;
      if (IsRegisterRestricted != other.IsRegisterRestricted) return false;
      if (MaximumPositionAmount != other.MaximumPositionAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (admin_ != null) hash ^= Admin.GetHashCode();
      if (ecoearnPointsContract_ != null) hash ^= EcoearnPointsContract.GetHashCode();
      if (ecoearnRewardsContract_ != null) hash ^= EcoearnRewardsContract.GetHashCode();
      if (CommissionRate != 0L) hash ^= CommissionRate.GetHashCode();
      if (recipient_ != null) hash ^= Recipient.GetHashCode();
      if (IsRegisterRestricted != false) hash ^= IsRegisterRestricted.GetHashCode();
      if (MaximumPositionAmount != 0L) hash ^= MaximumPositionAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (admin_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Admin);
      }
      if (ecoearnPointsContract_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EcoearnPointsContract);
      }
      if (ecoearnRewardsContract_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EcoearnRewardsContract);
      }
      if (CommissionRate != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(CommissionRate);
      }
      if (recipient_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Recipient);
      }
      if (IsRegisterRestricted != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsRegisterRestricted);
      }
      if (MaximumPositionAmount != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(MaximumPositionAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (admin_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Admin);
      }
      if (ecoearnPointsContract_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EcoearnPointsContract);
      }
      if (ecoearnRewardsContract_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EcoearnRewardsContract);
      }
      if (CommissionRate != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(CommissionRate);
      }
      if (recipient_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Recipient);
      }
      if (IsRegisterRestricted != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsRegisterRestricted);
      }
      if (MaximumPositionAmount != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(MaximumPositionAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (admin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Admin);
      }
      if (ecoearnPointsContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EcoearnPointsContract);
      }
      if (ecoearnRewardsContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EcoearnRewardsContract);
      }
      if (CommissionRate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CommissionRate);
      }
      if (recipient_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Recipient);
      }
      if (IsRegisterRestricted != false) {
        size += 1 + 1;
      }
      if (MaximumPositionAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaximumPositionAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InitializeInput other) {
      if (other == null) {
        return;
      }
      if (other.admin_ != null) {
        if (admin_ == null) {
          Admin = new global::AElf.Types.Address();
        }
        Admin.MergeFrom(other.Admin);
      }
      if (other.ecoearnPointsContract_ != null) {
        if (ecoearnPointsContract_ == null) {
          EcoearnPointsContract = new global::AElf.Types.Address();
        }
        EcoearnPointsContract.MergeFrom(other.EcoearnPointsContract);
      }
      if (other.ecoearnRewardsContract_ != null) {
        if (ecoearnRewardsContract_ == null) {
          EcoearnRewardsContract = new global::AElf.Types.Address();
        }
        EcoearnRewardsContract.MergeFrom(other.EcoearnRewardsContract);
      }
      if (other.CommissionRate != 0L) {
        CommissionRate = other.CommissionRate;
      }
      if (other.recipient_ != null) {
        if (recipient_ == null) {
          Recipient = new global::AElf.Types.Address();
        }
        Recipient.MergeFrom(other.Recipient);
      }
      if (other.IsRegisterRestricted != false) {
        IsRegisterRestricted = other.IsRegisterRestricted;
      }
      if (other.MaximumPositionAmount != 0L) {
        MaximumPositionAmount = other.MaximumPositionAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
          case 18: {
            if (ecoearnPointsContract_ == null) {
              EcoearnPointsContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(EcoearnPointsContract);
            break;
          }
          case 26: {
            if (ecoearnRewardsContract_ == null) {
              EcoearnRewardsContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(EcoearnRewardsContract);
            break;
          }
          case 32: {
            CommissionRate = input.ReadInt64();
            break;
          }
          case 42: {
            if (recipient_ == null) {
              Recipient = new global::AElf.Types.Address();
            }
            input.ReadMessage(Recipient);
            break;
          }
          case 48: {
            IsRegisterRestricted = input.ReadBool();
            break;
          }
          case 56: {
            MaximumPositionAmount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
          case 18: {
            if (ecoearnPointsContract_ == null) {
              EcoearnPointsContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(EcoearnPointsContract);
            break;
          }
          case 26: {
            if (ecoearnRewardsContract_ == null) {
              EcoearnRewardsContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(EcoearnRewardsContract);
            break;
          }
          case 32: {
            CommissionRate = input.ReadInt64();
            break;
          }
          case 42: {
            if (recipient_ == null) {
              Recipient = new global::AElf.Types.Address();
            }
            input.ReadMessage(Recipient);
            break;
          }
          case 48: {
            IsRegisterRestricted = input.ReadBool();
            break;
          }
          case 56: {
            MaximumPositionAmount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Config : pb::IMessage<Config>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Config> _parser = new pb::MessageParser<Config>(() => new Config());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Config> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Config() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Config(Config other) : this() {
      commissionRate_ = other.commissionRate_;
      recipient_ = other.recipient_ != null ? other.recipient_.Clone() : null;
      isRegisterRestricted_ = other.isRegisterRestricted_;
      maximumPositionAmount_ = other.maximumPositionAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Config Clone() {
      return new Config(this);
    }

    /// <summary>Field number for the "commission_rate" field.</summary>
    public const int CommissionRateFieldNumber = 1;
    private long commissionRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CommissionRate {
      get { return commissionRate_; }
      set {
        commissionRate_ = value;
      }
    }

    /// <summary>Field number for the "recipient" field.</summary>
    public const int RecipientFieldNumber = 2;
    private global::AElf.Types.Address recipient_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Recipient {
      get { return recipient_; }
      set {
        recipient_ = value;
      }
    }

    /// <summary>Field number for the "is_register_restricted" field.</summary>
    public const int IsRegisterRestrictedFieldNumber = 3;
    private bool isRegisterRestricted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsRegisterRestricted {
      get { return isRegisterRestricted_; }
      set {
        isRegisterRestricted_ = value;
      }
    }

    /// <summary>Field number for the "maximum_position_amount" field.</summary>
    public const int MaximumPositionAmountFieldNumber = 4;
    private long maximumPositionAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaximumPositionAmount {
      get { return maximumPositionAmount_; }
      set {
        maximumPositionAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Config);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Config other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CommissionRate != other.CommissionRate) return false;
      if (!object.Equals(Recipient, other.Recipient)) return false;
      if (IsRegisterRestricted != other.IsRegisterRestricted) return false;
      if (MaximumPositionAmount != other.MaximumPositionAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CommissionRate != 0L) hash ^= CommissionRate.GetHashCode();
      if (recipient_ != null) hash ^= Recipient.GetHashCode();
      if (IsRegisterRestricted != false) hash ^= IsRegisterRestricted.GetHashCode();
      if (MaximumPositionAmount != 0L) hash ^= MaximumPositionAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CommissionRate != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CommissionRate);
      }
      if (recipient_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Recipient);
      }
      if (IsRegisterRestricted != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsRegisterRestricted);
      }
      if (MaximumPositionAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MaximumPositionAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CommissionRate != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CommissionRate);
      }
      if (recipient_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Recipient);
      }
      if (IsRegisterRestricted != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsRegisterRestricted);
      }
      if (MaximumPositionAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MaximumPositionAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CommissionRate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CommissionRate);
      }
      if (recipient_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Recipient);
      }
      if (IsRegisterRestricted != false) {
        size += 1 + 1;
      }
      if (MaximumPositionAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaximumPositionAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Config other) {
      if (other == null) {
        return;
      }
      if (other.CommissionRate != 0L) {
        CommissionRate = other.CommissionRate;
      }
      if (other.recipient_ != null) {
        if (recipient_ == null) {
          Recipient = new global::AElf.Types.Address();
        }
        Recipient.MergeFrom(other.Recipient);
      }
      if (other.IsRegisterRestricted != false) {
        IsRegisterRestricted = other.IsRegisterRestricted;
      }
      if (other.MaximumPositionAmount != 0L) {
        MaximumPositionAmount = other.MaximumPositionAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CommissionRate = input.ReadInt64();
            break;
          }
          case 18: {
            if (recipient_ == null) {
              Recipient = new global::AElf.Types.Address();
            }
            input.ReadMessage(Recipient);
            break;
          }
          case 24: {
            IsRegisterRestricted = input.ReadBool();
            break;
          }
          case 32: {
            MaximumPositionAmount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CommissionRate = input.ReadInt64();
            break;
          }
          case 18: {
            if (recipient_ == null) {
              Recipient = new global::AElf.Types.Address();
            }
            input.ReadMessage(Recipient);
            break;
          }
          case 24: {
            IsRegisterRestricted = input.ReadBool();
            break;
          }
          case 32: {
            MaximumPositionAmount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetDappAdminInput : pb::IMessage<SetDappAdminInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetDappAdminInput> _parser = new pb::MessageParser<SetDappAdminInput>(() => new SetDappAdminInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetDappAdminInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetDappAdminInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetDappAdminInput(SetDappAdminInput other) : this() {
      dappId_ = other.dappId_ != null ? other.dappId_.Clone() : null;
      admin_ = other.admin_ != null ? other.admin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetDappAdminInput Clone() {
      return new SetDappAdminInput(this);
    }

    /// <summary>Field number for the "dapp_id" field.</summary>
    public const int DappIdFieldNumber = 1;
    private global::AElf.Types.Hash dappId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash DappId {
      get { return dappId_; }
      set {
        dappId_ = value;
      }
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 2;
    private global::AElf.Types.Address admin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Admin {
      get { return admin_; }
      set {
        admin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetDappAdminInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetDappAdminInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DappId, other.DappId)) return false;
      if (!object.Equals(Admin, other.Admin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (dappId_ != null) hash ^= DappId.GetHashCode();
      if (admin_ != null) hash ^= Admin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (admin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (admin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (dappId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DappId);
      }
      if (admin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Admin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetDappAdminInput other) {
      if (other == null) {
        return;
      }
      if (other.dappId_ != null) {
        if (dappId_ == null) {
          DappId = new global::AElf.Types.Hash();
        }
        DappId.MergeFrom(other.DappId);
      }
      if (other.admin_ != null) {
        if (admin_ == null) {
          Admin = new global::AElf.Types.Address();
        }
        Admin.MergeFrom(other.Admin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetUserStakeIdInput : pb::IMessage<GetUserStakeIdInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetUserStakeIdInput> _parser = new pb::MessageParser<GetUserStakeIdInput>(() => new GetUserStakeIdInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetUserStakeIdInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserStakeIdInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserStakeIdInput(GetUserStakeIdInput other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      account_ = other.account_ != null ? other.account_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserStakeIdInput Clone() {
      return new GetUserStakeIdInput(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 2;
    private global::AElf.Types.Address account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetUserStakeIdInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetUserStakeIdInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (!object.Equals(Account, other.Account)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (account_ != null) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (account_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (account_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetUserStakeIdInput other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.account_ != null) {
        if (account_ == null) {
          Account = new global::AElf.Types.Address();
        }
        Account.MergeFrom(other.Account);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetUserStakeCountInput : pb::IMessage<GetUserStakeCountInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetUserStakeCountInput> _parser = new pb::MessageParser<GetUserStakeCountInput>(() => new GetUserStakeCountInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetUserStakeCountInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserStakeCountInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserStakeCountInput(GetUserStakeCountInput other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      account_ = other.account_ != null ? other.account_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserStakeCountInput Clone() {
      return new GetUserStakeCountInput(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 2;
    private global::AElf.Types.Address account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetUserStakeCountInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetUserStakeCountInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (!object.Equals(Account, other.Account)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (account_ != null) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (account_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (account_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetUserStakeCountInput other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.account_ != null) {
        if (account_ == null) {
          Account = new global::AElf.Types.Address();
        }
        Account.MergeFrom(other.Account);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PoolAddressInfo : pb::IMessage<PoolAddressInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PoolAddressInfo> _parser = new pb::MessageParser<PoolAddressInfo>(() => new PoolAddressInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PoolAddressInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolAddressInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolAddressInfo(PoolAddressInfo other) : this() {
      stakeAddress_ = other.stakeAddress_ != null ? other.stakeAddress_.Clone() : null;
      rewardAddress_ = other.rewardAddress_ != null ? other.rewardAddress_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolAddressInfo Clone() {
      return new PoolAddressInfo(this);
    }

    /// <summary>Field number for the "stake_address" field.</summary>
    public const int StakeAddressFieldNumber = 1;
    private global::AElf.Types.Address stakeAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address StakeAddress {
      get { return stakeAddress_; }
      set {
        stakeAddress_ = value;
      }
    }

    /// <summary>Field number for the "reward_address" field.</summary>
    public const int RewardAddressFieldNumber = 2;
    private global::AElf.Types.Address rewardAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address RewardAddress {
      get { return rewardAddress_; }
      set {
        rewardAddress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PoolAddressInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PoolAddressInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StakeAddress, other.StakeAddress)) return false;
      if (!object.Equals(RewardAddress, other.RewardAddress)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (stakeAddress_ != null) hash ^= StakeAddress.GetHashCode();
      if (rewardAddress_ != null) hash ^= RewardAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (stakeAddress_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StakeAddress);
      }
      if (rewardAddress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RewardAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (stakeAddress_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StakeAddress);
      }
      if (rewardAddress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RewardAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (stakeAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StakeAddress);
      }
      if (rewardAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RewardAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PoolAddressInfo other) {
      if (other == null) {
        return;
      }
      if (other.stakeAddress_ != null) {
        if (stakeAddress_ == null) {
          StakeAddress = new global::AElf.Types.Address();
        }
        StakeAddress.MergeFrom(other.StakeAddress);
      }
      if (other.rewardAddress_ != null) {
        if (rewardAddress_ == null) {
          RewardAddress = new global::AElf.Types.Address();
        }
        RewardAddress.MergeFrom(other.RewardAddress);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stakeAddress_ == null) {
              StakeAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(StakeAddress);
            break;
          }
          case 18: {
            if (rewardAddress_ == null) {
              RewardAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(RewardAddress);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (stakeAddress_ == null) {
              StakeAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(StakeAddress);
            break;
          }
          case 18: {
            if (rewardAddress_ == null) {
              RewardAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(RewardAddress);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// log event
  /// </summary>
  public sealed partial class Registered : pb::IMessage<Registered>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Registered> _parser = new pb::MessageParser<Registered>(() => new Registered());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Registered> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Registered() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Registered(Registered other) : this() {
      dappId_ = other.dappId_ != null ? other.dappId_.Clone() : null;
      admin_ = other.admin_ != null ? other.admin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Registered Clone() {
      return new Registered(this);
    }

    /// <summary>Field number for the "dapp_id" field.</summary>
    public const int DappIdFieldNumber = 1;
    private global::AElf.Types.Hash dappId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash DappId {
      get { return dappId_; }
      set {
        dappId_ = value;
      }
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 2;
    private global::AElf.Types.Address admin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Admin {
      get { return admin_; }
      set {
        admin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Registered);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Registered other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DappId, other.DappId)) return false;
      if (!object.Equals(Admin, other.Admin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (dappId_ != null) hash ^= DappId.GetHashCode();
      if (admin_ != null) hash ^= Admin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (admin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (admin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (dappId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DappId);
      }
      if (admin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Admin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Registered other) {
      if (other == null) {
        return;
      }
      if (other.dappId_ != null) {
        if (dappId_ == null) {
          DappId = new global::AElf.Types.Hash();
        }
        DappId.MergeFrom(other.DappId);
      }
      if (other.admin_ != null) {
        if (admin_ == null) {
          Admin = new global::AElf.Types.Address();
        }
        Admin.MergeFrom(other.Admin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TokensPoolCreated : pb::IMessage<TokensPoolCreated>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TokensPoolCreated> _parser = new pb::MessageParser<TokensPoolCreated>(() => new TokensPoolCreated());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TokensPoolCreated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolCreated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolCreated(TokensPoolCreated other) : this() {
      dappId_ = other.dappId_ != null ? other.dappId_.Clone() : null;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      amount_ = other.amount_;
      addressInfo_ = other.addressInfo_ != null ? other.addressInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolCreated Clone() {
      return new TokensPoolCreated(this);
    }

    /// <summary>Field number for the "dapp_id" field.</summary>
    public const int DappIdFieldNumber = 1;
    private global::AElf.Types.Hash dappId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash DappId {
      get { return dappId_; }
      set {
        dappId_ = value;
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::EcoEarn.Contracts.Tokens.TokensPoolConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.TokensPoolConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 3;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "address_info" field.</summary>
    public const int AddressInfoFieldNumber = 5;
    private global::EcoEarn.Contracts.Tokens.PoolAddressInfo addressInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.PoolAddressInfo AddressInfo {
      get { return addressInfo_; }
      set {
        addressInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TokensPoolCreated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TokensPoolCreated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DappId, other.DappId)) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (Amount != other.Amount) return false;
      if (!object.Equals(AddressInfo, other.AddressInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (dappId_ != null) hash ^= DappId.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (addressInfo_ != null) hash ^= AddressInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (poolId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PoolId);
      }
      if (Amount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Amount);
      }
      if (addressInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(AddressInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (poolId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PoolId);
      }
      if (Amount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Amount);
      }
      if (addressInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(AddressInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (dappId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DappId);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (addressInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddressInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TokensPoolCreated other) {
      if (other == null) {
        return;
      }
      if (other.dappId_ != null) {
        if (dappId_ == null) {
          DappId = new global::AElf.Types.Hash();
        }
        DappId.MergeFrom(other.DappId);
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::EcoEarn.Contracts.Tokens.TokensPoolConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.addressInfo_ != null) {
        if (addressInfo_ == null) {
          AddressInfo = new global::EcoEarn.Contracts.Tokens.PoolAddressInfo();
        }
        AddressInfo.MergeFrom(other.AddressInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::EcoEarn.Contracts.Tokens.TokensPoolConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 26: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 32: {
            Amount = input.ReadInt64();
            break;
          }
          case 42: {
            if (addressInfo_ == null) {
              AddressInfo = new global::EcoEarn.Contracts.Tokens.PoolAddressInfo();
            }
            input.ReadMessage(AddressInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::EcoEarn.Contracts.Tokens.TokensPoolConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 26: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 32: {
            Amount = input.ReadInt64();
            break;
          }
          case 42: {
            if (addressInfo_ == null) {
              AddressInfo = new global::EcoEarn.Contracts.Tokens.PoolAddressInfo();
            }
            input.ReadMessage(AddressInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TokensPoolEndTimeSet : pb::IMessage<TokensPoolEndTimeSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TokensPoolEndTimeSet> _parser = new pb::MessageParser<TokensPoolEndTimeSet>(() => new TokensPoolEndTimeSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TokensPoolEndTimeSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolEndTimeSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolEndTimeSet(TokensPoolEndTimeSet other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolEndTimeSet Clone() {
      return new TokensPoolEndTimeSet(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TokensPoolEndTimeSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TokensPoolEndTimeSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TokensPoolEndTimeSet other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TokensPoolRewardConfigSet : pb::IMessage<TokensPoolRewardConfigSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TokensPoolRewardConfigSet> _parser = new pb::MessageParser<TokensPoolRewardConfigSet>(() => new TokensPoolRewardConfigSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TokensPoolRewardConfigSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolRewardConfigSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolRewardConfigSet(TokensPoolRewardConfigSet other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      releasePeriods_ = other.releasePeriods_ != null ? other.releasePeriods_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolRewardConfigSet Clone() {
      return new TokensPoolRewardConfigSet(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "release_periods" field.</summary>
    public const int ReleasePeriodsFieldNumber = 2;
    private global::EcoEarn.Contracts.Tokens.LongList releasePeriods_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.LongList ReleasePeriods {
      get { return releasePeriods_; }
      set {
        releasePeriods_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TokensPoolRewardConfigSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TokensPoolRewardConfigSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (!object.Equals(ReleasePeriods, other.ReleasePeriods)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (releasePeriods_ != null) hash ^= ReleasePeriods.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (releasePeriods_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReleasePeriods);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (releasePeriods_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReleasePeriods);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (releasePeriods_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReleasePeriods);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TokensPoolRewardConfigSet other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.releasePeriods_ != null) {
        if (releasePeriods_ == null) {
          ReleasePeriods = new global::EcoEarn.Contracts.Tokens.LongList();
        }
        ReleasePeriods.MergeFrom(other.ReleasePeriods);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (releasePeriods_ == null) {
              ReleasePeriods = new global::EcoEarn.Contracts.Tokens.LongList();
            }
            input.ReadMessage(ReleasePeriods);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (releasePeriods_ == null) {
              ReleasePeriods = new global::EcoEarn.Contracts.Tokens.LongList();
            }
            input.ReadMessage(ReleasePeriods);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TokensPoolStakeConfigSet : pb::IMessage<TokensPoolStakeConfigSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TokensPoolStakeConfigSet> _parser = new pb::MessageParser<TokensPoolStakeConfigSet>(() => new TokensPoolStakeConfigSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TokensPoolStakeConfigSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolStakeConfigSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolStakeConfigSet(TokensPoolStakeConfigSet other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      minimumAmount_ = other.minimumAmount_;
      maximumStakeDuration_ = other.maximumStakeDuration_;
      minimumClaimAmount_ = other.minimumClaimAmount_;
      minimumStakeDuration_ = other.minimumStakeDuration_;
      minimumAddLiquidityAmount_ = other.minimumAddLiquidityAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolStakeConfigSet Clone() {
      return new TokensPoolStakeConfigSet(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "minimum_amount" field.</summary>
    public const int MinimumAmountFieldNumber = 2;
    private long minimumAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumAmount {
      get { return minimumAmount_; }
      set {
        minimumAmount_ = value;
      }
    }

    /// <summary>Field number for the "maximum_stake_duration" field.</summary>
    public const int MaximumStakeDurationFieldNumber = 3;
    private long maximumStakeDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaximumStakeDuration {
      get { return maximumStakeDuration_; }
      set {
        maximumStakeDuration_ = value;
      }
    }

    /// <summary>Field number for the "minimum_claim_amount" field.</summary>
    public const int MinimumClaimAmountFieldNumber = 4;
    private long minimumClaimAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumClaimAmount {
      get { return minimumClaimAmount_; }
      set {
        minimumClaimAmount_ = value;
      }
    }

    /// <summary>Field number for the "minimum_stake_duration" field.</summary>
    public const int MinimumStakeDurationFieldNumber = 5;
    private long minimumStakeDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumStakeDuration {
      get { return minimumStakeDuration_; }
      set {
        minimumStakeDuration_ = value;
      }
    }

    /// <summary>Field number for the "minimum_add_liquidity_amount" field.</summary>
    public const int MinimumAddLiquidityAmountFieldNumber = 6;
    private long minimumAddLiquidityAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumAddLiquidityAmount {
      get { return minimumAddLiquidityAmount_; }
      set {
        minimumAddLiquidityAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TokensPoolStakeConfigSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TokensPoolStakeConfigSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (MinimumAmount != other.MinimumAmount) return false;
      if (MaximumStakeDuration != other.MaximumStakeDuration) return false;
      if (MinimumClaimAmount != other.MinimumClaimAmount) return false;
      if (MinimumStakeDuration != other.MinimumStakeDuration) return false;
      if (MinimumAddLiquidityAmount != other.MinimumAddLiquidityAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (MinimumAmount != 0L) hash ^= MinimumAmount.GetHashCode();
      if (MaximumStakeDuration != 0L) hash ^= MaximumStakeDuration.GetHashCode();
      if (MinimumClaimAmount != 0L) hash ^= MinimumClaimAmount.GetHashCode();
      if (MinimumStakeDuration != 0L) hash ^= MinimumStakeDuration.GetHashCode();
      if (MinimumAddLiquidityAmount != 0L) hash ^= MinimumAddLiquidityAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (MinimumAmount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MinimumAmount);
      }
      if (MaximumStakeDuration != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(MaximumStakeDuration);
      }
      if (MinimumClaimAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MinimumClaimAmount);
      }
      if (MinimumStakeDuration != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(MinimumStakeDuration);
      }
      if (MinimumAddLiquidityAmount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(MinimumAddLiquidityAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (MinimumAmount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MinimumAmount);
      }
      if (MaximumStakeDuration != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(MaximumStakeDuration);
      }
      if (MinimumClaimAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MinimumClaimAmount);
      }
      if (MinimumStakeDuration != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(MinimumStakeDuration);
      }
      if (MinimumAddLiquidityAmount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(MinimumAddLiquidityAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (MinimumAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumAmount);
      }
      if (MaximumStakeDuration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaximumStakeDuration);
      }
      if (MinimumClaimAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumClaimAmount);
      }
      if (MinimumStakeDuration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumStakeDuration);
      }
      if (MinimumAddLiquidityAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumAddLiquidityAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TokensPoolStakeConfigSet other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.MinimumAmount != 0L) {
        MinimumAmount = other.MinimumAmount;
      }
      if (other.MaximumStakeDuration != 0L) {
        MaximumStakeDuration = other.MaximumStakeDuration;
      }
      if (other.MinimumClaimAmount != 0L) {
        MinimumClaimAmount = other.MinimumClaimAmount;
      }
      if (other.MinimumStakeDuration != 0L) {
        MinimumStakeDuration = other.MinimumStakeDuration;
      }
      if (other.MinimumAddLiquidityAmount != 0L) {
        MinimumAddLiquidityAmount = other.MinimumAddLiquidityAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            MinimumAmount = input.ReadInt64();
            break;
          }
          case 24: {
            MaximumStakeDuration = input.ReadInt64();
            break;
          }
          case 32: {
            MinimumClaimAmount = input.ReadInt64();
            break;
          }
          case 40: {
            MinimumStakeDuration = input.ReadInt64();
            break;
          }
          case 48: {
            MinimumAddLiquidityAmount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            MinimumAmount = input.ReadInt64();
            break;
          }
          case 24: {
            MaximumStakeDuration = input.ReadInt64();
            break;
          }
          case 32: {
            MinimumClaimAmount = input.ReadInt64();
            break;
          }
          case 40: {
            MinimumStakeDuration = input.ReadInt64();
            break;
          }
          case 48: {
            MinimumAddLiquidityAmount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Staked : pb::IMessage<Staked>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Staked> _parser = new pb::MessageParser<Staked>(() => new Staked());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Staked> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Staked() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Staked(Staked other) : this() {
      stakeInfo_ = other.stakeInfo_ != null ? other.stakeInfo_.Clone() : null;
      poolData_ = other.poolData_ != null ? other.poolData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Staked Clone() {
      return new Staked(this);
    }

    /// <summary>Field number for the "stake_info" field.</summary>
    public const int StakeInfoFieldNumber = 1;
    private global::EcoEarn.Contracts.Tokens.StakeInfo stakeInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.StakeInfo StakeInfo {
      get { return stakeInfo_; }
      set {
        stakeInfo_ = value;
      }
    }

    /// <summary>Field number for the "pool_data" field.</summary>
    public const int PoolDataFieldNumber = 2;
    private global::EcoEarn.Contracts.Tokens.PoolData poolData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.PoolData PoolData {
      get { return poolData_; }
      set {
        poolData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Staked);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Staked other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StakeInfo, other.StakeInfo)) return false;
      if (!object.Equals(PoolData, other.PoolData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (stakeInfo_ != null) hash ^= StakeInfo.GetHashCode();
      if (poolData_ != null) hash ^= PoolData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (stakeInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StakeInfo);
      }
      if (poolData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PoolData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (stakeInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StakeInfo);
      }
      if (poolData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PoolData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (stakeInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StakeInfo);
      }
      if (poolData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Staked other) {
      if (other == null) {
        return;
      }
      if (other.stakeInfo_ != null) {
        if (stakeInfo_ == null) {
          StakeInfo = new global::EcoEarn.Contracts.Tokens.StakeInfo();
        }
        StakeInfo.MergeFrom(other.StakeInfo);
      }
      if (other.poolData_ != null) {
        if (poolData_ == null) {
          PoolData = new global::EcoEarn.Contracts.Tokens.PoolData();
        }
        PoolData.MergeFrom(other.PoolData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stakeInfo_ == null) {
              StakeInfo = new global::EcoEarn.Contracts.Tokens.StakeInfo();
            }
            input.ReadMessage(StakeInfo);
            break;
          }
          case 18: {
            if (poolData_ == null) {
              PoolData = new global::EcoEarn.Contracts.Tokens.PoolData();
            }
            input.ReadMessage(PoolData);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (stakeInfo_ == null) {
              StakeInfo = new global::EcoEarn.Contracts.Tokens.StakeInfo();
            }
            input.ReadMessage(StakeInfo);
            break;
          }
          case 18: {
            if (poolData_ == null) {
              PoolData = new global::EcoEarn.Contracts.Tokens.PoolData();
            }
            input.ReadMessage(PoolData);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Unlocked : pb::IMessage<Unlocked>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Unlocked> _parser = new pb::MessageParser<Unlocked>(() => new Unlocked());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Unlocked> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Unlocked() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Unlocked(Unlocked other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      stakeInfo_ = other.stakeInfo_ != null ? other.stakeInfo_.Clone() : null;
      amount_ = other.amount_;
      poolData_ = other.poolData_ != null ? other.poolData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Unlocked Clone() {
      return new Unlocked(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "stake_info" field.</summary>
    public const int StakeInfoFieldNumber = 2;
    private global::EcoEarn.Contracts.Tokens.StakeInfo stakeInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.StakeInfo StakeInfo {
      get { return stakeInfo_; }
      set {
        stakeInfo_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "pool_data" field.</summary>
    public const int PoolDataFieldNumber = 4;
    private global::EcoEarn.Contracts.Tokens.PoolData poolData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.PoolData PoolData {
      get { return poolData_; }
      set {
        poolData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Unlocked);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Unlocked other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (!object.Equals(StakeInfo, other.StakeInfo)) return false;
      if (Amount != other.Amount) return false;
      if (!object.Equals(PoolData, other.PoolData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (stakeInfo_ != null) hash ^= StakeInfo.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (poolData_ != null) hash ^= PoolData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (stakeInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StakeInfo);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (poolData_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PoolData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (stakeInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StakeInfo);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (poolData_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PoolData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (stakeInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StakeInfo);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (poolData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Unlocked other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.stakeInfo_ != null) {
        if (stakeInfo_ == null) {
          StakeInfo = new global::EcoEarn.Contracts.Tokens.StakeInfo();
        }
        StakeInfo.MergeFrom(other.StakeInfo);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.poolData_ != null) {
        if (poolData_ == null) {
          PoolData = new global::EcoEarn.Contracts.Tokens.PoolData();
        }
        PoolData.MergeFrom(other.PoolData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (stakeInfo_ == null) {
              StakeInfo = new global::EcoEarn.Contracts.Tokens.StakeInfo();
            }
            input.ReadMessage(StakeInfo);
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
          case 34: {
            if (poolData_ == null) {
              PoolData = new global::EcoEarn.Contracts.Tokens.PoolData();
            }
            input.ReadMessage(PoolData);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (stakeInfo_ == null) {
              StakeInfo = new global::EcoEarn.Contracts.Tokens.StakeInfo();
            }
            input.ReadMessage(StakeInfo);
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
          case 34: {
            if (poolData_ == null) {
              PoolData = new global::EcoEarn.Contracts.Tokens.PoolData();
            }
            input.ReadMessage(PoolData);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Claimed : pb::IMessage<Claimed>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Claimed> _parser = new pb::MessageParser<Claimed>(() => new Claimed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Claimed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Claimed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Claimed(Claimed other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      account_ = other.account_ != null ? other.account_.Clone() : null;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Claimed Clone() {
      return new Claimed(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 2;
    private global::AElf.Types.Address account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Claimed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Claimed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (!object.Equals(Account, other.Account)) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (account_ != null) hash ^= Account.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (account_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Account);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (account_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Account);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Claimed other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.account_ != null) {
        if (account_ == null) {
          Account = new global::AElf.Types.Address();
        }
        Account.MergeFrom(other.Account);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TokenRecovered : pb::IMessage<TokenRecovered>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TokenRecovered> _parser = new pb::MessageParser<TokenRecovered>(() => new TokenRecovered());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TokenRecovered> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokenRecovered() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokenRecovered(TokenRecovered other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      token_ = other.token_;
      amount_ = other.amount_;
      account_ = other.account_ != null ? other.account_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokenRecovered Clone() {
      return new TokenRecovered(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 4;
    private global::AElf.Types.Address account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TokenRecovered);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TokenRecovered other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (Token != other.Token) return false;
      if (Amount != other.Amount) return false;
      if (!object.Equals(Account, other.Account)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (account_ != null) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (account_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (account_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TokenRecovered other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          Account = new global::AElf.Types.Address();
        }
        Account.MergeFrom(other.Account);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
          case 34: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
          case 34: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ConfigSet : pb::IMessage<ConfigSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConfigSet> _parser = new pb::MessageParser<ConfigSet>(() => new ConfigSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ConfigSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConfigSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConfigSet(ConfigSet other) : this() {
      config_ = other.config_ != null ? other.config_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConfigSet Clone() {
      return new ConfigSet(this);
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 1;
    private global::EcoEarn.Contracts.Tokens.Config config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.Config Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ConfigSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ConfigSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Config, other.Config)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (config_ != null) hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (config_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (config_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ConfigSet other) {
      if (other == null) {
        return;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::EcoEarn.Contracts.Tokens.Config();
        }
        Config.MergeFrom(other.Config);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (config_ == null) {
              Config = new global::EcoEarn.Contracts.Tokens.Config();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (config_ == null) {
              Config = new global::EcoEarn.Contracts.Tokens.Config();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AdminSet : pb::IMessage<AdminSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AdminSet> _parser = new pb::MessageParser<AdminSet>(() => new AdminSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AdminSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AdminSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AdminSet(AdminSet other) : this() {
      admin_ = other.admin_ != null ? other.admin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AdminSet Clone() {
      return new AdminSet(this);
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 1;
    private global::AElf.Types.Address admin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Admin {
      get { return admin_; }
      set {
        admin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AdminSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AdminSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Admin, other.Admin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (admin_ != null) hash ^= Admin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (admin_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (admin_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (admin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Admin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AdminSet other) {
      if (other == null) {
        return;
      }
      if (other.admin_ != null) {
        if (admin_ == null) {
          Admin = new global::AElf.Types.Address();
        }
        Admin.MergeFrom(other.Admin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DappAdminSet : pb::IMessage<DappAdminSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DappAdminSet> _parser = new pb::MessageParser<DappAdminSet>(() => new DappAdminSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DappAdminSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DappAdminSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DappAdminSet(DappAdminSet other) : this() {
      dappId_ = other.dappId_ != null ? other.dappId_.Clone() : null;
      admin_ = other.admin_ != null ? other.admin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DappAdminSet Clone() {
      return new DappAdminSet(this);
    }

    /// <summary>Field number for the "dapp_id" field.</summary>
    public const int DappIdFieldNumber = 1;
    private global::AElf.Types.Hash dappId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash DappId {
      get { return dappId_; }
      set {
        dappId_ = value;
      }
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 2;
    private global::AElf.Types.Address admin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Admin {
      get { return admin_; }
      set {
        admin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DappAdminSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DappAdminSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DappId, other.DappId)) return false;
      if (!object.Equals(Admin, other.Admin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (dappId_ != null) hash ^= DappId.GetHashCode();
      if (admin_ != null) hash ^= Admin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (admin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (admin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (dappId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DappId);
      }
      if (admin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Admin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DappAdminSet other) {
      if (other == null) {
        return;
      }
      if (other.dappId_ != null) {
        if (dappId_ == null) {
          DappId = new global::AElf.Types.Hash();
        }
        DappId.MergeFrom(other.DappId);
      }
      if (other.admin_ != null) {
        if (admin_ == null) {
          Admin = new global::AElf.Types.Address();
        }
        Admin.MergeFrom(other.Admin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TokensPoolFixedBoostFactorSet : pb::IMessage<TokensPoolFixedBoostFactorSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TokensPoolFixedBoostFactorSet> _parser = new pb::MessageParser<TokensPoolFixedBoostFactorSet>(() => new TokensPoolFixedBoostFactorSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TokensPoolFixedBoostFactorSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolFixedBoostFactorSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolFixedBoostFactorSet(TokensPoolFixedBoostFactorSet other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      fixedBoostFactor_ = other.fixedBoostFactor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolFixedBoostFactorSet Clone() {
      return new TokensPoolFixedBoostFactorSet(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "fixed_boost_factor" field.</summary>
    public const int FixedBoostFactorFieldNumber = 2;
    private long fixedBoostFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FixedBoostFactor {
      get { return fixedBoostFactor_; }
      set {
        fixedBoostFactor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TokensPoolFixedBoostFactorSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TokensPoolFixedBoostFactorSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (FixedBoostFactor != other.FixedBoostFactor) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (FixedBoostFactor != 0L) hash ^= FixedBoostFactor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (FixedBoostFactor != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FixedBoostFactor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (FixedBoostFactor != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FixedBoostFactor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (FixedBoostFactor != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FixedBoostFactor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TokensPoolFixedBoostFactorSet other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.FixedBoostFactor != 0L) {
        FixedBoostFactor = other.FixedBoostFactor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            FixedBoostFactor = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            FixedBoostFactor = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TokensPoolRewardPerSecondSet : pb::IMessage<TokensPoolRewardPerSecondSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TokensPoolRewardPerSecondSet> _parser = new pb::MessageParser<TokensPoolRewardPerSecondSet>(() => new TokensPoolRewardPerSecondSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TokensPoolRewardPerSecondSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolRewardPerSecondSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolRewardPerSecondSet(TokensPoolRewardPerSecondSet other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      rewardPerSecond_ = other.rewardPerSecond_;
      poolData_ = other.poolData_ != null ? other.poolData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolRewardPerSecondSet Clone() {
      return new TokensPoolRewardPerSecondSet(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "reward_per_second" field.</summary>
    public const int RewardPerSecondFieldNumber = 2;
    private long rewardPerSecond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RewardPerSecond {
      get { return rewardPerSecond_; }
      set {
        rewardPerSecond_ = value;
      }
    }

    /// <summary>Field number for the "pool_data" field.</summary>
    public const int PoolDataFieldNumber = 3;
    private global::EcoEarn.Contracts.Tokens.PoolData poolData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.PoolData PoolData {
      get { return poolData_; }
      set {
        poolData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TokensPoolRewardPerSecondSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TokensPoolRewardPerSecondSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (RewardPerSecond != other.RewardPerSecond) return false;
      if (!object.Equals(PoolData, other.PoolData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (RewardPerSecond != 0L) hash ^= RewardPerSecond.GetHashCode();
      if (poolData_ != null) hash ^= PoolData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (RewardPerSecond != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RewardPerSecond);
      }
      if (poolData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PoolData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (RewardPerSecond != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RewardPerSecond);
      }
      if (poolData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PoolData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (RewardPerSecond != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RewardPerSecond);
      }
      if (poolData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TokensPoolRewardPerSecondSet other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.RewardPerSecond != 0L) {
        RewardPerSecond = other.RewardPerSecond;
      }
      if (other.poolData_ != null) {
        if (poolData_ == null) {
          PoolData = new global::EcoEarn.Contracts.Tokens.PoolData();
        }
        PoolData.MergeFrom(other.PoolData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            RewardPerSecond = input.ReadInt64();
            break;
          }
          case 26: {
            if (poolData_ == null) {
              PoolData = new global::EcoEarn.Contracts.Tokens.PoolData();
            }
            input.ReadMessage(PoolData);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            RewardPerSecond = input.ReadInt64();
            break;
          }
          case 26: {
            if (poolData_ == null) {
              PoolData = new global::EcoEarn.Contracts.Tokens.PoolData();
            }
            input.ReadMessage(PoolData);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TokensPoolUnlockWindowDurationSet : pb::IMessage<TokensPoolUnlockWindowDurationSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TokensPoolUnlockWindowDurationSet> _parser = new pb::MessageParser<TokensPoolUnlockWindowDurationSet>(() => new TokensPoolUnlockWindowDurationSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TokensPoolUnlockWindowDurationSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolUnlockWindowDurationSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolUnlockWindowDurationSet(TokensPoolUnlockWindowDurationSet other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      unlockWindowDuration_ = other.unlockWindowDuration_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolUnlockWindowDurationSet Clone() {
      return new TokensPoolUnlockWindowDurationSet(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "unlock_window_duration" field.</summary>
    public const int UnlockWindowDurationFieldNumber = 2;
    private long unlockWindowDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long UnlockWindowDuration {
      get { return unlockWindowDuration_; }
      set {
        unlockWindowDuration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TokensPoolUnlockWindowDurationSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TokensPoolUnlockWindowDurationSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (UnlockWindowDuration != other.UnlockWindowDuration) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (UnlockWindowDuration != 0L) hash ^= UnlockWindowDuration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (UnlockWindowDuration != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UnlockWindowDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (UnlockWindowDuration != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UnlockWindowDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (UnlockWindowDuration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnlockWindowDuration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TokensPoolUnlockWindowDurationSet other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.UnlockWindowDuration != 0L) {
        UnlockWindowDuration = other.UnlockWindowDuration;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            UnlockWindowDuration = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            UnlockWindowDuration = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TokensPoolMergeIntervalSet : pb::IMessage<TokensPoolMergeIntervalSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TokensPoolMergeIntervalSet> _parser = new pb::MessageParser<TokensPoolMergeIntervalSet>(() => new TokensPoolMergeIntervalSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TokensPoolMergeIntervalSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolMergeIntervalSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolMergeIntervalSet(TokensPoolMergeIntervalSet other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      mergeInterval_ = other.mergeInterval_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolMergeIntervalSet Clone() {
      return new TokensPoolMergeIntervalSet(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "merge_interval" field.</summary>
    public const int MergeIntervalFieldNumber = 2;
    private long mergeInterval_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MergeInterval {
      get { return mergeInterval_; }
      set {
        mergeInterval_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TokensPoolMergeIntervalSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TokensPoolMergeIntervalSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (MergeInterval != other.MergeInterval) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (MergeInterval != 0L) hash ^= MergeInterval.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (MergeInterval != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MergeInterval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (MergeInterval != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MergeInterval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (MergeInterval != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MergeInterval);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TokensPoolMergeIntervalSet other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.MergeInterval != 0L) {
        MergeInterval = other.MergeInterval;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            MergeInterval = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            MergeInterval = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Renewed : pb::IMessage<Renewed>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Renewed> _parser = new pb::MessageParser<Renewed>(() => new Renewed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Renewed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Renewed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Renewed(Renewed other) : this() {
      stakeInfo_ = other.stakeInfo_ != null ? other.stakeInfo_.Clone() : null;
      poolData_ = other.poolData_ != null ? other.poolData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Renewed Clone() {
      return new Renewed(this);
    }

    /// <summary>Field number for the "stake_info" field.</summary>
    public const int StakeInfoFieldNumber = 1;
    private global::EcoEarn.Contracts.Tokens.StakeInfo stakeInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.StakeInfo StakeInfo {
      get { return stakeInfo_; }
      set {
        stakeInfo_ = value;
      }
    }

    /// <summary>Field number for the "pool_data" field.</summary>
    public const int PoolDataFieldNumber = 2;
    private global::EcoEarn.Contracts.Tokens.PoolData poolData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.PoolData PoolData {
      get { return poolData_; }
      set {
        poolData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Renewed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Renewed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StakeInfo, other.StakeInfo)) return false;
      if (!object.Equals(PoolData, other.PoolData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (stakeInfo_ != null) hash ^= StakeInfo.GetHashCode();
      if (poolData_ != null) hash ^= PoolData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (stakeInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StakeInfo);
      }
      if (poolData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PoolData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (stakeInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StakeInfo);
      }
      if (poolData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PoolData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (stakeInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StakeInfo);
      }
      if (poolData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Renewed other) {
      if (other == null) {
        return;
      }
      if (other.stakeInfo_ != null) {
        if (stakeInfo_ == null) {
          StakeInfo = new global::EcoEarn.Contracts.Tokens.StakeInfo();
        }
        StakeInfo.MergeFrom(other.StakeInfo);
      }
      if (other.poolData_ != null) {
        if (poolData_ == null) {
          PoolData = new global::EcoEarn.Contracts.Tokens.PoolData();
        }
        PoolData.MergeFrom(other.PoolData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stakeInfo_ == null) {
              StakeInfo = new global::EcoEarn.Contracts.Tokens.StakeInfo();
            }
            input.ReadMessage(StakeInfo);
            break;
          }
          case 18: {
            if (poolData_ == null) {
              PoolData = new global::EcoEarn.Contracts.Tokens.PoolData();
            }
            input.ReadMessage(PoolData);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (stakeInfo_ == null) {
              StakeInfo = new global::EcoEarn.Contracts.Tokens.StakeInfo();
            }
            input.ReadMessage(StakeInfo);
            break;
          }
          case 18: {
            if (poolData_ == null) {
              PoolData = new global::EcoEarn.Contracts.Tokens.PoolData();
            }
            input.ReadMessage(PoolData);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
