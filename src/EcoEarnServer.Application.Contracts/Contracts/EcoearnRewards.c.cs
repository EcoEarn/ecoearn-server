// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ecoearn_rewards.proto
// </auto-generated>
// Original file comments:
// the version of the language, use proto3 for contracts
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace EcoEarn.Contracts.Rewards {

  #region Events
  public partial class AdminSet : aelf::IEvent<AdminSet>
  {
    public global::System.Collections.Generic.IEnumerable<AdminSet> GetIndexed()
    {
      return new List<AdminSet>
      {
      };
    }

    public AdminSet GetNonIndexed()
    {
      return new AdminSet
      {
        Admin = Admin,
      };
    }
  }

  public partial class Registered : aelf::IEvent<Registered>
  {
    public global::System.Collections.Generic.IEnumerable<Registered> GetIndexed()
    {
      return new List<Registered>
      {
      };
    }

    public Registered GetNonIndexed()
    {
      return new Registered
      {
        DappId = DappId,
        Admin = Admin,
        Config = Config,
      };
    }
  }

  public partial class DappConfigSet : aelf::IEvent<DappConfigSet>
  {
    public global::System.Collections.Generic.IEnumerable<DappConfigSet> GetIndexed()
    {
      return new List<DappConfigSet>
      {
      };
    }

    public DappConfigSet GetNonIndexed()
    {
      return new DappConfigSet
      {
        DappId = DappId,
        Config = Config,
      };
    }
  }

  public partial class Claimed : aelf::IEvent<Claimed>
  {
    public global::System.Collections.Generic.IEnumerable<Claimed> GetIndexed()
    {
      return new List<Claimed>
      {
      };
    }

    public Claimed GetNonIndexed()
    {
      return new Claimed
      {
        ClaimInfos = ClaimInfos,
      };
    }
  }

  public partial class DappAdminSet : aelf::IEvent<DappAdminSet>
  {
    public global::System.Collections.Generic.IEnumerable<DappAdminSet> GetIndexed()
    {
      return new List<DappAdminSet>
      {
      };
    }

    public DappAdminSet GetNonIndexed()
    {
      return new DappAdminSet
      {
        DappId = DappId,
        Admin = Admin,
      };
    }
  }

  public partial class Withdrawn : aelf::IEvent<Withdrawn>
  {
    public global::System.Collections.Generic.IEnumerable<Withdrawn> GetIndexed()
    {
      return new List<Withdrawn>
      {
      };
    }

    public Withdrawn GetNonIndexed()
    {
      return new Withdrawn
      {
        ClaimIds = ClaimIds,
        Account = Account,
        Amount = Amount,
        Seed = Seed,
        DappId = DappId,
      };
    }
  }

  public partial class EarlyStaked : aelf::IEvent<EarlyStaked>
  {
    public global::System.Collections.Generic.IEnumerable<EarlyStaked> GetIndexed()
    {
      return new List<EarlyStaked>
      {
      };
    }

    public EarlyStaked GetNonIndexed()
    {
      return new EarlyStaked
      {
        ClaimIds = ClaimIds,
        Account = Account,
        Amount = Amount,
        Seed = Seed,
        PoolId = PoolId,
        Period = Period,
        DappId = DappId,
        StakeId = StakeId,
      };
    }
  }

  public partial class LiquidityAdded : aelf::IEvent<LiquidityAdded>
  {
    public global::System.Collections.Generic.IEnumerable<LiquidityAdded> GetIndexed()
    {
      return new List<LiquidityAdded>
      {
      };
    }

    public LiquidityAdded GetNonIndexed()
    {
      return new LiquidityAdded
      {
        ClaimIds = ClaimIds,
        Account = Account,
        Amount = Amount,
        PoolId = PoolId,
        Period = Period,
        StakeId = StakeId,
        LiquidityInfo = LiquidityInfo,
      };
    }
  }

  public partial class LiquidityRemoved : aelf::IEvent<LiquidityRemoved>
  {
    public global::System.Collections.Generic.IEnumerable<LiquidityRemoved> GetIndexed()
    {
      return new List<LiquidityRemoved>
      {
      };
    }

    public LiquidityRemoved GetNonIndexed()
    {
      return new LiquidityRemoved
      {
        LiquidityIds = LiquidityIds,
        LpAmount = LpAmount,
        TokenAAmount = TokenAAmount,
        TokenBAmount = TokenBAmount,
        DappId = DappId,
        Seed = Seed,
      };
    }
  }

  public partial class LiquidityStaked : aelf::IEvent<LiquidityStaked>
  {
    public global::System.Collections.Generic.IEnumerable<LiquidityStaked> GetIndexed()
    {
      return new List<LiquidityStaked>
      {
      };
    }

    public LiquidityStaked GetNonIndexed()
    {
      return new LiquidityStaked
      {
        LiquidityIds = LiquidityIds,
        PoolId = PoolId,
        LpAmount = LpAmount,
        Period = Period,
        StakeId = StakeId,
        Seed = Seed,
      };
    }
  }

  #endregion
  public static partial class EcoEarnRewardsContractContainer
  {
    static readonly string __ServiceName = "EcoEarnRewardsContract";

    #region Marshallers
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Rewards.InitializeInput> __Marshaller_InitializeInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Rewards.InitializeInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Address> __Marshaller_aelf_Address = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Address.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Rewards.RegisterInput> __Marshaller_RegisterInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Rewards.RegisterInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Rewards.SetDappAdminInput> __Marshaller_SetDappAdminInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Rewards.SetDappAdminInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Rewards.SetDappConfigInput> __Marshaller_SetDappConfigInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Rewards.SetDappConfigInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Hash> __Marshaller_aelf_Hash = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Hash.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Rewards.DappInfo> __Marshaller_DappInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Rewards.DappInfo.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Rewards.GetRewardAddressInput> __Marshaller_GetRewardAddressInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Rewards.GetRewardAddressInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Rewards.ClaimInput> __Marshaller_ClaimInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Rewards.ClaimInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Rewards.ClaimInfo> __Marshaller_ClaimInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Rewards.ClaimInfo.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Rewards.WithdrawInput> __Marshaller_WithdrawInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Rewards.WithdrawInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Rewards.EarlyStakeInput> __Marshaller_EarlyStakeInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Rewards.EarlyStakeInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Rewards.AddLiquidityAndStakeInput> __Marshaller_AddLiquidityAndStakeInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Rewards.AddLiquidityAndStakeInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Rewards.RemoveLiquidityInput> __Marshaller_RemoveLiquidityInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Rewards.RemoveLiquidityInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Rewards.StakeLiquidityInput> __Marshaller_StakeLiquidityInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Rewards.StakeLiquidityInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Rewards.LiquidityInfo> __Marshaller_LiquidityInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Rewards.LiquidityInfo.Parser.ParseFrom);
    #endregion

    #region Methods
    static readonly aelf::Method<global::EcoEarn.Contracts.Rewards.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Initialize = new aelf::Method<global::EcoEarn.Contracts.Rewards.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Initialize",
        __Marshaller_InitializeInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetAdmin = new aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetAdmin",
        __Marshaller_aelf_Address,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address> __Method_GetAdmin = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetAdmin",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::EcoEarn.Contracts.Rewards.RegisterInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Register = new aelf::Method<global::EcoEarn.Contracts.Rewards.RegisterInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Register",
        __Marshaller_RegisterInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EcoEarn.Contracts.Rewards.SetDappAdminInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetDappAdmin = new aelf::Method<global::EcoEarn.Contracts.Rewards.SetDappAdminInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetDappAdmin",
        __Marshaller_SetDappAdminInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EcoEarn.Contracts.Rewards.SetDappConfigInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetDappConfig = new aelf::Method<global::EcoEarn.Contracts.Rewards.SetDappConfigInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetDappConfig",
        __Marshaller_SetDappConfigInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Hash, global::EcoEarn.Contracts.Rewards.DappInfo> __Method_GetDappInfo = new aelf::Method<global::AElf.Types.Hash, global::EcoEarn.Contracts.Rewards.DappInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetDappInfo",
        __Marshaller_aelf_Hash,
        __Marshaller_DappInfo);

    static readonly aelf::Method<global::EcoEarn.Contracts.Rewards.GetRewardAddressInput, global::AElf.Types.Address> __Method_GetRewardAddress = new aelf::Method<global::EcoEarn.Contracts.Rewards.GetRewardAddressInput, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetRewardAddress",
        __Marshaller_GetRewardAddressInput,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::EcoEarn.Contracts.Rewards.ClaimInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Claim = new aelf::Method<global::EcoEarn.Contracts.Rewards.ClaimInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Claim",
        __Marshaller_ClaimInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Hash, global::EcoEarn.Contracts.Rewards.ClaimInfo> __Method_GetClaimInfo = new aelf::Method<global::AElf.Types.Hash, global::EcoEarn.Contracts.Rewards.ClaimInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetClaimInfo",
        __Marshaller_aelf_Hash,
        __Marshaller_ClaimInfo);

    static readonly aelf::Method<global::EcoEarn.Contracts.Rewards.WithdrawInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Withdraw = new aelf::Method<global::EcoEarn.Contracts.Rewards.WithdrawInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Withdraw",
        __Marshaller_WithdrawInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EcoEarn.Contracts.Rewards.EarlyStakeInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_EarlyStake = new aelf::Method<global::EcoEarn.Contracts.Rewards.EarlyStakeInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "EarlyStake",
        __Marshaller_EarlyStakeInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EcoEarn.Contracts.Rewards.AddLiquidityAndStakeInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AddLiquidityAndStake = new aelf::Method<global::EcoEarn.Contracts.Rewards.AddLiquidityAndStakeInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "AddLiquidityAndStake",
        __Marshaller_AddLiquidityAndStakeInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EcoEarn.Contracts.Rewards.RemoveLiquidityInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RemoveLiquidity = new aelf::Method<global::EcoEarn.Contracts.Rewards.RemoveLiquidityInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "RemoveLiquidity",
        __Marshaller_RemoveLiquidityInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EcoEarn.Contracts.Rewards.StakeLiquidityInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_StakeLiquidity = new aelf::Method<global::EcoEarn.Contracts.Rewards.StakeLiquidityInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "StakeLiquidity",
        __Marshaller_StakeLiquidityInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Hash, global::EcoEarn.Contracts.Rewards.LiquidityInfo> __Method_GetLiquidityInfo = new aelf::Method<global::AElf.Types.Hash, global::EcoEarn.Contracts.Rewards.LiquidityInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetLiquidityInfo",
        __Marshaller_aelf_Hash,
        __Marshaller_LiquidityInfo);

    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::EcoEarn.Contracts.Rewards.EcoearnRewardsReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::AElf.Standards.ACS12.Acs12Reflection.Descriptor.Services[0],
          global::EcoEarn.Contracts.Rewards.EcoearnRewardsReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion

    /// <summary>Base class for the contract of EcoEarnRewardsContract</summary>
    // public abstract partial class EcoEarnRewardsContractBase : AElf.Sdk.CSharp.CSharpSmartContract<EcoEarn.Contracts.Rewards.EcoEarnRewardsContractState>
    // {
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty Initialize(global::EcoEarn.Contracts.Rewards.InitializeInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetAdmin(global::AElf.Types.Address input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AElf.Types.Address GetAdmin(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty Register(global::EcoEarn.Contracts.Rewards.RegisterInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetDappAdmin(global::EcoEarn.Contracts.Rewards.SetDappAdminInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetDappConfig(global::EcoEarn.Contracts.Rewards.SetDappConfigInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::EcoEarn.Contracts.Rewards.DappInfo GetDappInfo(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AElf.Types.Address GetRewardAddress(global::EcoEarn.Contracts.Rewards.GetRewardAddressInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty Claim(global::EcoEarn.Contracts.Rewards.ClaimInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::EcoEarn.Contracts.Rewards.ClaimInfo GetClaimInfo(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty Withdraw(global::EcoEarn.Contracts.Rewards.WithdrawInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty EarlyStake(global::EcoEarn.Contracts.Rewards.EarlyStakeInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty AddLiquidityAndStake(global::EcoEarn.Contracts.Rewards.AddLiquidityAndStakeInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty RemoveLiquidity(global::EcoEarn.Contracts.Rewards.RemoveLiquidityInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty StakeLiquidity(global::EcoEarn.Contracts.Rewards.StakeLiquidityInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::EcoEarn.Contracts.Rewards.LiquidityInfo GetLiquidityInfo(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    // }
    //
    // public static aelf::ServerServiceDefinition BindService(EcoEarnRewardsContractBase serviceImpl)
    // {
    //   return aelf::ServerServiceDefinition.CreateBuilder()
    //       .AddDescriptors(Descriptors)
    //       .AddMethod(__Method_Initialize, serviceImpl.Initialize)
    //       .AddMethod(__Method_SetAdmin, serviceImpl.SetAdmin)
    //       .AddMethod(__Method_GetAdmin, serviceImpl.GetAdmin)
    //       .AddMethod(__Method_Register, serviceImpl.Register)
    //       .AddMethod(__Method_SetDappAdmin, serviceImpl.SetDappAdmin)
    //       .AddMethod(__Method_SetDappConfig, serviceImpl.SetDappConfig)
    //       .AddMethod(__Method_GetDappInfo, serviceImpl.GetDappInfo)
    //       .AddMethod(__Method_GetRewardAddress, serviceImpl.GetRewardAddress)
    //       .AddMethod(__Method_Claim, serviceImpl.Claim)
    //       .AddMethod(__Method_GetClaimInfo, serviceImpl.GetClaimInfo)
    //       .AddMethod(__Method_Withdraw, serviceImpl.Withdraw)
    //       .AddMethod(__Method_EarlyStake, serviceImpl.EarlyStake)
    //       .AddMethod(__Method_AddLiquidityAndStake, serviceImpl.AddLiquidityAndStake)
    //       .AddMethod(__Method_RemoveLiquidity, serviceImpl.RemoveLiquidity)
    //       .AddMethod(__Method_StakeLiquidity, serviceImpl.StakeLiquidity)
    //       .AddMethod(__Method_GetLiquidityInfo, serviceImpl.GetLiquidityInfo).Build();
    // }

  }
}
#endregion

