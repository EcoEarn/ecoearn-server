// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ecoearn_tokens.proto
// </auto-generated>
// Original file comments:
// the version of the language, use proto3 for contracts
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace EcoEarn.Contracts.Tokens {

  #region Events
  public partial class Registered : aelf::IEvent<Registered>
  {
    public global::System.Collections.Generic.IEnumerable<Registered> GetIndexed()
    {
      return new List<Registered>
      {
      };
    }

    public Registered GetNonIndexed()
    {
      return new Registered
      {
        DappId = DappId,
        Admin = Admin,
      };
    }
  }

  public partial class TokensPoolCreated : aelf::IEvent<TokensPoolCreated>
  {
    public global::System.Collections.Generic.IEnumerable<TokensPoolCreated> GetIndexed()
    {
      return new List<TokensPoolCreated>
      {
      };
    }

    public TokensPoolCreated GetNonIndexed()
    {
      return new TokensPoolCreated
      {
        DappId = DappId,
        Config = Config,
        PoolId = PoolId,
        PoolAddress = PoolAddress,
        Amount = Amount,
      };
    }
  }

  public partial class TokensPoolClosed : aelf::IEvent<TokensPoolClosed>
  {
    public global::System.Collections.Generic.IEnumerable<TokensPoolClosed> GetIndexed()
    {
      return new List<TokensPoolClosed>
      {
      };
    }

    public TokensPoolClosed GetNonIndexed()
    {
      return new TokensPoolClosed
      {
        PoolId = PoolId,
        Config = Config,
      };
    }
  }

  public partial class TokensPoolEndBlockNumberSet : aelf::IEvent<TokensPoolEndBlockNumberSet>
  {
    public global::System.Collections.Generic.IEnumerable<TokensPoolEndBlockNumberSet> GetIndexed()
    {
      return new List<TokensPoolEndBlockNumberSet>
      {
      };
    }

    public TokensPoolEndBlockNumberSet GetNonIndexed()
    {
      return new TokensPoolEndBlockNumberSet
      {
        PoolId = PoolId,
        EndBlockNumber = EndBlockNumber,
        Amount = Amount,
      };
    }
  }

  public partial class TokensPoolRestarted : aelf::IEvent<TokensPoolRestarted>
  {
    public global::System.Collections.Generic.IEnumerable<TokensPoolRestarted> GetIndexed()
    {
      return new List<TokensPoolRestarted>
      {
      };
    }

    public TokensPoolRestarted GetNonIndexed()
    {
      return new TokensPoolRestarted
      {
        PoolId = PoolId,
        Config = Config,
        Amount = Amount,
      };
    }
  }

  public partial class TokensPoolUpdateAddressSet : aelf::IEvent<TokensPoolUpdateAddressSet>
  {
    public global::System.Collections.Generic.IEnumerable<TokensPoolUpdateAddressSet> GetIndexed()
    {
      return new List<TokensPoolUpdateAddressSet>
      {
      };
    }

    public TokensPoolUpdateAddressSet GetNonIndexed()
    {
      return new TokensPoolUpdateAddressSet
      {
        PoolId = PoolId,
        UpdateAddress = UpdateAddress,
      };
    }
  }

  public partial class TokensPoolRewardReleasePeriodSet : aelf::IEvent<TokensPoolRewardReleasePeriodSet>
  {
    public global::System.Collections.Generic.IEnumerable<TokensPoolRewardReleasePeriodSet> GetIndexed()
    {
      return new List<TokensPoolRewardReleasePeriodSet>
      {
      };
    }

    public TokensPoolRewardReleasePeriodSet GetNonIndexed()
    {
      return new TokensPoolRewardReleasePeriodSet
      {
        PoolId = PoolId,
        ReleasePeriod = ReleasePeriod,
      };
    }
  }

  public partial class TokensPoolStakeConfigSet : aelf::IEvent<TokensPoolStakeConfigSet>
  {
    public global::System.Collections.Generic.IEnumerable<TokensPoolStakeConfigSet> GetIndexed()
    {
      return new List<TokensPoolStakeConfigSet>
      {
      };
    }

    public TokensPoolStakeConfigSet GetNonIndexed()
    {
      return new TokensPoolStakeConfigSet
      {
        PoolId = PoolId,
        MinimumAmount = MinimumAmount,
        MaximumStakeDuration = MaximumStakeDuration,
        MinimumClaimAmount = MinimumClaimAmount,
      };
    }
  }

  public partial class Staked : aelf::IEvent<Staked>
  {
    public global::System.Collections.Generic.IEnumerable<Staked> GetIndexed()
    {
      return new List<Staked>
      {
      };
    }

    public Staked GetNonIndexed()
    {
      return new Staked
      {
        StakeInfo = StakeInfo,
        PoolData = PoolData,
      };
    }
  }

  public partial class EarlyStaked : aelf::IEvent<EarlyStaked>
  {
    public global::System.Collections.Generic.IEnumerable<EarlyStaked> GetIndexed()
    {
      return new List<EarlyStaked>
      {
      };
    }

    public EarlyStaked GetNonIndexed()
    {
      return new EarlyStaked
      {
        PoolId = PoolId,
        StakeInfo = StakeInfo,
        PoolData = PoolData,
        ClaimInfos = ClaimInfos,
      };
    }
  }

  public partial class Unlocked : aelf::IEvent<Unlocked>
  {
    public global::System.Collections.Generic.IEnumerable<Unlocked> GetIndexed()
    {
      return new List<Unlocked>
      {
      };
    }

    public Unlocked GetNonIndexed()
    {
      return new Unlocked
      {
        StakeId = StakeId,
        Amount = Amount,
        PoolData = PoolData,
      };
    }
  }

  public partial class Claimed : aelf::IEvent<Claimed>
  {
    public global::System.Collections.Generic.IEnumerable<Claimed> GetIndexed()
    {
      return new List<Claimed>
      {
      };
    }

    public Claimed GetNonIndexed()
    {
      return new Claimed
      {
        StakeId = StakeId,
        ClaimInfo = ClaimInfo,
      };
    }
  }

  public partial class Withdrawn : aelf::IEvent<Withdrawn>
  {
    public global::System.Collections.Generic.IEnumerable<Withdrawn> GetIndexed()
    {
      return new List<Withdrawn>
      {
      };
    }

    public Withdrawn GetNonIndexed()
    {
      return new Withdrawn
      {
        ClaimInfos = ClaimInfos,
      };
    }
  }

  public partial class TokenRecovered : aelf::IEvent<TokenRecovered>
  {
    public global::System.Collections.Generic.IEnumerable<TokenRecovered> GetIndexed()
    {
      return new List<TokenRecovered>
      {
      };
    }

    public TokenRecovered GetNonIndexed()
    {
      return new TokenRecovered
      {
        PoolId = PoolId,
        Token = Token,
        Amount = Amount,
        Account = Account,
      };
    }
  }

  public partial class StakeInfoUpdated : aelf::IEvent<StakeInfoUpdated>
  {
    public global::System.Collections.Generic.IEnumerable<StakeInfoUpdated> GetIndexed()
    {
      return new List<StakeInfoUpdated>
      {
      };
    }

    public StakeInfoUpdated GetNonIndexed()
    {
      return new StakeInfoUpdated
      {
        StakeIds = StakeIds,
        PoolDatas = PoolDatas,
      };
    }
  }

  public partial class ConfigSet : aelf::IEvent<ConfigSet>
  {
    public global::System.Collections.Generic.IEnumerable<ConfigSet> GetIndexed()
    {
      return new List<ConfigSet>
      {
      };
    }

    public ConfigSet GetNonIndexed()
    {
      return new ConfigSet
      {
        Config = Config,
      };
    }
  }

  public partial class AdminSet : aelf::IEvent<AdminSet>
  {
    public global::System.Collections.Generic.IEnumerable<AdminSet> GetIndexed()
    {
      return new List<AdminSet>
      {
      };
    }

    public AdminSet GetNonIndexed()
    {
      return new AdminSet
      {
        Admin = Admin,
      };
    }
  }

  public partial class DappAdminSet : aelf::IEvent<DappAdminSet>
  {
    public global::System.Collections.Generic.IEnumerable<DappAdminSet> GetIndexed()
    {
      return new List<DappAdminSet>
      {
      };
    }

    public DappAdminSet GetNonIndexed()
    {
      return new DappAdminSet
      {
        DappId = DappId,
        Admin = Admin,
      };
    }
  }

  public partial class ContractConfigSet : aelf::IEvent<ContractConfigSet>
  {
    public global::System.Collections.Generic.IEnumerable<ContractConfigSet> GetIndexed()
    {
      return new List<ContractConfigSet>
      {
      };
    }

    public ContractConfigSet GetNonIndexed()
    {
      return new ContractConfigSet
      {
        EcoearnPointsContract = EcoearnPointsContract,
      };
    }
  }

  #endregion
  public static partial class EcoEarnTokensContractContainer
  {
    static readonly string __ServiceName = "EcoEarnTokensContract";

    #region Marshallers
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Tokens.RegisterInput> __Marshaller_RegisterInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Tokens.RegisterInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Tokens.SetDappAdminInput> __Marshaller_SetDappAdminInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Tokens.SetDappAdminInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Hash> __Marshaller_aelf_Hash = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Hash.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Tokens.DappInfo> __Marshaller_DappInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Tokens.DappInfo.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Tokens.CreateTokensPoolInput> __Marshaller_CreateTokensPoolInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Tokens.CreateTokensPoolInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Tokens.SetTokensPoolEndBlockNumberInput> __Marshaller_SetTokensPoolEndBlockNumberInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Tokens.SetTokensPoolEndBlockNumberInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Tokens.RestartTokensPoolInput> __Marshaller_RestartTokensPoolInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Tokens.RestartTokensPoolInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Tokens.SetTokensPoolUpdateAddressInput> __Marshaller_SetTokensPoolUpdateAddressInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Tokens.SetTokensPoolUpdateAddressInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Tokens.SetTokensPoolRewardReleasePeriodInput> __Marshaller_SetTokensPoolRewardReleasePeriodInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Tokens.SetTokensPoolRewardReleasePeriodInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Tokens.SetTokensPoolStakeConfigInput> __Marshaller_SetTokensPoolStakeConfigInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Tokens.SetTokensPoolStakeConfigInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Tokens.GetPoolInfoOutput> __Marshaller_GetPoolInfoOutput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Tokens.GetPoolInfoOutput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Tokens.PoolData> __Marshaller_PoolData = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Tokens.PoolData.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Address> __Marshaller_aelf_Address = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Address.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Int64Value> __Marshaller_google_protobuf_Int64Value = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Int64Value.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Tokens.StakeInput> __Marshaller_StakeInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Tokens.StakeInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Tokens.EarlyStakeInput> __Marshaller_EarlyStakeInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Tokens.EarlyStakeInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Tokens.StakeForInput> __Marshaller_StakeForInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Tokens.StakeForInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Tokens.StakeInfo> __Marshaller_StakeInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Tokens.StakeInfo.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Tokens.GetRewardOutput> __Marshaller_GetRewardOutput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Tokens.GetRewardOutput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Tokens.ClaimInfo> __Marshaller_ClaimInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Tokens.ClaimInfo.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Tokens.WithdrawInput> __Marshaller_WithdrawInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Tokens.WithdrawInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Tokens.RecoverTokenInput> __Marshaller_RecoverTokenInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Tokens.RecoverTokenInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Tokens.UpdateStakeInfoInput> __Marshaller_UpdateStakeInfoInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Tokens.UpdateStakeInfoInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Tokens.InitializeInput> __Marshaller_InitializeInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Tokens.InitializeInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::EcoEarn.Contracts.Tokens.Config> __Marshaller_Config = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EcoEarn.Contracts.Tokens.Config.Parser.ParseFrom);
    #endregion

    #region Methods
    static readonly aelf::Method<global::EcoEarn.Contracts.Tokens.RegisterInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Register = new aelf::Method<global::EcoEarn.Contracts.Tokens.RegisterInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Register",
        __Marshaller_RegisterInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EcoEarn.Contracts.Tokens.SetDappAdminInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetDappAdmin = new aelf::Method<global::EcoEarn.Contracts.Tokens.SetDappAdminInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetDappAdmin",
        __Marshaller_SetDappAdminInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Hash, global::EcoEarn.Contracts.Tokens.DappInfo> __Method_GetDappInfo = new aelf::Method<global::AElf.Types.Hash, global::EcoEarn.Contracts.Tokens.DappInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetDappInfo",
        __Marshaller_aelf_Hash,
        __Marshaller_DappInfo);

    static readonly aelf::Method<global::EcoEarn.Contracts.Tokens.CreateTokensPoolInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_CreateTokensPool = new aelf::Method<global::EcoEarn.Contracts.Tokens.CreateTokensPoolInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "CreateTokensPool",
        __Marshaller_CreateTokensPoolInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> __Method_CloseTokensPool = new aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "CloseTokensPool",
        __Marshaller_aelf_Hash,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EcoEarn.Contracts.Tokens.SetTokensPoolEndBlockNumberInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetTokensPoolEndBlockNumber = new aelf::Method<global::EcoEarn.Contracts.Tokens.SetTokensPoolEndBlockNumberInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetTokensPoolEndBlockNumber",
        __Marshaller_SetTokensPoolEndBlockNumberInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EcoEarn.Contracts.Tokens.RestartTokensPoolInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RestartTokensPool = new aelf::Method<global::EcoEarn.Contracts.Tokens.RestartTokensPoolInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "RestartTokensPool",
        __Marshaller_RestartTokensPoolInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EcoEarn.Contracts.Tokens.SetTokensPoolUpdateAddressInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetTokensPoolUpdateAddress = new aelf::Method<global::EcoEarn.Contracts.Tokens.SetTokensPoolUpdateAddressInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetTokensPoolUpdateAddress",
        __Marshaller_SetTokensPoolUpdateAddressInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EcoEarn.Contracts.Tokens.SetTokensPoolRewardReleasePeriodInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetTokensPoolRewardReleasePeriod = new aelf::Method<global::EcoEarn.Contracts.Tokens.SetTokensPoolRewardReleasePeriodInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetTokensPoolRewardReleasePeriod",
        __Marshaller_SetTokensPoolRewardReleasePeriodInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EcoEarn.Contracts.Tokens.SetTokensPoolStakeConfigInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetTokensPoolStakeConfig = new aelf::Method<global::EcoEarn.Contracts.Tokens.SetTokensPoolStakeConfigInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetTokensPoolStakeConfig",
        __Marshaller_SetTokensPoolStakeConfigInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Hash, global::EcoEarn.Contracts.Tokens.GetPoolInfoOutput> __Method_GetPoolInfo = new aelf::Method<global::AElf.Types.Hash, global::EcoEarn.Contracts.Tokens.GetPoolInfoOutput>(
        aelf::MethodType.View,
        __ServiceName,
        "GetPoolInfo",
        __Marshaller_aelf_Hash,
        __Marshaller_GetPoolInfoOutput);

    static readonly aelf::Method<global::AElf.Types.Hash, global::EcoEarn.Contracts.Tokens.PoolData> __Method_GetPoolData = new aelf::Method<global::AElf.Types.Hash, global::EcoEarn.Contracts.Tokens.PoolData>(
        aelf::MethodType.View,
        __ServiceName,
        "GetPoolData",
        __Marshaller_aelf_Hash,
        __Marshaller_PoolData);

    static readonly aelf::Method<global::AElf.Types.Hash, global::AElf.Types.Address> __Method_GetPoolAddress = new aelf::Method<global::AElf.Types.Hash, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetPoolAddress",
        __Marshaller_aelf_Hash,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_GetPoolCount = new aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetPoolCount",
        __Marshaller_aelf_Hash,
        __Marshaller_google_protobuf_Int64Value);

    static readonly aelf::Method<global::EcoEarn.Contracts.Tokens.StakeInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Stake = new aelf::Method<global::EcoEarn.Contracts.Tokens.StakeInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Stake",
        __Marshaller_StakeInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EcoEarn.Contracts.Tokens.EarlyStakeInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_EarlyStake = new aelf::Method<global::EcoEarn.Contracts.Tokens.EarlyStakeInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "EarlyStake",
        __Marshaller_EarlyStakeInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EcoEarn.Contracts.Tokens.StakeForInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_StakeFor = new aelf::Method<global::EcoEarn.Contracts.Tokens.StakeForInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "StakeFor",
        __Marshaller_StakeForInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Hash, global::EcoEarn.Contracts.Tokens.StakeInfo> __Method_GetStakeInfo = new aelf::Method<global::AElf.Types.Hash, global::EcoEarn.Contracts.Tokens.StakeInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetStakeInfo",
        __Marshaller_aelf_Hash,
        __Marshaller_StakeInfo);

    static readonly aelf::Method<global::AElf.Types.Hash, global::EcoEarn.Contracts.Tokens.GetRewardOutput> __Method_GetReward = new aelf::Method<global::AElf.Types.Hash, global::EcoEarn.Contracts.Tokens.GetRewardOutput>(
        aelf::MethodType.View,
        __ServiceName,
        "GetReward",
        __Marshaller_aelf_Hash,
        __Marshaller_GetRewardOutput);

    static readonly aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Unlock = new aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Unlock",
        __Marshaller_aelf_Hash,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Claim = new aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Claim",
        __Marshaller_aelf_Hash,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Hash, global::EcoEarn.Contracts.Tokens.ClaimInfo> __Method_GetClaimInfo = new aelf::Method<global::AElf.Types.Hash, global::EcoEarn.Contracts.Tokens.ClaimInfo>(
        aelf::MethodType.Action,
        __ServiceName,
        "GetClaimInfo",
        __Marshaller_aelf_Hash,
        __Marshaller_ClaimInfo);

    static readonly aelf::Method<global::EcoEarn.Contracts.Tokens.WithdrawInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Withdraw = new aelf::Method<global::EcoEarn.Contracts.Tokens.WithdrawInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Withdraw",
        __Marshaller_WithdrawInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EcoEarn.Contracts.Tokens.RecoverTokenInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RecoverToken = new aelf::Method<global::EcoEarn.Contracts.Tokens.RecoverTokenInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "RecoverToken",
        __Marshaller_RecoverTokenInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EcoEarn.Contracts.Tokens.UpdateStakeInfoInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UpdateStakeInfo = new aelf::Method<global::EcoEarn.Contracts.Tokens.UpdateStakeInfoInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "UpdateStakeInfo",
        __Marshaller_UpdateStakeInfoInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EcoEarn.Contracts.Tokens.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Initialize = new aelf::Method<global::EcoEarn.Contracts.Tokens.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Initialize",
        __Marshaller_InitializeInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::EcoEarn.Contracts.Tokens.Config, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetConfig = new aelf::Method<global::EcoEarn.Contracts.Tokens.Config, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetConfig",
        __Marshaller_Config,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::EcoEarn.Contracts.Tokens.Config> __Method_GetConfig = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::EcoEarn.Contracts.Tokens.Config>(
        aelf::MethodType.View,
        __ServiceName,
        "GetConfig",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_Config);

    static readonly aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetAdmin = new aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetAdmin",
        __Marshaller_aelf_Address,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address> __Method_GetAdmin = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetAdmin",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetContractConfig = new aelf::Method<global::AElf.Types.Address, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetContractConfig",
        __Marshaller_aelf_Address,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address> __Method_GetContractConfig = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetContractConfig",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_aelf_Address);

    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::AElf.Standards.ACS12.Acs12Reflection.Descriptor.Services[0],
          global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion

    /// <summary>Base class for the contract of EcoEarnTokensContract</summary>
    // public abstract partial class EcoEarnTokensContractBase : AElf.Sdk.CSharp.CSharpSmartContract<EcoEarn.Contracts.Tokens.EcoEarnTokensContractState>
    // {
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty Register(global::EcoEarn.Contracts.Tokens.RegisterInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetDappAdmin(global::EcoEarn.Contracts.Tokens.SetDappAdminInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::EcoEarn.Contracts.Tokens.DappInfo GetDappInfo(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty CreateTokensPool(global::EcoEarn.Contracts.Tokens.CreateTokensPoolInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty CloseTokensPool(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetTokensPoolEndBlockNumber(global::EcoEarn.Contracts.Tokens.SetTokensPoolEndBlockNumberInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty RestartTokensPool(global::EcoEarn.Contracts.Tokens.RestartTokensPoolInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetTokensPoolUpdateAddress(global::EcoEarn.Contracts.Tokens.SetTokensPoolUpdateAddressInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetTokensPoolRewardReleasePeriod(global::EcoEarn.Contracts.Tokens.SetTokensPoolRewardReleasePeriodInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetTokensPoolStakeConfig(global::EcoEarn.Contracts.Tokens.SetTokensPoolStakeConfigInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::EcoEarn.Contracts.Tokens.GetPoolInfoOutput GetPoolInfo(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::EcoEarn.Contracts.Tokens.PoolData GetPoolData(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AElf.Types.Address GetPoolAddress(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Int64Value GetPoolCount(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty Stake(global::EcoEarn.Contracts.Tokens.StakeInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty EarlyStake(global::EcoEarn.Contracts.Tokens.EarlyStakeInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty StakeFor(global::EcoEarn.Contracts.Tokens.StakeForInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::EcoEarn.Contracts.Tokens.StakeInfo GetStakeInfo(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::EcoEarn.Contracts.Tokens.GetRewardOutput GetReward(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty Unlock(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty Claim(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::EcoEarn.Contracts.Tokens.ClaimInfo GetClaimInfo(global::AElf.Types.Hash input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty Withdraw(global::EcoEarn.Contracts.Tokens.WithdrawInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty RecoverToken(global::EcoEarn.Contracts.Tokens.RecoverTokenInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateStakeInfo(global::EcoEarn.Contracts.Tokens.UpdateStakeInfoInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty Initialize(global::EcoEarn.Contracts.Tokens.InitializeInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetConfig(global::EcoEarn.Contracts.Tokens.Config input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::EcoEarn.Contracts.Tokens.Config GetConfig(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetAdmin(global::AElf.Types.Address input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AElf.Types.Address GetAdmin(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetContractConfig(global::AElf.Types.Address input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AElf.Types.Address GetContractConfig(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    // }
    //
    // public static aelf::ServerServiceDefinition BindService(EcoEarnTokensContractBase serviceImpl)
    // {
    //   return aelf::ServerServiceDefinition.CreateBuilder()
    //       .AddDescriptors(Descriptors)
    //       .AddMethod(__Method_Register, serviceImpl.Register)
    //       .AddMethod(__Method_SetDappAdmin, serviceImpl.SetDappAdmin)
    //       .AddMethod(__Method_GetDappInfo, serviceImpl.GetDappInfo)
    //       .AddMethod(__Method_CreateTokensPool, serviceImpl.CreateTokensPool)
    //       .AddMethod(__Method_CloseTokensPool, serviceImpl.CloseTokensPool)
    //       .AddMethod(__Method_SetTokensPoolEndBlockNumber, serviceImpl.SetTokensPoolEndBlockNumber)
    //       .AddMethod(__Method_RestartTokensPool, serviceImpl.RestartTokensPool)
    //       .AddMethod(__Method_SetTokensPoolUpdateAddress, serviceImpl.SetTokensPoolUpdateAddress)
    //       .AddMethod(__Method_SetTokensPoolRewardReleasePeriod, serviceImpl.SetTokensPoolRewardReleasePeriod)
    //       .AddMethod(__Method_SetTokensPoolStakeConfig, serviceImpl.SetTokensPoolStakeConfig)
    //       .AddMethod(__Method_GetPoolInfo, serviceImpl.GetPoolInfo)
    //       .AddMethod(__Method_GetPoolData, serviceImpl.GetPoolData)
    //       .AddMethod(__Method_GetPoolAddress, serviceImpl.GetPoolAddress)
    //       .AddMethod(__Method_GetPoolCount, serviceImpl.GetPoolCount)
    //       .AddMethod(__Method_Stake, serviceImpl.Stake)
    //       .AddMethod(__Method_EarlyStake, serviceImpl.EarlyStake)
    //       .AddMethod(__Method_StakeFor, serviceImpl.StakeFor)
    //       .AddMethod(__Method_GetStakeInfo, serviceImpl.GetStakeInfo)
    //       .AddMethod(__Method_GetReward, serviceImpl.GetReward)
    //       .AddMethod(__Method_Unlock, serviceImpl.Unlock)
    //       .AddMethod(__Method_Claim, serviceImpl.Claim)
    //       .AddMethod(__Method_GetClaimInfo, serviceImpl.GetClaimInfo)
    //       .AddMethod(__Method_Withdraw, serviceImpl.Withdraw)
    //       .AddMethod(__Method_RecoverToken, serviceImpl.RecoverToken)
    //       .AddMethod(__Method_UpdateStakeInfo, serviceImpl.UpdateStakeInfo)
    //       .AddMethod(__Method_Initialize, serviceImpl.Initialize)
    //       .AddMethod(__Method_SetConfig, serviceImpl.SetConfig)
    //       .AddMethod(__Method_GetConfig, serviceImpl.GetConfig)
    //       .AddMethod(__Method_SetAdmin, serviceImpl.SetAdmin)
    //       .AddMethod(__Method_GetAdmin, serviceImpl.GetAdmin)
    //       .AddMethod(__Method_SetContractConfig, serviceImpl.SetContractConfig)
    //       .AddMethod(__Method_GetContractConfig, serviceImpl.GetContractConfig).Build();
    // }

  }
}
#endregion

